[
  {
    "fileName": "Retrolambda.java",
    "refactorings": [],
    "filePath": "retrolambda/src/main/java/net/orfjackal/retrolambda/Retrolambda.java",
    "commit": "https://github.com/orfjackal/retrolambda/commit/46b0d84de9c309bca48a99e572e6611693ed5236",
    "repository": "https://github.com/orfjackal/retrolambda.git",
    "fileType": "main"
  },
  {
    "fileName": "BytecodeFileVisitor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Rename Method protected abstract visit(bytecode byte[]) : void renamed to protected abstract visitClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 29,
        "description": "Extract Variable content : byte[] in method public visitFile(file Path, attrs BasicFileAttributes) : FileVisitResult from class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 24,
        "description": "Rename Parameter inputFile : Path to file : Path in method public visitFile(file Path, attrs BasicFileAttributes) : FileVisitResult from class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 36,
        "description": "Add Thrown Exception Type IOException in method protected abstract visitClass(bytecode byte[]) : void from class net.orfjackal.retrolambda.files.BytecodeFileVisitor",
        "type": "Add Thrown Exception Type"
      }
    ],
    "filePath": "retrolambda/src/main/java/net/orfjackal/retrolambda/files/BytecodeFileVisitor.java",
    "commit": "https://github.com/orfjackal/retrolambda/commit/46b0d84de9c309bca48a99e572e6611693ed5236",
    "repository": "https://github.com/orfjackal/retrolambda.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassSaver.java",
    "refactorings": [
      {
        "rightSideLineNumber": 20,
        "description": "Rename Method public save(bytecode byte[]) : void renamed to public saveClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 26,
        "description": "Extract Method public saveResource(relativePath Path, content byte[]) : void extracted from public save(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 30,
        "description": "Extract Variable relativePath : Path in method public saveResource(relativePath Path, content byte[]) : void from class net.orfjackal.retrolambda.files.ClassSaver",
        "type": "Extract Variable"
      }
    ],
    "filePath": "retrolambda/src/main/java/net/orfjackal/retrolambda/files/ClassSaver.java",
    "commit": "https://github.com/orfjackal/retrolambda/commit/46b0d84de9c309bca48a99e572e6611693ed5236",
    "repository": "https://github.com/orfjackal/retrolambda.git",
    "fileType": "main"
  },
  {
    "fileName": "LambdaClassSaver.java",
    "refactorings": [],
    "filePath": "retrolambda/src/main/java/net/orfjackal/retrolambda/lambdas/LambdaClassSaver.java",
    "commit": "https://github.com/orfjackal/retrolambda/commit/46b0d84de9c309bca48a99e572e6611693ed5236",
    "repository": "https://github.com/orfjackal/retrolambda.git",
    "fileType": "main"
  },
  {
    "fileName": "RetrolambdaTest.java",
    "refactorings": [],
    "filePath": "retrolambda/src/test/java/net/orfjackal/retrolambda/RetrolambdaTest.java",
    "commit": "https://github.com/orfjackal/retrolambda/commit/46b0d84de9c309bca48a99e572e6611693ed5236",
    "repository": "https://github.com/orfjackal/retrolambda.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractReference.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/AbstractReference.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "Allocator.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/Allocator.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "EventAllocator.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/EventAllocator.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "EventFactorySupplier.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/EventFactorySupplier.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "RecyclableNumber.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/RecyclableNumber.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "RecyclableString.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/RecyclableString.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "Reference.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/Reference.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "ReferenceCountingAllocator.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/ReferenceCountingAllocator.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/alloc/package-info.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "BufferAllocator.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/main/java/reactor/io/buffer/BufferAllocator.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "Event.java",
    "refactorings": [],
    "filePath": "reactor-bus/src/main/java/reactor/bus/Event.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "EventFactorySupplier.java",
    "refactorings": [],
    "filePath": "reactor-bus/src/main/java/reactor/bus/alloc/EventFactorySupplier.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "RecyclableString.java",
    "refactorings": [],
    "filePath": "reactor-core/src/main/java/reactor/core/alloc/RecyclableString.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "reactor-core/src/main/java/reactor/core/alloc/package-info.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractLifecycleDispatcher.java",
    "refactorings": [],
    "filePath": "reactor-core/src/main/java/reactor/core/dispatch/AbstractLifecycleDispatcher.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "Recyclable.java",
    "refactorings": [],
    "filePath": "reactor-core/src/main/java/reactor/core/support/Recyclable.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "Buffer.java",
    "refactorings": [],
    "filePath": "reactor-core/src/main/java/reactor/io/buffer/Buffer.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "Action.java",
    "refactorings": [],
    "filePath": "reactor-stream/src/main/java/reactor/rx/action/Action.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "main"
  },
  {
    "fileName": "EventAllocatorTests.java",
    "refactorings": [],
    "filePath": "reactor-alloc/src/test/java/reactor/alloc/EventAllocatorTests.java",
    "commit": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "repository": "https://github.com/reactor/reactor.git",
    "fileType": "test"
  },
  {
    "fileName": "ColumnFamilyStore.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/ColumnFamilyStore.java",
    "commit": "https://github.com/apache/cassandra/commit/f283ed29814403bde6350a2598cdd6e2c8b983d5",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CompactionManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 168,
        "description": "Rename Class org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionTask renamed to org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionCandidate",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 139,
        "description": "Inline Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> inlined to public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 124,
        "description": "Replace Generic With Diamond ArrayList<Future<?>> with ArrayList<> in method public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> from class org.apache.cassandra.db.compaction.CompactionManager",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/db/compaction/CompactionManager.java",
    "commit": "https://github.com/apache/cassandra/commit/f283ed29814403bde6350a2598cdd6e2c8b983d5",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CompactionMetrics.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/metrics/CompactionMetrics.java",
    "commit": "https://github.com/apache/cassandra/commit/f283ed29814403bde6350a2598cdd6e2c8b983d5",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CompactionsTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/db/compaction/CompactionsTest.java",
    "commit": "https://github.com/apache/cassandra/commit/f283ed29814403bde6350a2598cdd6e2c8b983d5",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractInsertAnalyzer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/analyze/AbstractInsertAnalyzer.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "Id.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/analyze/Id.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneQueryBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1032,
        "description": "Rename Method private validateNoUnsupportedFields(function Function, context Context) : String renamed to private rewriteAndValidateFields(function Function, context Context) : Function in class io.crate.lucene.LuceneQueryBuilder.Visitor",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1045,
        "description": "Inline Variable columnName : String in method private validateNoUnsupportedFields(function Function, context Context) : String from class io.crate.lucene.LuceneQueryBuilder.Visitor",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 1032,
        "description": "Invert Condition if(function.arguments().size() != 2) to if(function.arguments().size() == 2) in method private rewriteAndValidateFields(function Function, context Context) : Function from class io.crate.lucene.LuceneQueryBuilder.Visitor",
        "type": "Invert Condition"
      },
      {
        "rightSideLineNumber": 1032,
        "description": "Change Return Type String to Function in method private rewriteAndValidateFields(function Function, context Context) : Function from class io.crate.lucene.LuceneQueryBuilder.Visitor",
        "type": "Change Return Type"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/lucene/LuceneQueryBuilder.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "DocIndexMetaData.java",
    "refactorings": [
      {
        "rightSideLineNumber": 403,
        "description": "Extract Method private getCustomRoutingCol() : ColumnIdent extracted from private getRoutingCol() : ColumnIdent in class io.crate.metadata.doc.DocIndexMetaData",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 326,
        "description": "Invert Condition if(metaMap == null) to if(metaMap != null) in method private getPrimaryKey() : ImmutableList<ColumnIdent> from class io.crate.metadata.doc.DocIndexMetaData",
        "type": "Invert Condition"
      },
      {
        "rightSideLineNumber": 326,
        "description": "Invert Condition if(pKeys == null) to if(pKeys != null) in method private getPrimaryKey() : ImmutableList<ColumnIdent> from class io.crate.metadata.doc.DocIndexMetaData",
        "type": "Invert Condition"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/metadata/doc/DocIndexMetaData.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "DocSysColumns.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/metadata/doc/DocSysColumns.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "WhereClauseAnalyzerTest.java",
    "refactorings": [{
      "rightSideLineNumber": 215,
      "description": "Rename Method public testSelectById() : void renamed to public testSelectByIdWithCustomRouting() : void in class io.crate.analyze.where.WhereClauseAnalyzerTest",
      "type": "Rename Method"
    }],
    "filePath": "sql/src/test/java/io/crate/analyze/where/WhereClauseAnalyzerTest.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "WherePKIntegrationTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/integrationtests/WherePKIntegrationTest.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/lucene/LuceneQueryBuilderTest.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "TestingTableInfo.java",
    "refactorings": [{
      "rightSideLineNumber": 199,
      "description": "Remove Attribute Modifier final in attribute private hasAutoGeneratedPrimaryKey : boolean from class io.crate.metadata.table.TestingTableInfo",
      "type": "Remove Attribute Modifier"
    }],
    "filePath": "sql/src/test/java/io/crate/metadata/table/TestingTableInfo.java",
    "commit": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "RemoteBlockOutStream.java",
    "refactorings": [
      {
        "rightSideLineNumber": 94,
        "description": "Inline Variable allocateBytes : long in method package RemoteBlockOutStream(file TachyonFile, opType WriteType, blockIndex int, initialBytes long, tachyonConf TachyonConf) from class tachyon.client.RemoteBlockOutStream",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 54,
        "description": "Rename Attribute mOpen : boolean to mClosed : boolean in class tachyon.client.RemoteBlockOutStream",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "clients/unshaded/src/main/java/tachyon/client/RemoteBlockOutStream.java",
    "commit": "https://github.com/Alluxio/alluxio/commit/b0938501f1014cf663e33b44ed5bb9b24d19a358",
    "repository": "https://github.com/Alluxio/alluxio.git",
    "fileType": "main"
  },
  {
    "fileName": "BlockOutStreamIntegrationTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 72,
        "description": "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public disableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 84,
        "description": "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public enableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "integration-tests/src/test/java/tachyon/client/BlockOutStreamIntegrationTest.java",
    "commit": "https://github.com/Alluxio/alluxio/commit/b0938501f1014cf663e33b44ed5bb9b24d19a358",
    "repository": "https://github.com/Alluxio/alluxio.git",
    "fileType": "test"
  },
  {
    "fileName": "FacebookSdk.java",
    "refactorings": [
      {
        "rightSideLineNumber": 138,
        "description": "Extract Method public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int) : void in class com.facebook.FacebookSdk",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 185,
        "description": "Extract Method public sdkInitialize(applicationContext Context, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context) : void in class com.facebook.FacebookSdk",
        "type": "Extract Method"
      }
    ],
    "filePath": "facebook/src/com/facebook/FacebookSdk.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "FacebookSdkVersion.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/FacebookSdkVersion.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphRequest.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/GraphRequest.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "AttributionIdentifiers.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/internal/AttributionIdentifiers.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ServerProtocol.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/internal/ServerProtocol.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "Utility.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/internal/Utility.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "KatanaProxyLoginMethodHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 130,
        "description": "Extract Method private handleResultCancel(request LoginClient.Request, data Intent) : LoginClient.Result extracted from package onActivityResult(requestCode int, resultCode int, data Intent) : boolean in class com.facebook.login.KatanaProxyLoginMethodHandler",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Extract Method private getError(extras Bundle) : String extracted from private handleResultOk(request LoginClient.Request, data Intent) : LoginClient.Result in class com.facebook.login.KatanaProxyLoginMethodHandler",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 152,
        "description": "Extract Method private getErrorMessage(extras Bundle) : String extracted from private handleResultOk(request LoginClient.Request, data Intent) : LoginClient.Result in class com.facebook.login.KatanaProxyLoginMethodHandler",
        "type": "Extract Method"
      }
    ],
    "filePath": "facebook/src/com/facebook/login/KatanaProxyLoginMethodHandler.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "LoginBehavior.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/login/LoginBehavior.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "LoginManager.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/login/LoginManager.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "LoginButton.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/login/widget/LoginButton.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareApi.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/share/ShareApi.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareConstants.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/share/internal/ShareConstants.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareFeedContent.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/share/internal/ShareFeedContent.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareInternalUtility.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/share/internal/ShareInternalUtility.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "WebDialogParameters.java",
    "refactorings": [],
    "filePath": "facebook/src/com/facebook/share/internal/WebDialogParameters.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareContent.java",
    "refactorings": [{
      "rightSideLineNumber": 50,
      "description": "Change Method Access Modifier package to protected in method protected ShareContent(in Parcel) from class com.facebook.share.model.ShareContent",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "facebook/src/com/facebook/share/model/ShareContent.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareDialog.java",
    "refactorings": [
      {
        "rightSideLineNumber": 347,
        "description": "Extract Variable params : Bundle in method public createAppCall(content ShareContent) : AppCall from class com.facebook.share.widget.ShareDialog.FeedHandler",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 333,
        "description": "Remove Variable Modifier final in variable linkContent : ShareLinkContent in method public createAppCall(content ShareContent) : AppCall from class com.facebook.share.widget.ShareDialog.FeedHandler",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 333,
        "description": "Remove Variable Modifier final in variable appCall : AppCall in method public createAppCall(content ShareContent) : AppCall from class com.facebook.share.widget.ShareDialog.FeedHandler",
        "type": "Remove Variable Modifier"
      }
    ],
    "filePath": "facebook/src/com/facebook/share/widget/ShareDialog.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "SettingsFragment.java",
    "refactorings": [],
    "filePath": "samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "main"
  },
  {
    "fileName": "ApplicationTest.java",
    "refactorings": [],
    "filePath": "facebook/junitTests/src/test/java/com/facebook/ApplicationTest.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphRequestTest.java",
    "refactorings": [],
    "filePath": "facebook/junitTests/src/test/java/com/facebook/GraphRequestTest.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "LoginClientTest.java",
    "refactorings": [],
    "filePath": "facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "LoginHandlerTestCase.java",
    "refactorings": [],
    "filePath": "facebook/junitTests/src/test/java/com/facebook/login/LoginHandlerTestCase.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "LoginManagerTest.java",
    "refactorings": [],
    "filePath": "facebook/junitTests/src/test/java/com/facebook/login/LoginManagerTest.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "LoginResultTest.java",
    "refactorings": [],
    "filePath": "facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "AsyncRequestTests.java",
    "refactorings": [],
    "filePath": "facebook/tests/src/com/facebook/AsyncRequestTests.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "BatchRequestTests.java",
    "refactorings": [],
    "filePath": "facebook/tests/src/com/facebook/BatchRequestTests.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "FacebookActivityTestCase.java",
    "refactorings": [],
    "filePath": "facebook/tests/src/com/facebook/FacebookActivityTestCase.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "RequestTests.java",
    "refactorings": [{
      "rightSideLineNumber": 57,
      "description": "Rename Attribute TEST_OG_TYPE : String to TEST_OG_OBJECT_TYPE : String in class com.facebook.RequestTests",
      "type": "Rename Attribute"
    }],
    "filePath": "facebook/tests/src/com/facebook/RequestTests.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "LoginClientTests.java",
    "refactorings": [],
    "filePath": "facebook/tests/src/com/facebook/login/LoginClientTests.java",
    "commit": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "fileType": "test"
  },
  {
    "fileName": "SingularityDeployHealthHelper.java",
    "refactorings": [{
      "rightSideLineNumber": 89,
      "description": "Add Parameter isDeployPending : boolean in method private getHealthcheckDeployState(deploy SingularityDeploy, matchingActiveTasks Collection<SingularityTaskId>, isDeployPending boolean) : DeployHealth from class com.hubspot.singularity.scheduler.SingularityDeployHealthHelper",
      "type": "Add Parameter"
    }],
    "filePath": "SingularityService/src/main/java/com/hubspot/singularity/scheduler/SingularityDeployHealthHelper.java",
    "commit": "https://github.com/HubSpot/Singularity/commit/944aea445051891280a8ab7fbbd514c19646f1ab",
    "repository": "https://github.com/HubSpot/Singularity.git",
    "fileType": "main"
  },
  {
    "fileName": "SingularitySchedulerTestBase.java",
    "refactorings": [{
      "rightSideLineNumber": 211,
      "description": "Add Parameter updateTime : long in method protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, updateTime long, instanceNo int, initialTaskState TaskState) : SingularityTask from class com.hubspot.singularity.SingularitySchedulerTestBase",
      "type": "Add Parameter"
    }],
    "filePath": "SingularityService/src/test/java/com/hubspot/singularity/SingularitySchedulerTestBase.java",
    "commit": "https://github.com/HubSpot/Singularity/commit/944aea445051891280a8ab7fbbd514c19646f1ab",
    "repository": "https://github.com/HubSpot/Singularity.git",
    "fileType": "test"
  },
  {
    "fileName": "SingularitySchedulerTest.java",
    "refactorings": [],
    "filePath": "SingularityService/src/test/java/com/hubspot/singularity/scheduler/SingularitySchedulerTest.java",
    "commit": "https://github.com/HubSpot/Singularity/commit/944aea445051891280a8ab7fbbd514c19646f1ab",
    "repository": "https://github.com/HubSpot/Singularity.git",
    "fileType": "test"
  },
  {
    "fileName": "BufferBuilder.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/BufferBuilder.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientMessageBuilder.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/ClientMessageBuilder.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageFlyweight.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/MessageFlyweight.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ParameterUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 22,
        "description": "Add Class Modifier final in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "type": "Add Class Modifier"
      },
      {
        "rightSideLineNumber": 29,
        "description": "Extract Attribute private UTF8_MAX_BYTES_PER_CHAR : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "type": "Extract Attribute"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/ParameterUtil.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "SafeBuffer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/SafeBuffer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "UnsafeBuffer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/UnsafeBuffer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Bits.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/Bits.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Preconditions.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/Preconditions.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "QuickMath.java",
    "refactorings": [
      {
        "rightSideLineNumber": 69,
        "description": "Add Parameter Modifier final in parameter value : int in method public nextPowerOfTwo(value int) : int from class com.hazelcast.util.QuickMath",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Add Parameter Modifier final in parameter value : long in method public nextPowerOfTwo(value long) : long from class com.hazelcast.util.QuickMath",
        "type": "Add Parameter Modifier"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/QuickMath.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "BiInt2ObjectMap.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/BiInt2ObjectMap.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Hashing.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/Hashing.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Int2ObjectHashMap.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/Int2ObjectHashMap.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "IntHashSet.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/IntHashSet.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "IntIterator.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/IntIterator.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Long2LongHashMap.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/Long2LongHashMap.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Long2ObjectHashMap.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/Long2ObjectHashMap.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LongHashSet.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/LongHashSet.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LongIterator.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/LongIterator.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MapDelegatingSet.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/MapDelegatingSet.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/collection/package-info.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "BiConsumer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/BiConsumer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Consumer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/Consumer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "IntFunction.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/IntFunction.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LongFunction.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/LongFunction.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LongLongConsumer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/LongLongConsumer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Predicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/Predicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Supplier.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/Supplier.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/function/package-info.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "QuickMathTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/util/QuickMathTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "BiInt2ObjectMapTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/util/collection/BiInt2ObjectMapTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "Int2ObjectHashMapTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/util/collection/Int2ObjectHashMapTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "IntHashSetTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/util/collection/IntHashSetTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "Long2LongHashMapTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/util/collection/Long2LongHashMapTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "Long2ObjectHashMapTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/util/collection/Long2ObjectHashMapTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "AutoAnnotationProcessor.java",
    "refactorings": [],
    "filePath": "value/src/main/java/com/google/auto/value/processor/AutoAnnotationProcessor.java",
    "commit": "https://github.com/google/auto/commit/8967e7c33c59e1336e1e3b4671293ced5697fca6",
    "repository": "https://github.com/google/auto.git",
    "fileType": "main"
  },
  {
    "fileName": "AutoValueProcessor.java",
    "refactorings": [],
    "filePath": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java",
    "commit": "https://github.com/google/auto/commit/8967e7c33c59e1336e1e3b4671293ced5697fca6",
    "repository": "https://github.com/google/auto.git",
    "fileType": "main"
  },
  {
    "fileName": "AutoAnnotationCompilationTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 359,
        "description": "Extract Method private doTestMissingClass(tempDir File) : void extracted from public testMissingClass() : void in class com.google.auto.value.processor.AutoAnnotationCompilationTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 354,
        "description": "Add Thrown Exception Type IOException in method public testMissingClass() : void from class com.google.auto.value.processor.AutoAnnotationCompilationTest",
        "type": "Add Thrown Exception Type"
      }
    ],
    "filePath": "value/src/test/java/com/google/auto/value/processor/AutoAnnotationCompilationTest.java",
    "commit": "https://github.com/google/auto/commit/8967e7c33c59e1336e1e3b4671293ced5697fca6",
    "repository": "https://github.com/google/auto.git",
    "fileType": "test"
  },
  {
    "fileName": "Http2ConnectionHandler.java",
    "refactorings": [],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java",
    "commit": "https://github.com/netty/netty/commit/8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "StreamBufferingEncoder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 67,
        "description": "Rename Class io.netty.handler.codec.http2.StreamBufferingEncoder.GoAwayException renamed to io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 224,
        "description": "Inline Method private cancelPendingStreams() : void inlined to public close() : void in class io.netty.handler.codec.http2.StreamBufferingEncoder",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 226,
        "description": "Change Variable Type e : Exception to e : Http2ChannelClosedException in method public close() : void from class io.netty.handler.codec.http2.StreamBufferingEncoder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Change Attribute Type debugData : ByteBuf to debugData : ByteString in class io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 81,
        "description": "Change Parameter Type debugData : ByteBuf to debugData : ByteString in method public Http2GoAwayException(lastStreamId int, errorCode long, debugData ByteString) from class io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Change Return Type ByteBuf to ByteString in method public debugData() : ByteString from class io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
        "type": "Change Return Type"
      }
    ],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/StreamBufferingEncoder.java",
    "commit": "https://github.com/netty/netty/commit/8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "StreamBufferingEncoderTest.java",
    "refactorings": [],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/StreamBufferingEncoderTest.java",
    "commit": "https://github.com/netty/netty/commit/8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "QuartzComponent.java",
    "refactorings": [{
      "rightSideLineNumber": 340,
      "description": "Extract Method private storeCamelContextInQuartzContext() : SchedulerContext extracted from private createAndInitScheduler() : void in class org.apache.camel.component.quartz2.QuartzComponent",
      "type": "Extract Method"
    }],
    "filePath": "components/camel-quartz2/src/main/java/org/apache/camel/component/quartz2/QuartzComponent.java",
    "commit": "https://github.com/apache/camel/commit/cb0935e3af05b333b5c85a4fb3b1846836218f11",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "QuartzComponentCamelContextSharedSchedulerTest.java",
    "refactorings": [],
    "filePath": "components/camel-quartz2/src/test/java/org/apache/camel/component/quartz2/QuartzComponentCamelContextSharedSchedulerTest.java",
    "commit": "https://github.com/apache/camel/commit/cb0935e3af05b333b5c85a4fb3b1846836218f11",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "CaptchaActivity.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/activities/CaptchaActivity.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentEditActivity.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/activities/CommentEditActivity.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentReplyActivity.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/activities/CommentReplyActivity.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "ImageViewActivity.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/activities/ImageViewActivity.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "InboxListingActivity.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/activities/InboxListingActivity.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "PostSubmitActivity.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/activities/PostSubmitActivity.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "MainMenuAdapter.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/adapters/MainMenuAdapter.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "AndroidApi.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/common/AndroidApi.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "General.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/common/General.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "PrefsUtility.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/common/PrefsUtility.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountListDialog.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/fragments/AccountListDialog.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "MainMenuFragment.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/fragments/MainMenuFragment.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "SessionListDialog.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/fragments/SessionListDialog.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "UserProfileDialog.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/fragments/UserProfileDialog.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "WebViewFragment.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/fragments/WebViewFragment.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "RedditSubredditSubscriptionManager.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/reddit/api/RedditSubredditSubscriptionManager.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "RedditPreparedComment.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/reddit/prepared/RedditPreparedComment.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "RedditPreparedPost.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/reddit/prepared/RedditPreparedPost.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "ImageViewTileLoader.java",
    "refactorings": [],
    "filePath": "src/main/java/org/quantumbadger/redreader/views/imageview/ImageViewTileLoader.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "main"
  },
  {
    "fileName": "GeneralTest.java",
    "refactorings": [],
    "filePath": "src/test/java/org/quantumbadger/redreader/test/general/GeneralTest.java",
    "commit": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "fileType": "test"
  },
  {
    "fileName": "ConnectorFactory.java",
    "refactorings": [],
    "filePath": "main/src/cgeo/geocaching/connector/ConnectorFactory.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "TerraCachingConnector.java",
    "refactorings": [],
    "filePath": "main/src/cgeo/geocaching/connector/tc/TerraCachingConnector.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "TerraCachingLogType.java",
    "refactorings": [],
    "filePath": "main/src/cgeo/geocaching/connector/tc/TerraCachingLogType.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "TerraCachingType.java",
    "refactorings": [],
    "filePath": "main/src/cgeo/geocaching/connector/tc/TerraCachingType.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "GPXParser.java",
    "refactorings": [{
      "rightSideLineNumber": 1156,
      "description": "Add Method Annotation @SuppressWarnings(\"static-method\") in method protected afterParsing(cache Geocache) : void from class cgeo.geocaching.files.GPXParser",
      "type": "Add Method Annotation"
    }],
    "filePath": "main/src/cgeo/geocaching/files/GPXParser.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "TerraCachingConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/TerraCachingConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "TerraCachingConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/tc/TerraCachingConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "GPXParserTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/files/GPXParserTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "CaffeModelToJavaClass.java",
    "refactorings": [{
      "rightSideLineNumber": 39,
      "description": "Extract Method public readCaffeModel(is InputStream, sizeLimitMb int) : NetParameter extracted from public readCaffeModel(caffeModelPath String, sizeLimitMb int) : NetParameter in class org.deeplearning4j.translate.CaffeModelToJavaClass",
      "type": "Extract Method"
    }],
    "filePath": "dl4j-caffe/src/main/java/org/deeplearning4j/translate/CaffeModelToJavaClass.java",
    "commit": "https://github.com/deeplearning4j/deeplearning4j/commit/3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CaffeTest.java",
    "refactorings": [],
    "filePath": "dl4j-caffe/src/test/java/org/deeplearning4j/translate/CaffeTest.java",
    "commit": "https://github.com/deeplearning4j/deeplearning4j/commit/3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeVariableName.java",
    "refactorings": [],
    "filePath": "src/main/java/com/squareup/javapoet/TypeVariableName.java",
    "commit": "https://github.com/square/javapoet/commit/5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
    "repository": "https://github.com/square/javapoet.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractTypesTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/squareup/javapoet/AbstractTypesTest.java",
    "commit": "https://github.com/square/javapoet/commit/5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
    "repository": "https://github.com/square/javapoet.git",
    "fileType": "test"
  },
  {
    "fileName": "TypesEclipseTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/squareup/javapoet/TypesEclipseTest.java",
    "commit": "https://github.com/square/javapoet/commit/5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
    "repository": "https://github.com/square/javapoet.git",
    "fileType": "test"
  },
  {
    "fileName": "TypesTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 31,
        "description": "Rename Method private getElement(clazz Class<?>) : TypeElement renamed to protected getElements() : Elements in class com.squareup.javapoet.TypesTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Change Return Type TypeElement to Elements in method protected getElements() : Elements from class com.squareup.javapoet.TypesTest",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Remove Parameter clazz : Class<?> in method private getElement(clazz Class<?>) : TypeElement from class com.squareup.javapoet.TypesTest",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Add Method Annotation @Override in method protected getElements() : Elements from class com.squareup.javapoet.TypesTest",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Change Method Access Modifier private to protected in method protected getElements() : Elements from class com.squareup.javapoet.TypesTest",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "src/test/java/com/squareup/javapoet/TypesTest.java",
    "commit": "https://github.com/square/javapoet/commit/5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
    "repository": "https://github.com/square/javapoet.git",
    "fileType": "test"
  },
  {
    "fileName": "PackageNameTest.java",
    "refactorings": [],
    "filePath": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/febbc986cb25ed460ea601c0a68c7d2597f89ee4",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "InputVariableDeclarationUsageDistanceCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 780,
      "description": "Rename Class com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.writer renamed to com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.otherWriter",
      "type": "Rename Class"
    }],
    "filePath": "src/it/resources/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/InputVariableDeclarationUsageDistanceCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/febbc986cb25ed460ea601c0a68c7d2597f89ee4",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "PackageNameInputBad.java",
    "refactorings": [],
    "filePath": "src/it/resources/com/google/checkstyle/test/chapter5naming/rule521packageNamesCamelCase/PackageNameInputBad.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/febbc986cb25ed460ea601c0a68c7d2597f89ee4",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "MavenSettings.java",
    "refactorings": [],
    "filePath": "spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/MavenSettings.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "MavenSettingsReader.java",
    "refactorings": [],
    "filePath": "spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/MavenSettingsReader.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryConfigurationFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 68,
        "description": "Add Parameter localRepository : String in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 68,
        "description": "Change Method Access Modifier public to private in method private addDefaultCacheAsRepository(localRepository String, repositoryConfiguration List<RepositoryConfiguration>) : void from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 90,
        "description": "Parameterize Variable localRepository : String to localRepository : String in method private getLocalRepositoryDirectory(localRepository String) : File from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/RepositoryConfigurationFactory.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "SettingsXmlRepositorySystemSessionAutoConfiguration.java",
    "refactorings": [{
      "rightSideLineNumber": 41,
      "description": "Change Variable Type settings : Settings to settings : MavenSettings in method public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
      "type": "Change Variable Type"
    }],
    "filePath": "spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfiguration.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryConfigurationFactoryTests.java",
    "refactorings": [],
    "filePath": "spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/RepositoryConfigurationFactoryTests.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "test"
  },
  {
    "fileName": "SettingsXmlRepositorySystemSessionAutoConfigurationTests.java",
    "refactorings": [{
      "rightSideLineNumber": 108,
      "description": "Add Variable Modifier final in variable session : DefaultRepositorySystemSession in method private assertSessionCustomization(userHome String) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfigurationTests",
      "type": "Add Variable Modifier"
    }],
    "filePath": "spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "test"
  },
  {
    "fileName": "SystemProperties.java",
    "refactorings": [],
    "filePath": "spring-boot-cli/src/test/java/org/springframework/boot/cli/util/SystemProperties.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "test"
  },
  {
    "fileName": "HazelcastClient.java",
    "refactorings": [],
    "filePath": "hazelcast-client-new/src/main/java/com/hazelcast/client/HazelcastClient.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientConnection.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Change Attribute Access Modifier private to protected in attribute protected connectionId : int from class com.hazelcast.client.connection.nio.ClientConnection",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 195,
        "description": "Change Method Access Modifier private to protected in method protected innerClose() : void from class com.hazelcast.client.connection.nio.ClientConnection",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "hazelcast-client-new/src/main/java/com/hazelcast/client/connection/nio/ClientConnection.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientConnectionManagerImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 88,
        "description": "Remove Attribute Modifier final in attribute private inSelector : IOSelector from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 89,
        "description": "Remove Attribute Modifier final in attribute private outSelector : IOSelector from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 84,
        "description": "Change Attribute Access Modifier private to protected in attribute protected connectionIdGen : AtomicInteger from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 101,
        "description": "Change Attribute Access Modifier private to protected in attribute protected alive : boolean from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Extract Method protected initializeSelectors(client HazelcastClientInstanceImpl) : void extracted from public ClientConnectionManagerImpl(client HazelcastClientInstanceImpl, addressTranslator AddressTranslator) in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 162,
        "description": "Extract Method protected startSelectors() : void extracted from public start() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Extract Method protected shutdownSelectors() : void extracted from public shutdown() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 234,
        "description": "Change Method Access Modifier private to protected in method protected createSocketConnection(address Address) : ClientConnection from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "hazelcast-client-new/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientServiceFactory.java",
    "refactorings": [],
    "filePath": "hazelcast-client-new/src/main/java/com/hazelcast/client/impl/ClientServiceFactory.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultClientServiceFactory.java",
    "refactorings": [],
    "filePath": "hazelcast-client-new/src/main/java/com/hazelcast/client/impl/DefaultClientServiceFactory.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HazelcastClientInstanceImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 135,
      "description": "Add Parameter clientServiceFactory : ClientServiceFactory in method public HazelcastClientInstanceImpl(config ClientConfig, clientServiceFactory ClientServiceFactory) from class com.hazelcast.client.impl.HazelcastClientInstanceImpl",
      "type": "Add Parameter"
    }],
    "filePath": "hazelcast-client-new/src/main/java/com/hazelcast/client/impl/HazelcastClientInstanceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HazelcastClient.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/main/java/com/hazelcast/client/HazelcastClient.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientConnection.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Change Attribute Access Modifier private to protected in attribute protected connectionId : int from class com.hazelcast.client.connection.nio.ClientConnection",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 195,
        "description": "Change Method Access Modifier private to protected in method protected innerClose() : void from class com.hazelcast.client.connection.nio.ClientConnection",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnection.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientConnectionManagerImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 87,
        "description": "Remove Attribute Modifier final in attribute private inSelector : IOSelector from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Remove Attribute Modifier final in attribute private outSelector : IOSelector from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Change Attribute Access Modifier private to protected in attribute protected connectionIdGen : AtomicInteger from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Change Attribute Access Modifier private to protected in attribute protected alive : boolean from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Extract Method protected initializeSelectors(client HazelcastClientInstanceImpl) : void extracted from public ClientConnectionManagerImpl(client HazelcastClientInstanceImpl, addressTranslator AddressTranslator) in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 162,
        "description": "Extract Method protected startSelectors() : void extracted from public start() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Extract Method protected shutdownSelectors() : void extracted from public shutdown() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 234,
        "description": "Change Method Access Modifier private to protected in method protected createSocketConnection(address Address) : ClientConnection from class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientServiceFactory.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/main/java/com/hazelcast/client/impl/ClientServiceFactory.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultClientServiceFactory.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/main/java/com/hazelcast/client/impl/DefaultClientServiceFactory.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HazelcastClientInstanceImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 133,
      "description": "Add Parameter clientServiceFactory : ClientServiceFactory in method public HazelcastClientInstanceImpl(config ClientConfig, clientServiceFactory ClientServiceFactory) from class com.hazelcast.client.impl.HazelcastClientInstanceImpl",
      "type": "Add Parameter"
    }],
    "filePath": "hazelcast-client/src/main/java/com/hazelcast/client/impl/HazelcastClientInstanceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientEngineImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEngineImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HazelcastFactoryTest.java",
    "refactorings": [],
    "filePath": "hazelcast-client-new/src/test/java/com/hazelcast/client/test/HazelcastFactoryTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestClientRegistry.java",
    "refactorings": [],
    "filePath": "hazelcast-client-new/src/test/java/com/hazelcast/client/test/TestClientRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHazelcastFactory.java",
    "refactorings": [],
    "filePath": "hazelcast-client-new/src/test/java/com/hazelcast/client/test/TestHazelcastFactory.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "ClientCompatibleTestsSuit.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/test/java/com/hazelcast/client/ClientCompatibleTestsSuit.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "HazelcastFactoryTest.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/test/java/com/hazelcast/client/test/HazelcastFactoryTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestClientRegistry.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/test/java/com/hazelcast/client/test/TestClientRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHazelcastFactory.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/test/java/com/hazelcast/client/test/TestHazelcastFactory.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "MapReduceTest.java",
    "refactorings": [{
      "rightSideLineNumber": 51,
      "description": "Rename Method private tripshutdown(instances HazelcastInstance...) : void renamed to private tripTerminate(instances HazelcastInstance...) : void in class com.hazelcast.mapreduce.MapReduceTest",
      "type": "Rename Method"
    }],
    "filePath": "hazelcast/src/test/java/com/hazelcast/mapreduce/MapReduceTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestEnvironment.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/test/TestEnvironment.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHazelcastInstanceFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Remove Class Modifier final in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Rename Method private TestHazelcastInstanceFactory(addresses Address[]) renamed to private init(initialNodeCount int) : void in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Remove Attribute Modifier final in attribute private count : int from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 39,
        "description": "Change Attribute Access Modifier public to private in attribute private mockNetwork : boolean from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Change Attribute Type addresses : Address[] to addresses : List<Address> in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Change Attribute Access Modifier private to protected in attribute protected addresses : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Remove Attribute Modifier final in attribute private addresses : Address[] from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Change Attribute Access Modifier private to protected in attribute protected registry : TestNodeRegistry from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Remove Attribute Modifier final in attribute private registry : TestNodeRegistry from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 38,
        "description": "Rename Attribute PORTS : AtomicInteger to ports : AtomicInteger in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 38,
        "description": "Remove Attribute Modifier static in attribute private PORTS : AtomicInteger from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 158,
        "description": "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(count int) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 158,
        "description": "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(addressArray String...) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 63,
        "description": "Rename Parameter addresses : Address[] to initialNodeCount : int in method private init(initialNodeCount int) : void from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 63,
        "description": "Change Parameter Type addresses : Address[] to initialNodeCount : int in method private init(initialNodeCount int) : void from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Change Variable Type addresses : Address[] to addresses : List<Address> in method private createAddresses(ports AtomicInteger, count int) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 133,
        "description": "Change Return Type Address[] to List<Address> in method private createAddresses(ports AtomicInteger, count int) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 133,
        "description": "Add Parameter ports : AtomicInteger in method private createAddresses(ports AtomicInteger, count int) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 149,
        "description": "Change Variable Type addresses : Address[] to addresses : List<Address> in method private createAddresses(ports AtomicInteger, addressArray String...) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Change Return Type Address[] to List<Address> in method private createAddresses(ports AtomicInteger, addressArray String...) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Add Parameter ports : AtomicInteger in method private createAddresses(ports AtomicInteger, addressArray String...) : List<Address> from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 154,
        "description": "Parameterize Attribute PORTS : AtomicInteger to ports : AtomicInteger in method protected createAddress(host String, port int) : Address from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Parameterize Attribute"
      },
      {
        "rightSideLineNumber": 154,
        "description": "Parameterize Attribute PORTS : AtomicInteger to ports : AtomicInteger in method protected createAddress(host String, port int) : Address from class com.hazelcast.test.TestHazelcastInstanceFactory",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/test/TestHazelcastInstanceFactory.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestNodeRegistry.java",
    "refactorings": [
      {
        "rightSideLineNumber": 102,
        "description": "Remove Parameter addresses : Address[] in method public MockNodeContext(addresses Address[], nodes ConcurrentMap<Address,NodeEngineImpl>, thisAddress Address, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockNodeContext",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 118,
        "description": "Replace Attribute With Variable addresses : Address[] to ioService : NodeIOService in method public createConnectionManager(node Node, serverSocketChannel ServerSocketChannel) : ConnectionManager from class com.hazelcast.test.TestNodeRegistry.MockNodeContext",
        "type": "Replace Attribute With Variable"
      },
      {
        "rightSideLineNumber": 150,
        "description": "Remove Parameter addresses : Address[] in method package MockJoiner(node Node, addresses Address[], nodes ConcurrentMap<Address,NodeEngineImpl>, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockJoiner",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 285,
        "description": "Add Parameter Modifier final in parameter remoteEndpoint : Address in method public registerConnection(remoteEndpoint Address, connection Connection) : boolean from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 285,
        "description": "Add Parameter Modifier final in parameter connection : Connection in method public registerConnection(remoteEndpoint Address, connection Connection) : boolean from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 287,
        "description": "Rename Parameter address : Address to remoteEndpoint : Address in method public registerConnection(remoteEndpoint Address, connection Connection) : boolean from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 311,
        "description": "Rename Parameter conn : Connection to connection : Connection in method public destroyConnection(connection Connection) : void from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 311,
        "description": "Add Parameter Modifier final in parameter connection : Connection in method public destroyConnection(connection Connection) : void from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 235,
        "description": "Change Parameter Type addresses : Address[] to ioService : IOService in method package MockConnectionManager(ioService IOService, nodes ConcurrentMap<Address,NodeEngineImpl>, node Node, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 235,
        "description": "Rename Parameter addresses : Address[] to ioService : IOService in method package MockConnectionManager(ioService IOService, nodes ConcurrentMap<Address,NodeEngineImpl>, node Node, joinerLock Object) from class com.hazelcast.test.TestNodeRegistry.MockConnectionManager",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 351,
        "description": "Change Class Access Modifier private to public in class com.hazelcast.test.TestNodeRegistry.MockConnection",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 352,
        "description": "Change Attribute Access Modifier package to protected in attribute protected localEndpoint : Address from class com.hazelcast.test.TestNodeRegistry.MockConnection",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 355,
        "description": "Change Attribute Access Modifier package to protected in attribute protected nodeEngine : NodeEngineImpl from class com.hazelcast.test.TestNodeRegistry.MockConnection",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 369,
        "description": "Extract Attribute private live : boolean in class com.hazelcast.test.TestNodeRegistry.MockConnection",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Change Class Access Modifier package to public in class com.hazelcast.test.TestNodeRegistry",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Change Method Access Modifier package to public in method public createNodeContext(address Address) : NodeContext from class com.hazelcast.test.TestNodeRegistry",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 64,
        "description": "Change Method Access Modifier package to public in method public getInstance(address Address) : HazelcastInstance from class com.hazelcast.test.TestNodeRegistry",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/test/TestNodeRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "HazelcastInstanceFactoryTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/util/HazelcastInstanceFactoryTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "MessageSecurityMetadataSourceRegistry.java",
    "refactorings": [],
    "filePath": "config/src/main/java/org/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractSecurityWebSocketMessageBrokerConfigurer.java",
    "refactorings": [{
      "rightSideLineNumber": 158,
      "description": "Extract Variable voter : MessageExpressionVoter<Object> in method public inboundChannelSecurity() : ChannelSecurityInterceptor from class org.springframework.security.config.annotation.web.socket.AbstractSecurityWebSocketMessageBrokerConfigurer",
      "type": "Extract Variable"
    }],
    "filePath": "config/src/main/java/org/springframework/security/config/annotation/web/socket/AbstractSecurityWebSocketMessageBrokerConfigurer.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "WebSocketMessageBrokerSecurityBeanDefinitionParser.java",
    "refactorings": [],
    "filePath": "config/src/main/java/org/springframework/security/config/websocket/WebSocketMessageBrokerSecurityBeanDefinitionParser.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "ExpressionBasedMessageSecurityMetadataSourceFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 73,
        "description": "Extract Method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>, handler SecurityExpressionHandler<Message<Object>>) : MessageSecurityMetadataSource extracted from public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>) : MessageSecurityMetadataSource in class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Parameterize Variable handler : DefaultMessageSecurityExpressionHandler<Object> to handler : SecurityExpressionHandler<Message<Object>> in method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>, handler SecurityExpressionHandler<Message<Object>>) : MessageSecurityMetadataSource from class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Change Variable Type handler : DefaultMessageSecurityExpressionHandler<Object> to handler : SecurityExpressionHandler<Message<Object>> in method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>, handler SecurityExpressionHandler<Message<Object>>) : MessageSecurityMetadataSource from class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 73,
        "description": "Inline Variable handler : DefaultMessageSecurityExpressionHandler<Object> in method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>) : MessageSecurityMetadataSource from class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
        "type": "Inline Variable"
      }
    ],
    "filePath": "messaging/src/main/java/org/springframework/security/messaging/access/expression/ExpressionBasedMessageSecurityMetadataSourceFactory.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageSecurityExpressionRoot.java",
    "refactorings": [{
      "rightSideLineNumber": 22,
      "description": "Remove Class Modifier final in class org.springframework.security.messaging.access.expression.MessageSecurityExpressionRoot",
      "type": "Remove Class Modifier"
    }],
    "filePath": "messaging/src/main/java/org/springframework/security/messaging/access/expression/MessageSecurityExpressionRoot.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractSecurityWebSocketMessageBrokerConfigurerTests.java",
    "refactorings": [],
    "filePath": "config/src/test/java/org/springframework/security/config/annotation/web/socket/AbstractSecurityWebSocketMessageBrokerConfigurerTests.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "test"
  },
  {
    "fileName": "CharSeeker.java",
    "refactorings": [],
    "filePath": "community/csv/src/main/java/org/neo4j/csv/reader/CharSeeker.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BranchCollisionPolicies.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/graphdb/traversal/BranchCollisionPolicies.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TopLevelTransaction.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/TopLevelTransaction.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionEventHandlers.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/TransactionEventHandlers.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaWrite.java",
    "refactorings": [{
      "rightSideLineNumber": 34,
      "description": "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.api.SchemaWrite",
      "type": "Remove Thrown Exception Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/SchemaWrite.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AllEntriesLabelScanReader.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/direct/AllEntriesLabelScanReader.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BeginTransactionFailureException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/BeginTransactionFailureException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ConstraintCreationException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/ConstraintCreationException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityNotFoundException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/EntityNotFoundException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ReleaseLocksFailedKernelException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/ReleaseLocksFailedKernelException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionForcefullyRolledBackException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/TransactionForcefullyRolledBackException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexNotFoundKernelException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/index/IndexNotFoundKernelException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AddIndexFailureException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/schema/AddIndexFailureException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaRuleNotFoundException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/exceptions/schema/SchemaRuleNotFoundException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ProviderMeta.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/index/ProviderMeta.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelScanReader.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/labelscan/LabelScanReader.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ReadableTxState.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/txstate/ReadableTxState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipChangeVisitorAdapter.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/txstate/RelationshipChangeVisitorAdapter.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseConfigurationMigrator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Add Attribute Modifier final in attribute private propertyKey : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Add Attribute Modifier final in attribute private deprecationMessage : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Add Method Annotation @Override in method public appliesTo(rawConfiguration Map<String,String>) : boolean from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Add Method Annotation @Override in method public apply(rawConfiguration Map<String,String>) : Map<String,String> from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Add Method Annotation @Override in method public getDeprecationMessage() : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.SpecificPropertyMigration",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 82,
        "description": "Add Attribute Modifier final in attribute private newKey : String from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.PropertyRenamed",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 90,
        "description": "Add Method Annotation @Override in method public setValueWithOldSetting(value String, rawConfiguration Map<String,String>) : void from class org.neo4j.kernel.configuration.BaseConfigurationMigrator.PropertyRenamed",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Add Attribute Modifier final in attribute private migrations : List<Migration> from class org.neo4j.kernel.configuration.BaseConfigurationMigrator",
        "type": "Add Attribute Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/configuration/BaseConfigurationMigrator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Config.java",
    "refactorings": [{
      "rightSideLineNumber": 63,
      "description": "Add Attribute Modifier final in attribute private bufferedLog : BufferingLog from class org.neo4j.kernel.configuration.Config",
      "type": "Add Attribute Modifier"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/configuration/Config.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "HasSettings.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/configuration/HasSettings.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemPropertiesConfiguration.java",
    "refactorings": [
      {
        "rightSideLineNumber": 37,
        "description": "Add Attribute Modifier final in attribute private settingsClasses : Iterable<Class<?>> from class org.neo4j.kernel.configuration.SystemPropertiesConfiguration",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Replace Generic With Diamond HashMap<String,String> with HashMap<> in method public apply(config Map<String,String>) : Map<String,String> from class org.neo4j.kernel.configuration.SystemPropertiesConfiguration",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/configuration/SystemPropertiesConfiguration.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ConstraintEnforcingEntityOperations.java",
    "refactorings": [{
      "rightSideLineNumber": 528,
      "description": "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
      "type": "Remove Thrown Exception Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/ConstraintEnforcingEntityOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DataIntegrityValidatingStatementOperations.java",
    "refactorings": [{
      "rightSideLineNumber": 105,
      "description": "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKey int) : IndexDescriptor from class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
      "type": "Remove Thrown Exception Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/DataIntegrityValidatingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockingStatementOperations.java",
    "refactorings": [{
      "rightSideLineNumber": 109,
      "description": "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKey int) : IndexDescriptor from class org.neo4j.kernel.impl.api.LockingStatementOperations",
      "type": "Remove Thrown Exception Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/LockingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationsFacade.java",
    "refactorings": [{
      "rightSideLineNumber": 778,
      "description": "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.impl.api.OperationsFacade",
      "type": "Remove Thrown Exception Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/OperationsFacade.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaState.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/SchemaState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StateHandlingStatementOperations.java",
    "refactorings": [
      {
        "rightSideLineNumber": 127,
        "description": "Add Method Annotation @Override in method public nodeCursor(statement KernelStatement, nodeId long) : NodeCursor from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 148,
        "description": "Add Method Annotation @Override in method public relationshipCursor(statement KernelStatement, relationshipId long) : RelationshipCursor from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/StateHandlingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreRelationshipIterable.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/StoreRelationshipIterable.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexProviderNotFoundException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexProviderNotFoundException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LegacyKernelOperations.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/LegacyKernelOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ReadOperations.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/ReadOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaOperations.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/SchemaOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaWriteOperations.java",
    "refactorings": [{
      "rightSideLineNumber": 35,
      "description": "Remove Thrown Exception Type AddIndexFailureException in method public indexCreate(state KernelStatement, labelId int, propertyKeyId int) : IndexDescriptor from class org.neo4j.kernel.impl.api.operations.SchemaWriteOperations",
      "type": "Remove Thrown Exception Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/SchemaWriteOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "WriteOperations.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/WriteOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelScanStoreProvider.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/scan/LabelScanStoreProvider.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipChangesForNode.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/state/RelationshipChangesForNode.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TxState.java",
    "refactorings": [
      {
        "rightSideLineNumber": 791,
        "description": "Add Method Annotation @Override in method public augmentSingleNodeCursor(cursor NodeCursor) : NodeCursor from class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 797,
        "description": "Add Method Annotation @Override in method public augmentPropertyCursor(cursor PropertyCursor, propertyContainerState PropertyContainerState) : PropertyCursor from class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 803,
        "description": "Add Method Annotation @Override in method public augmentLabelCursor(cursor LabelCursor, nodeState NodeState) : LabelCursor from class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 809,
        "description": "Add Method Annotation @Override in method public augmentSingleRelationshipCursor(cursor RelationshipCursor) : RelationshipCursor from class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 815,
        "description": "Add Method Annotation @Override in method public augmentNodeRelationshipCursor(cursor RelationshipCursor, nodeState NodeState, direction Direction, relTypes int[]) : RelationshipCursor from class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 1133,
        "description": "Replace Generic With Diamond DiffSets<Long> with DiffSets<> in method private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> from class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/state/TxState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheLoader.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/CacheLoader.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CursorRelationshipIterator.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/CursorRelationshipIterator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DiskLayer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/DiskLayer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreNodeRelationshipCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 42,
        "description": "Change Attribute Type instanceCache : InstanceCache<StoreNodeRelationshipCursor> to instanceCache : Consumer<StoreNodeRelationshipCursor> in class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Add Attribute Modifier final in attribute private instanceCache : Consumer<StoreNodeRelationshipCursor> from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 101,
        "description": "Add Method Annotation @Override in method public next() : boolean from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 63,
        "description": "Change Parameter Type instanceCache : InstanceCache<StoreNodeRelationshipCursor> to instanceCache : Consumer<StoreNodeRelationshipCursor> in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, relationshipStore RelationshipStore, groupRecord RelationshipGroupRecord, groupStore RelationshipGroupStore, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreNodeRelationshipCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BridgingCacheAccess.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/cache/BridgingCacheAccess.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ClockCache.java",
    "refactorings": [
      {
        "rightSideLineNumber": 33,
        "description": "Replace Generic With Diamond ConcurrentLinkedQueue<Page<V>> with ConcurrentLinkedQueue<> in attribute private clock : Queue<Page<V>> from class org.neo4j.kernel.impl.cache.ClockCache",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 34,
        "description": "Replace Generic With Diamond ConcurrentHashMap<K,Page<V>> with ConcurrentHashMap<> in attribute private cache : Map<K,Page<V>> from class org.neo4j.kernel.impl.cache.ClockCache",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Replace Generic With Diamond Page<V> with Page<> in method public put(key K, value V) : void from class org.neo4j.kernel.impl.cache.ClockCache",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 134,
        "description": "Replace Generic With Diamond HashSet<V> with HashSet<> in method public values() : Collection<V> from class org.neo4j.kernel.impl.cache.ClockCache",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/cache/ClockCache.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "HitCounter.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/cache/HitCounter.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LruCache.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/cache/LruCache.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheAccessBackDoor.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/core/CacheAccessBackDoor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphPropertiesProxy.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/core/GraphPropertiesProxy.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Add Attribute Modifier final in attribute private graphDatabaseService : GraphDatabaseService from class org.neo4j.kernel.impl.core.NodeManager",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Add Attribute Modifier final in attribute private relationshipTypeTokenHolder : RelationshipTypeTokenHolder from class org.neo4j.kernel.impl.core.NodeManager",
        "type": "Add Attribute Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/core/NodeManager.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenHolder.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/core/TokenHolder.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 371,
      "description": "Change Variable Type e : AlreadyIndexedException|AlreadyConstrainedException|AddIndexFailureException to e : AlreadyIndexedException|AlreadyConstrainedException in method public createIndexDefinition(label Label, propertyKey String) : IndexDefinition from class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl.GDBSchemaActions",
      "type": "Change Variable Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/coreapi/schema/SchemaImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexProviderStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/index/IndexProviderStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/locking/community/LockException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RWLock.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/locking/community/RWLock.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CommonAbstractStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/CommonAbstractStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "InvalidIdGeneratorException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/InvalidIdGeneratorException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NeoStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/NeoStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RecordStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/RecordStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/RelationshipStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipTypeTokenStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/RelationshipTypeTokenStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/SchemaStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreAccess.java",
    "refactorings": [{
      "rightSideLineNumber": 67,
      "description": "Add Attribute Modifier final in attribute private neoStore : NeoStore from class org.neo4j.kernel.impl.store.StoreAccess",
      "type": "Add Attribute Modifier"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/StoreAccess.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/TokenStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RecountFromTransactions.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/RecountFromTransactions.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CountsKeyType.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/keys/CountsKeyType.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexKey.java",
    "refactorings": [{
      "rightSideLineNumber": 83,
      "description": "Change Variable Type indexKey : org.neo4j.kernel.impl.store.counts.keys.IndexKey to indexKey : IndexKey in method public equals(other Object) : boolean from class org.neo4j.kernel.impl.store.counts.keys.IndexKey",
      "type": "Change Variable Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/keys/IndexKey.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexSampleKey.java",
    "refactorings": [{
      "rightSideLineNumber": 46,
      "description": "Change Variable Type that : org.neo4j.kernel.impl.store.counts.keys.IndexSampleKey to that : IndexSampleKey in method public compareTo(other CountsKey) : int from class org.neo4j.kernel.impl.store.counts.keys.IndexSampleKey",
      "type": "Change Variable Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/keys/IndexSampleKey.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexStatisticsKey.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/keys/IndexStatisticsKey.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeKey.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/keys/NodeKey.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipKey.java",
    "refactorings": [
      {
        "rightSideLineNumber": 79,
        "description": "Change Variable Type that : org.neo4j.kernel.impl.store.counts.keys.RelationshipKey to that : RelationshipKey in method public equals(o Object) : boolean from class org.neo4j.kernel.impl.store.counts.keys.RelationshipKey",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Change Variable Type that : org.neo4j.kernel.impl.store.counts.keys.RelationshipKey to that : RelationshipKey in method public compareTo(other CountsKey) : int from class org.neo4j.kernel.impl.store.counts.keys.RelationshipKey",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/keys/RelationshipKey.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Headers.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/Headers.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "KeyValueRecordSerializer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/KeyValueRecordSerializer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "KeyValueRecordVisitor.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/KeyValueRecordVisitor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeRecord.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/NodeRecord.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Record.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/Record.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CurrentDatabase.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/CurrentDatabase.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreFile.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/StoreFile.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Legacy19DynamicStringStoreReader.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/legacystore/v19/Legacy19DynamicStringStoreReader.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Legacy19Store.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/legacystore/v19/Legacy19Store.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Legacy20Store.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/legacystore/v20/Legacy20Store.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Legacy21Store.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/legacystore/v21/Legacy21Store.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Legacy22Store.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/legacystore/v22/Legacy22Store.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RecoveryVerificationException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/RecoveryVerificationException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionInfo.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/TransactionInfo.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogReader.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/command/LogReader.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogDeserializer.java",
    "refactorings": [{
      "rightSideLineNumber": 45,
      "description": "Remove Method Annotation @Override in method public logEntries(channel ReadableVersionableLogChannel) : IOCursor<LogEntry> from class org.neo4j.kernel.impl.transaction.log.LogDeserializer",
      "type": "Remove Method Annotation"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/LogDeserializer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingLogDataException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/MissingLogDataException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckPointThreshold.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointThreshold.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DataSourceManager.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/state/DataSourceManager.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BranchCollisionPolicies.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/traversal/BranchCollisionPolicies.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MonoDirectionalTraverserIterator.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/traversal/MonoDirectionalTraverserIterator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ArrayMap.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/ArrayMap.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Bits.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/Bits.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DirectionWrapper.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/DirectionWrapper.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "InstanceCache.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Add Method Annotation @Override in method public get() : T from class org.neo4j.kernel.impl.util.InstanceCache",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 54,
        "description": "Add Method Annotation @Override in method public accept(instance T) : void from class org.neo4j.kernel.impl.util.InstanceCache",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/InstanceCache.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IoPrimitiveUtils.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/IoPrimitiveUtils.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "JobScheduler.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/JobScheduler.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipFilter.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/RelationshipFilter.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Validators.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/Validators.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DiffSets.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/diffsets/DiffSets.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ReadableDiffSets.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/diffsets/ReadableDiffSets.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ReadableRelationshipDiffSets.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/diffsets/ReadableRelationshipDiffSets.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipDiffSets.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/diffsets/RelationshipDiffSets.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SuperReadableDiffSets.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/diffsets/SuperReadableDiffSets.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Callback.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/function/Callback.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ByteCounterMonitor.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/monitoring/ByteCounterMonitor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchInserterImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 896,
      "description": "Rename Parameter relationshipId : long to relId : long in method protected nextFrom(relId long, type int, startNode long, endNode long) : Long from class org.neo4j.unsafe.batchinsert.BatchInserterImpl.getRelationshipIds.new BatchRelationshipIterable<Long>",
      "type": "Rename Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchInserterImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchRelationshipIterable.java",
    "refactorings": [{
      "rightSideLineNumber": 56,
      "description": "Change Variable Type e : EntityNotFoundException to e : InvalidRecordException in method public BatchRelationshipIterable(neoStore NeoStore, nodeId long) from class org.neo4j.unsafe.batchinsert.BatchRelationshipIterable",
      "type": "Change Variable Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchRelationshipIterable.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Cache.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/index/impl/lucene/Cache.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Hits.java",
    "refactorings": [
      {
        "rightSideLineNumber": 69,
        "description": "Add Attribute Modifier final in attribute private weight : Weight from class org.neo4j.index.impl.lucene.Hits",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Add Attribute Modifier final in attribute private searcher : IndexSearcher from class org.neo4j.index.impl.lucene.Hits",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Add Attribute Modifier final in attribute private hitDocs : Vector<HitDoc> from class org.neo4j.index.impl.lucene.Hits",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 82,
        "description": "Add Attribute Modifier final in attribute private lengthAtStart : int from class org.neo4j.index.impl.lucene.Hits",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Add Attribute Modifier final in attribute private score : boolean from class org.neo4j.index.impl.lucene.Hits",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Remove Thrown Exception Type IOException in method private countDeletions(s IndexSearcher) : int from class org.neo4j.index.impl.lucene.Hits",
        "type": "Remove Thrown Exception Type"
      }
    ],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/index/impl/lucene/Hits.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneDataSource.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/index/impl/lucene/LuceneDataSource.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneIndexImplementation.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/index/impl/lucene/LuceneIndexImplementation.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneUtil.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/index/impl/lucene/LuceneUtil.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneKernelExtensionFactory.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/index/lucene/LuceneKernelExtensionFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphDatabaseFactory.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/database/GraphDatabaseFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NoSuchDatabaseProviderException.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/database/NoSuchDatabaseProviderException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PreflightFailedException.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/preflight/PreflightFailedException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "JsonBuildRuntimeException.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/rest/domain/JsonBuildRuntimeException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipDirection.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/rest/domain/RelationshipDirection.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StartNodeSameAsEndNodeException.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/rest/domain/StartNodeSameAsEndNodeException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SessionFactoryImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 45,
      "description": "Replace Generic With Diamond HashMap<String,ConsoleSessionCreator> with HashMap<> in attribute private engineCreators : Map<String,ConsoleSessionCreator> from class org.neo4j.server.rest.management.console.SessionFactoryImpl",
      "type": "Replace Generic With Diamond"
    }],
    "filePath": "community/server/src/main/java/org/neo4j/server/rest/management/console/SessionFactoryImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AuthenticationException.java",
    "refactorings": [{
      "rightSideLineNumber": 33,
      "description": "Add Attribute Modifier final in attribute private realm : String from class org.neo4j.server.rest.security.AuthenticationException",
      "type": "Add Attribute Modifier"
    }],
    "filePath": "community/server/src/main/java/org/neo4j/server/rest/security/AuthenticationException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PathNotFoundException.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/rest/web/PathNotFoundException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyValueException.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/rest/web/PropertyValueException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Job.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/rrd/Job.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Jetty9WebServer.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/web/Jetty9WebServer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "JettyLifeCycleListenerAdapter.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/web/JettyLifeCycleListenerAdapter.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "WebServer.java",
    "refactorings": [],
    "filePath": "community/server/src/main/java/org/neo4j/server/web/WebServer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Man.java",
    "refactorings": [
      {
        "rightSideLineNumber": 145,
        "description": "Remove Thrown Exception Type ShellException in method public printHelpString(out Output, server ShellServer, list boolean) : void from class org.neo4j.shell.apps.Man",
        "type": "Remove Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Replace Generic With Diamond ArrayList<String> with ArrayList<> in method public getAvailableCommands(server ShellServer) : Collection<String> from class org.neo4j.shell.apps.Man",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "community/shell/src/main/java/org/neo4j/shell/apps/Man.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ScriptExecutor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 48,
        "description": "Replace Generic With Diamond HashMap<String,Object> with HashMap<> in method public execute(line String, session Session, out Output) : void from class org.neo4j.shell.apps.extra.ScriptExecutor",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 73,
        "description": "Replace Generic With Diamond HashMap<String,Object> with HashMap<> in method private runScripts(interpreter Object, properties Map<String,Object>, line String, paths String[]) : void from class org.neo4j.shell.apps.extra.ScriptExecutor",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 96,
        "description": "Replace Generic With Diamond ArrayList<String> with ArrayList<> in method private getScriptArgs(reader ArgReader) : String[] from class org.neo4j.shell.apps.extra.ScriptExecutor",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Replace Generic With Diamond ArrayList<String> with ArrayList<> in method private getEnvPaths(session Session) : List<String> from class org.neo4j.shell.apps.extra.ScriptExecutor",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "community/shell/src/main/java/org/neo4j/shell/apps/extra/ScriptExecutor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLister.java",
    "refactorings": [],
    "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/ClassLister.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RmiLocation.java",
    "refactorings": [
      {
        "rightSideLineNumber": 37,
        "description": "Add Attribute Modifier final in attribute private host : String from class org.neo4j.shell.impl.RmiLocation",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 38,
        "description": "Add Attribute Modifier final in attribute private port : int from class org.neo4j.shell.impl.RmiLocation",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 39,
        "description": "Add Attribute Modifier final in attribute private name : String from class org.neo4j.shell.impl.RmiLocation",
        "type": "Add Attribute Modifier"
      }
    ],
    "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/RmiLocation.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SameJvmClient.java",
    "refactorings": [
      {
        "rightSideLineNumber": 39,
        "description": "Add Attribute Modifier final in attribute private out : Output from class org.neo4j.shell.impl.SameJvmClient",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 40,
        "description": "Add Attribute Modifier final in attribute private server : ShellServer from class org.neo4j.shell.impl.SameJvmClient",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 76,
        "description": "Add Method Annotation @Override in method public getOutput() : Output from class org.neo4j.shell.impl.SameJvmClient",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 82,
        "description": "Add Method Annotation @Override in method public getServer() : ShellServer from class org.neo4j.shell.impl.SameJvmClient",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/SameJvmClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ShellBootstrap.java",
    "refactorings": [],
    "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/ShellBootstrap.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BranchedDataException.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/BranchedDataException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MasterClient210.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterClient210.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MasterElectionInput.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterElectionInput.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreOutOfDateException.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/StoreOutOfDateException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestContextFactory.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/com/RequestContextFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockSessionAlreadyActiveException.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/com/master/LockSessionAlreadyActiveException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MasterClient.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/com/slave/MasterClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockableNode.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/LockableNode.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockableRelationship.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/LockableRelationship.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionSupport.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/transaction/TransactionSupport.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Neo4jMatchers.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/graphdb/Neo4jMatchers.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ProviderMetaTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/api/index/ProviderMetaTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TxStateTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/TxStateTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneIndexRecoveryIT.java",
    "refactorings": [
      {
        "rightSideLineNumber": 300,
        "description": "Remove Thrown Exception Type PropertyKeyNotFoundException in method private createNode(label Label, number int) : long from class org.neo4j.kernel.api.impl.index.LuceneIndexRecoveryIT",
        "type": "Remove Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 300,
        "description": "Remove Thrown Exception Type LabelNotFoundKernelException in method private createNode(label Label, number int) : long from class org.neo4j.kernel.api.impl.index.LuceneIndexRecoveryIT",
        "type": "Remove Thrown Exception Type"
      }
    ],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/LuceneIndexRecoveryIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneLabelScanStoreTest.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/LuceneLabelScanStoreTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ConsistencyCheckService.java",
    "refactorings": [
      {
        "rightSideLineNumber": 203,
        "description": "Remove Class Modifier static in class org.neo4j.consistency.ConsistencyCheckService.Result",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 209,
        "description": "Change Method Access Modifier private to package in method package Result(successful boolean) from class org.neo4j.consistency.ConsistencyCheckService.Result",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 115,
        "description": "Extract Variable consistencyCheckerConfig : Config in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Add Parameter Modifier final in parameter storeDir : File in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Add Parameter Modifier final in parameter logProvider : LogProvider in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Add Parameter Modifier final in parameter pageCache : PageCache in method public runFullConsistencyCheck(storeDir File, tuningConfiguration Config, progressFactory ProgressMonitorFactory, logProvider LogProvider, fileSystem FileSystemAbstraction, pageCache PageCache) : Result from class org.neo4j.consistency.ConsistencyCheckService",
        "type": "Add Parameter Modifier"
      }
    ],
    "filePath": "community/consistency-check/src/main/java/org/neo4j/consistency/ConsistencyCheckService.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphDatabaseSettings.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/graphdb/factory/GraphDatabaseSettings.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreFactory.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/StoreFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CountsTracker.java",
    "refactorings": [{
      "rightSideLineNumber": 87,
      "description": "Add Parameter config : Config in method public CountsTracker(logProvider LogProvider, fs FileSystemAbstraction, pages PageCache, config Config, baseFile File) from class org.neo4j.kernel.impl.store.counts.CountsTracker",
      "type": "Add Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/CountsTracker.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DumpCountsStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/counts/DumpCountsStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractKeyValueStore.java",
    "refactorings": [{
      "rightSideLineNumber": 57,
      "description": "Add Parameter timerFactory : RotationTimerFactory in method public AbstractKeyValueStore(fs FileSystemAbstraction, pages PageCache, base File, monitor RotationMonitor, timerFactory RotationTimerFactory, keySize int, valueSize int, headerFields HeaderField<?>...) from class org.neo4j.kernel.impl.store.kvstore.AbstractKeyValueStore",
      "type": "Add Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/AbstractKeyValueStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DeadState.java",
    "refactorings": [
      {
        "rightSideLineNumber": 216,
        "description": "Add Parameter timerFactory : RotationTimerFactory in method package rotate(force boolean, strategy RotationStrategy, timerFactory RotationTimerFactory, headers Consumer<Headers.Builder>) : ProgressiveState<Key> from class org.neo4j.kernel.impl.store.kvstore.DeadState.NeedsCreation.prepareRotation.new Rotation<Key,NeedsCreation<Key>>",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 280,
        "description": "Add Parameter timerFactory : RotationTimerFactory in method package rotate(force boolean, strategy RotationStrategy, timerFactory RotationTimerFactory, headers Consumer<Headers.Builder>) : ProgressiveState<Key> from class org.neo4j.kernel.impl.store.kvstore.DeadState.Prepared.prepareRotation.new Rotation<Key,RotationState.Rotation<Key>>",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/DeadState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RotationState.java",
    "refactorings": [{
      "rightSideLineNumber": 63,
      "description": "Add Parameter timerFactory : RotationTimerFactory in method package rotate(force boolean, strategy RotationStrategy, timerFactory RotationTimerFactory, headersUpdater Consumer<Headers.Builder>) : ActiveState<Key> from class org.neo4j.kernel.impl.store.kvstore.RotationState.Rotation",
      "type": "Add Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/RotationState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RotationTimeoutException.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/RotationTimeoutException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RotationTimerFactory.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/RotationTimerFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "State.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/State.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreMigrator.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/StoreMigrator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreFactoryTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 56,
        "description": "Rename Method public setup() : void renamed to public setUp() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Rename Method public teardown() : void renamed to public tearDown() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 54,
        "description": "Rename Attribute neostore : NeoStore to neoStore : NeoStore in class org.neo4j.kernel.impl.store.StoreFactoryTest",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/StoreFactoryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CountsComputerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 79,
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 170,
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 207,
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountStoreWhenDBContainsDenseNodes() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/counts/CountsComputerTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CountsRotationTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 87,
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 115,
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenClosingTheDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenRotatingLog() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/counts/CountsRotationTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CountsTrackerTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/counts/CountsTrackerTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractKeyValueStoreTest.java",
    "refactorings": [{
      "rightSideLineNumber": 510,
      "description": "Extract Method private Store(rotationTimeout long, headerFields HeaderField<?>...) extracted from private Store(headerFields HeaderField<?>...) in class org.neo4j.kernel.impl.store.kvstore.AbstractKeyValueStoreTest.Store",
      "type": "Extract Method"
    }],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/kvstore/AbstractKeyValueStoreTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "RotationTimerFactoryTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/kvstore/RotationTimerFactoryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Contract.java",
    "refactorings": [
      {
        "rightSideLineNumber": 74,
        "description": "Extract Method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.BaseContract",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Add Method Annotation @Deprecated in method public parseAndValidatateMetadata(method Method) : MethodMetadata from class feign.Contract.BaseContract",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 156,
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.Contract.Default",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 161,
        "description": "Extract Method private headersFromAnnotation(targetType Class<?>, data MethodMetadata) : void extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.Default",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 156,
        "description": "Add Parameter targetType : Class<?> in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.Contract.Default",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 156,
        "description": "Change Method Access Modifier public to protected in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.Contract.Default",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 41,
        "description": "Rename Parameter declaring : Class<?> to targetType : Class<?> in method public parseAndValidatateMetadata(targetType Class<?>) : List<MethodMetadata> from class feign.Contract",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Rename Parameter declaring : Class<?> to targetType : Class<?> in method public parseAndValidatateMetadata(targetType Class<?>) : List<MethodMetadata> from class feign.Contract.BaseContract",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "core/src/main/java/feign/Contract.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "main"
  },
  {
    "fileName": "Feign.java",
    "refactorings": [
      {
        "rightSideLineNumber": 60,
        "description": "Extract Method public configKey(targetType Class, method Method) : String extracted from public configKey(method Method) : String in class feign.Feign",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 61,
        "description": "Change Variable Type param : Class<?> to param : Type in method public configKey(targetType Class, method Method) : String from class feign.Feign",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Add Method Annotation @Deprecated in method public configKey(method Method) : String from class feign.Feign",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "core/src/main/java/feign/Feign.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "main"
  },
  {
    "fileName": "Logger.java",
    "refactorings": [],
    "filePath": "core/src/main/java/feign/Logger.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "main"
  },
  {
    "fileName": "MethodMetadata.java",
    "refactorings": [],
    "filePath": "core/src/main/java/feign/MethodMetadata.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "main"
  },
  {
    "fileName": "ReflectiveFeign.java",
    "refactorings": [],
    "filePath": "core/src/main/java/feign/ReflectiveFeign.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "main"
  },
  {
    "fileName": "Util.java",
    "refactorings": [],
    "filePath": "core/src/main/java/feign/Util.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "main"
  },
  {
    "fileName": "JAXRSContract.java",
    "refactorings": [
      {
        "rightSideLineNumber": 46,
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.jaxrs.JAXRSContract",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Add Parameter targetType : Class<?> in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.jaxrs.JAXRSContract",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Change Method Access Modifier public to protected in method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata from class feign.jaxrs.JAXRSContract",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "jaxrs/src/main/java/feign/jaxrs/JAXRSContract.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseApiTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/feign/BaseApiTest.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultContractTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 56,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public tooManyBodies() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 80,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyWithoutParameters() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headersOnMethodAddsContentTypeHeader() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headersOnTypeAddsContentTypeHeader() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 166,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public withPathAndURIParam() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 197,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyWithTemplate() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 207,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 225,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 233,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 244,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public customExpander() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 257,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public slashAreEncodedWhenNeeded() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 257,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public slashAreEncodedWhenNeeded() : void in class feign.DefaultContractTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "core/src/test/java/feign/DefaultContractTest.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "test"
  },
  {
    "fileName": "FeignTest.java",
    "refactorings": [{
      "rightSideLineNumber": 213,
      "description": "Rename Method public toKeyMethodFormatsAsExpected() : void renamed to public configKeyFormatsAsExpected() : void in class feign.FeignTest",
      "type": "Rename Method"
    }],
    "filePath": "core/src/test/java/feign/FeignTest.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "test"
  },
  {
    "fileName": "JAXRSContractTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 71,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public httpMethods() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 77,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public producesAddsAcceptHeader() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public producesNada() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 139,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public producesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public consumesAddsContentTypeHeader() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public consumesNada() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public consumesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 168,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public tooManyBodies() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 189,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyPathOnType() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyPathParam() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 219,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathParamWithSpaces() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 230,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public regexPathOnMethod() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 230,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public regexPathOnMethod() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 237,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public withPathAndURIParams() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 267,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyQueryParam() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 272,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 290,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 301,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyFormParam() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 306,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 320,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public emptyHeaderParam() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 325,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathsWithoutSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 331,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathsWithSomeSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 337,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public pathsWithSomeOtherSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 343,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public classWithRootPathParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 349,
        "description": "Extract Method private parseAndValidateMetadata(targetType Class<?>, method String, parameterTypes Class<?>...) : MethodMetadata extracted from public classPathWithTrailingSlashParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "jaxrs/src/test/java/feign/jaxrs/JAXRSContractTest.java",
    "commit": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "repository": "https://github.com/Netflix/feign.git",
    "fileType": "test"
  },
  {
    "fileName": "UserEntityTest.java",
    "refactorings": [],
    "filePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/identity/UserEntityTest.java",
    "commit": "https://github.com/Activiti/Activiti/commit/ca7d0c3b33a0863bed04c77932b9ef6b1317f34e",
    "repository": "https://github.com/Activiti/Activiti.git",
    "fileType": "test"
  },
  {
    "fileName": "SingleSessionCommandService.java",
    "refactorings": [
      {
        "rightSideLineNumber": 371,
        "description": "Encapsulate Attribute private commandService : CommandService from class org.drools.persistence.SingleSessionCommandService",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 504,
        "description": "Extract Method protected addInterceptor(interceptor Interceptor, store boolean) : void extracted from public addInterceptor(interceptor Interceptor) : void in class org.drools.persistence.SingleSessionCommandService",
        "type": "Extract Method"
      }
    ],
    "filePath": "drools-persistence-jpa/src/main/java/org/drools/persistence/SingleSessionCommandService.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/7ffc62aa554f5884064b81ee80078e35e3833006",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "JpaPersistentStatefulSessionTest.java",
    "refactorings": [],
    "filePath": "drools-persistence-jpa/src/test/java/org/drools/persistence/session/JpaPersistentStatefulSessionTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/7ffc62aa554f5884064b81ee80078e35e3833006",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "OrderEntryFix.java",
    "refactorings": [],
    "filePath": "java/java-impl/src/com/intellij/codeInsight/daemon/impl/quickfix/OrderEntryFix.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/10f769a60c7c7b73982e978959d381df487bbe2d",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaSdkUtil.java",
    "refactorings": [],
    "filePath": "java/java-impl/src/com/intellij/openapi/projectRoots/ex/JavaSdkUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/10f769a60c7c7b73982e978959d381df487bbe2d",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JUnit4Framework.java",
    "refactorings": [{
      "rightSideLineNumber": 58,
      "description": "Extract Method public getLibraryPaths() : List<String> extracted from public getLibraryPath() : String in class com.intellij.execution.junit.JUnit4Framework",
      "type": "Extract Method"
    }],
    "filePath": "plugins/junit/src/com/intellij/execution/junit/JUnit4Framework.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/10f769a60c7c7b73982e978959d381df487bbe2d",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaTestFramework.java",
    "refactorings": [],
    "filePath": "java/java-impl/src/com/intellij/testIntegration/JavaTestFramework.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/10f769a60c7c7b73982e978959d381df487bbe2d",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateTestDialog.java",
    "refactorings": [],
    "filePath": "java/java-impl/src/com/intellij/testIntegration/createTest/CreateTestDialog.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/10f769a60c7c7b73982e978959d381df487bbe2d",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "OrderEntryFix.java",
    "refactorings": [
      {
        "rightSideLineNumber": 372,
        "description": "Rename Method private convertToLibraryRoot(libPath String) : VirtualFile renamed to private refreshAndConvertToUrl(jarPath String) : String in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 272,
        "description": "Extract Method private getJUnit4JarPaths() : List<String> extracted from public registerFixes(registrar QuickFixActionRegistrar, reference PsiReference) : List<LocalQuickFix> in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 335,
        "description": "Extract Method public addJarsToRootsAndImportClass(jarPaths List<String>, libraryName String, currentModule Module, editor Editor, reference PsiReference, className String) : void extracted from public registerFixes(registrar QuickFixActionRegistrar, reference PsiReference) : List<LocalQuickFix> in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 276,
        "description": "Extract Method private getJUnit4JarPaths() : List<String> extracted from public addJUnit4Library(inTests boolean, currentModule Module) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 335,
        "description": "Extract Method public addJarsToRootsAndImportClass(jarPaths List<String>, libraryName String, currentModule Module, editor Editor, reference PsiReference, className String) : void extracted from public addBundledJarToRoots(project Project, editor Editor, currentModule Module, reference PsiReference, className String, libVirtFile String) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 355,
        "description": "Extract Method public addJarsToRoots(jarPaths List<String>, libraryName String, module Module, location PsiElement) : void extracted from public addJarToRoots(libPath String, module Module, location PsiElement) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 337,
        "description": "Remove Variable Modifier final in variable scope : GlobalSearchScope in method public invoke(project Project, editor Editor, file PsiFile) : void from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix.registerFixes.fix.new OrderEntryFix",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 337,
        "description": "Remove Variable Modifier final in variable aClass : PsiClass in method public invoke(project Project, editor Editor, file PsiFile) : void from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix.registerFixes.fix.new OrderEntryFix",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 327,
        "description": "Add Variable Modifier final in variable project : Project in method public addJarsToRootsAndImportClass(jarPaths List<String>, libraryName String, currentModule Module, editor Editor, reference PsiReference, className String) : void from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 349,
        "description": "Add Parameter Annotation @NotNull in parameter module : Module in method public addJarToRoots(jarPath String, module Module, location PsiElement) : void from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 349,
        "description": "Rename Parameter libPath : String to jarPath : String in method public addJarToRoots(jarPath String, module Module, location PsiElement) : void from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 349,
        "description": "Add Parameter Annotation @NotNull in parameter jarPath : String in method public addJarToRoots(jarPath String, module Module, location PsiElement) : void from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 374,
        "description": "Rename Parameter libPath : String to jarPath : String in method private refreshAndConvertToUrl(jarPath String) : String from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 372,
        "description": "Change Return Type VirtualFile to String in method private refreshAndConvertToUrl(jarPath String) : String from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "type": "Change Return Type"
      }
    ],
    "filePath": "java/java-impl/src/com/intellij/codeInsight/daemon/impl/quickfix/OrderEntryFix.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JCiPOrderEntryFix.java",
    "refactorings": [],
    "filePath": "java/java-impl/src/com/intellij/codeInspection/concurrencyAnnotations/JCiPOrderEntryFix.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "InferNullityAnnotationsAction.java",
    "refactorings": [],
    "filePath": "java/java-impl/src/com/intellij/codeInspection/inferNullity/InferNullityAnnotationsAction.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "TestNGOrderEntryFix.java",
    "refactorings": [],
    "filePath": "plugins/testng/src/com/theoryinpractice/testng/intention/TestNGOrderEntryFix.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "FileUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 756,
        "description": "Extract Method private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean, resolveSymlinksIfNecessary boolean) : String extracted from private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean) : String in class com.intellij.openapi.util.io.FileUtil",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Add Parameter Annotation @NotNull in parameter result : StringBuilder in method private processDots(result StringBuilder, dots int, start int, resolveSymlinksIfNecessary boolean) : boolean from class com.intellij.openapi.util.io.FileUtil",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Change Return Type void to boolean in method private processDots(result StringBuilder, dots int, start int, resolveSymlinksIfNecessary boolean) : boolean from class com.intellij.openapi.util.io.FileUtil",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Add Parameter resolveSymlinksIfNecessary : boolean in method private processDots(result StringBuilder, dots int, start int, resolveSymlinksIfNecessary boolean) : boolean from class com.intellij.openapi.util.io.FileUtil",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Add Method Annotation @Contract(\"_, _, _, false -> true\") in method private processDots(result StringBuilder, dots int, start int, resolveSymlinksIfNecessary boolean) : boolean from class com.intellij.openapi.util.io.FileUtil",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "platform/util/src/com/intellij/openapi/util/io/FileUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "FileUtilHeavyTest.java",
    "refactorings": [],
    "filePath": "platform/util/testSrc/com/intellij/openapi/util/io/FileUtilHeavyTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "GenericsHighlightUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 662,
        "description": "Remove Variable Modifier final in variable highlightInfo : HighlightInfo in method public checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 662,
        "description": "Remove Parameter Modifier final in parameter typeElement : PsiTypeElement in method public checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 675,
        "description": "Rename Variable description : String to text : String in method package checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement, level LanguageLevel) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 662,
        "description": "Add Parameter level : LanguageLevel in method package checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement, level LanguageLevel) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 662,
        "description": "Change Method Access Modifier public to package in method package checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement, level LanguageLevel) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "java/java-analysis-impl/src/com/intellij/codeInsight/daemon/impl/analysis/GenericsHighlightUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "HighlightVisitorImpl.java",
    "refactorings": [],
    "filePath": "java/java-analysis-impl/src/com/intellij/codeInsight/daemon/impl/analysis/HighlightVisitorImpl.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaSdkVersion.java",
    "refactorings": [],
    "filePath": "java/java-psi-api/src/com/intellij/openapi/projectRoots/JavaSdkVersion.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "LanguageLevel.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Remove Parameter Annotation @NonNls in parameter name : String in method package LanguageLevel(name String, presentableText String) from class com.intellij.pom.java.LanguageLevel",
        "type": "Remove Parameter Annotation"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Remove Method Annotation @NonNls in method public getName() : String from class com.intellij.pom.java.LanguageLevel",
        "type": "Remove Method Annotation"
      }
    ],
    "filePath": "java/java-psi-api/src/com/intellij/pom/java/LanguageLevel.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaParserUtil.java",
    "refactorings": [],
    "filePath": "java/java-psi-impl/src/com/intellij/lang/java/parser/JavaParserUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "ReferenceParser.java",
    "refactorings": [
      {
        "rightSideLineNumber": 352,
        "description": "Extract Method private isKeywordAny(builder PsiBuilder) : boolean extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 353,
        "description": "Extract Method private dummy(builder PsiBuilder) : void extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Split Conditional if((isSet(flags,WILDCARD) || badWildcard) && tokenType == JavaTokenType.QUEST) to [if(tokenType == JavaTokenType.QUEST), if((isSet(flags,WILDCARD) || badWildcard) && (tokenType == JavaTokenType.QUEST || isKeywordAny(builder)))] in method private parseTypeInfo(builder PsiBuilder, flags int, badWildcard boolean) : TypeInfo from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Split Conditional"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter builder : PsiBuilder in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter start : IElementType in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter type : IElementType in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter delimiter : IElementType in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      }
    ],
    "filePath": "java/java-psi-impl/src/com/intellij/lang/java/parser/ReferenceParser.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "PsiTypeElementImpl.java",
    "refactorings": [],
    "filePath": "java/java-psi-impl/src/com/intellij/psi/impl/source/PsiTypeElementImpl.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueTypes.java",
    "refactorings": [],
    "filePath": "java/java-tests/testData/codeInsight/daemonCodeAnalyzer/advHighlighting9/ValueTypes.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "LightAdvHighlightingJdk9Test.java",
    "refactorings": [
      {
        "rightSideLineNumber": 33,
        "description": "Move Code from private doTest(checkWarnings boolean, checkInfos boolean, classes InspectionProfileEntry...) : void to protected setUp() : void in class com.intellij.codeInsight.daemon.LightAdvHighlightingJdk9Test",
        "type": "Move Code"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Remove Parameter classes : InspectionProfileEntry... in method private doTest(checkWarnings boolean, checkInfos boolean, classes InspectionProfileEntry...) : void from class com.intellij.codeInsight.daemon.LightAdvHighlightingJdk9Test",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "java/java-tests/testSrc/com/intellij/codeInsight/daemon/LightAdvHighlightingJdk9Test.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "ReferenceParserTest.java",
    "refactorings": [{
      "rightSideLineNumber": 54,
      "description": "Rename Method public testAnyType() : void renamed to public testAnyTypeParams() : void in class com.intellij.lang.java.parser.partial.ReferenceParserTest",
      "type": "Rename Method"
    }],
    "filePath": "java/java-tests/testSrc/com/intellij/lang/java/parser/partial/ReferenceParserTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "GenericsHighlightUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 661,
        "description": "Remove Variable Modifier final in variable highlightInfo : HighlightInfo in method package checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 661,
        "description": "Remove Parameter Modifier final in parameter typeElement : PsiTypeElement in method package checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 674,
        "description": "Rename Variable description : String to text : String in method package checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement, level LanguageLevel) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 661,
        "description": "Add Parameter level : LanguageLevel in method package checkReferenceTypeUsedAsTypeArgument(typeElement PsiTypeElement, level LanguageLevel) : HighlightInfo from class com.intellij.codeInsight.daemon.impl.analysis.GenericsHighlightUtil",
        "type": "Add Parameter"
      }
    ],
    "filePath": "java/java-analysis-impl/src/com/intellij/codeInsight/daemon/impl/analysis/GenericsHighlightUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "HighlightVisitorImpl.java",
    "refactorings": [],
    "filePath": "java/java-analysis-impl/src/com/intellij/codeInsight/daemon/impl/analysis/HighlightVisitorImpl.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaSdkVersion.java",
    "refactorings": [],
    "filePath": "java/java-psi-api/src/com/intellij/openapi/projectRoots/JavaSdkVersion.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "LanguageLevel.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Remove Parameter Annotation @NonNls in parameter name : String in method package LanguageLevel(name String, presentableText String) from class com.intellij.pom.java.LanguageLevel",
        "type": "Remove Parameter Annotation"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Remove Method Annotation @NonNls in method public getName() : String from class com.intellij.pom.java.LanguageLevel",
        "type": "Remove Method Annotation"
      }
    ],
    "filePath": "java/java-psi-api/src/com/intellij/pom/java/LanguageLevel.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaParserUtil.java",
    "refactorings": [],
    "filePath": "java/java-psi-impl/src/com/intellij/lang/java/parser/JavaParserUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "ReferenceParser.java",
    "refactorings": [
      {
        "rightSideLineNumber": 352,
        "description": "Extract Method private isKeywordAny(builder PsiBuilder) : boolean extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 353,
        "description": "Extract Method private dummy(builder PsiBuilder) : void extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Split Conditional if((isSet(flags,WILDCARD) || badWildcard) && tokenType == JavaTokenType.QUEST) to [if(tokenType == JavaTokenType.QUEST), if((isSet(flags,WILDCARD) || badWildcard) && (tokenType == JavaTokenType.QUEST || isKeywordAny(builder)))] in method private parseTypeInfo(builder PsiBuilder, flags int, badWildcard boolean) : TypeInfo from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Split Conditional"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter builder : PsiBuilder in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter start : IElementType in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter type : IElementType in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Remove Parameter Modifier final in parameter delimiter : IElementType in method public parseReferenceList(builder PsiBuilder, start IElementType, type IElementType, delimiter IElementType) : PsiBuilder.Marker from class com.intellij.lang.java.parser.ReferenceParser",
        "type": "Remove Parameter Modifier"
      }
    ],
    "filePath": "java/java-psi-impl/src/com/intellij/lang/java/parser/ReferenceParser.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "PsiTypeElementImpl.java",
    "refactorings": [],
    "filePath": "java/java-psi-impl/src/com/intellij/psi/impl/source/PsiTypeElementImpl.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueTypes.java",
    "refactorings": [],
    "filePath": "java/java-tests/testData/codeInsight/daemonCodeAnalyzer/advHighlighting9/ValueTypes.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "LightAdvHighlightingJdk9Test.java",
    "refactorings": [],
    "filePath": "java/java-tests/testSrc/com/intellij/codeInsight/daemon/LightAdvHighlightingJdk9Test.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "ReferenceParserTest.java",
    "refactorings": [{
      "rightSideLineNumber": 53,
      "description": "Rename Method public testAnyType() : void renamed to public testAnyTypeParams() : void in class com.intellij.lang.java.parser.partial.ReferenceParserTest",
      "type": "Rename Method"
    }],
    "filePath": "java/java-tests/testSrc/com/intellij/lang/java/parser/partial/ReferenceParserTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "OnCommittedResponseWrapper.java",
    "refactorings": [],
    "filePath": "web/src/main/java/org/springframework/security/web/context/OnCommittedResponseWrapper.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/fcc9a34356817d93c24b5ccf3107ec234a28b136",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "SaveContextOnUpdateOrErrorResponseWrapper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 78,
        "description": "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 78,
        "description": "Add Method Annotation @Override in method protected onResponseCommitted() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 78,
        "description": "Change Method Access Modifier private to protected in method protected onResponseCommitted() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "web/src/main/java/org/springframework/security/web/context/SaveContextOnUpdateOrErrorResponseWrapper.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/fcc9a34356817d93c24b5ccf3107ec234a28b136",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "OnCommittedResponseWrapperTests.java",
    "refactorings": [],
    "filePath": "web/src/test/java/org/springframework/security/web/context/OnCommittedResponseWrapperTests.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/fcc9a34356817d93c24b5ccf3107ec234a28b136",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "test"
  },
  {
    "fileName": "OnCommittedResponseWrapper.java",
    "refactorings": [],
    "filePath": "web/src/main/java/org/springframework/security/web/context/OnCommittedResponseWrapper.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "SaveContextOnUpdateOrErrorResponseWrapper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 78,
        "description": "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 78,
        "description": "Add Method Annotation @Override in method protected onResponseCommitted() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 78,
        "description": "Change Method Access Modifier private to protected in method protected onResponseCommitted() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "web/src/main/java/org/springframework/security/web/context/SaveContextOnUpdateOrErrorResponseWrapper.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "main"
  },
  {
    "fileName": "OnCommittedResponseWrapperTests.java",
    "refactorings": [],
    "filePath": "web/src/test/java/org/springframework/security/web/context/OnCommittedResponseWrapperTests.java",
    "commit": "https://github.com/spring-projects/spring-security/commit/08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
    "repository": "https://github.com/spring-projects/spring-security.git",
    "fileType": "test"
  },
  {
    "fileName": "JITWatchConstants.java",
    "refactorings": [],
    "filePath": "src/main/java/org/adoptopenjdk/jitwatch/core/JITWatchConstants.java",
    "commit": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "fileType": "main"
  },
  {
    "fileName": "JournalUtil.java",
    "refactorings": [{
      "rightSideLineNumber": 127,
      "description": "Rename Variable eliminationTag : Tag to child : Tag in method public visitOptimizerTagsOfLastTask(member IMetaMember, visitable IJournalVisitable) : void from class org.adoptopenjdk.jitwatch.journal.JournalUtil",
      "type": "Rename Variable"
    }],
    "filePath": "src/main/java/org/adoptopenjdk/jitwatch/journal/JournalUtil.java",
    "commit": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "fileType": "main"
  },
  {
    "fileName": "BytecodeAnnotationBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 63,
        "description": "Change Attribute Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 104,
        "description": "Extract Method private visitTagParse(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 108,
        "description": "Extract Method private visitTagEliminateAllocation(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 65,
        "description": "Change Return Type Map<Integer,LineAnnotation> to Map<Integer,List<LineAnnotation>> in method public buildBytecodeAnnotations(member IMetaMember, instructions List<BytecodeInstruction>) : Map<Integer,List<LineAnnotation>> from class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 376,
        "description": "Change Parameter Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method private buildParseTagAnnotations(parseTag Tag, result Map<Integer,List<LineAnnotation>>, instructions List<BytecodeInstruction>, compilerName CompilerName) : void from class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 434,
        "description": "Change Parameter Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method private storeAnnotation(bci int, annotation LineAnnotation, result Map<Integer,List<LineAnnotation>>) : void from class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "src/main/java/org/adoptopenjdk/jitwatch/model/bytecode/BytecodeAnnotationBuilder.java",
    "commit": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "fileType": "main"
  },
  {
    "fileName": "ViewerBytecode.java",
    "refactorings": [
      {
        "rightSideLineNumber": 107,
        "description": "Replace Generic With Diamond HashMap<Integer,LineAnnotation> with HashMap<> in method public setContent(member IMetaMember, metaClassBytecode ClassBC, classLocations List<String>) : void from class org.adoptopenjdk.jitwatch.ui.triview.bytecode.ViewerBytecode",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 158,
        "description": "Change Variable Type annotations : Map<Integer,LineAnnotation> to annotations : Map<Integer,List<LineAnnotation>> in method public setContent(member IMetaMember, metaClassBytecode ClassBC, classLocations List<String>) : void from class org.adoptopenjdk.jitwatch.ui.triview.bytecode.ViewerBytecode",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 194,
        "description": "Change Variable Type annotation : LineAnnotation to annotationList : List<LineAnnotation> in method private createLabel(instruction BytecodeInstruction, maxOffset int, line int, annotations Map<Integer,List<LineAnnotation>>, member IMetaMember, lineIndex int) : BytecodeLabel from class org.adoptopenjdk.jitwatch.ui.triview.bytecode.ViewerBytecode",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 190,
        "description": "Change Parameter Type annotations : Map<Integer,LineAnnotation> to annotations : Map<Integer,List<LineAnnotation>> in method private createLabel(instruction BytecodeInstruction, maxOffset int, line int, annotations Map<Integer,List<LineAnnotation>>, member IMetaMember, lineIndex int) : BytecodeLabel from class org.adoptopenjdk.jitwatch.ui.triview.bytecode.ViewerBytecode",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 194,
        "description": "Rename Variable annotation : LineAnnotation to annotationList : List<LineAnnotation> in method private createLabel(instruction BytecodeInstruction, maxOffset int, line int, annotations Map<Integer,List<LineAnnotation>>, member IMetaMember, lineIndex int) : BytecodeLabel from class org.adoptopenjdk.jitwatch.ui.triview.bytecode.ViewerBytecode",
        "type": "Rename Variable"
      }
    ],
    "filePath": "src/main/java/org/adoptopenjdk/jitwatch/ui/triview/bytecode/ViewerBytecode.java",
    "commit": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "fileType": "main"
  },
  {
    "fileName": "ParseUtil.java",
    "refactorings": [],
    "filePath": "src/main/java/org/adoptopenjdk/jitwatch/util/ParseUtil.java",
    "commit": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "fileType": "main"
  },
  {
    "fileName": "TestBytecodeAnnotationBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 299,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method public testJava7NonTieredLeaf() : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 528,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method public testJava7NonTieredChain() : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 715,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method public testJava7TieredLeaf() : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 899,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method public testJava7TieredChain() : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1110,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method public testJava8NonTieredLeaf() : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1492,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method public testJava8TieredLeaf() : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1677,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method public testJava8TieredChain() : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1732,
        "description": "Change Variable Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method private buildAnnotations(member IMetaMember, compiler CompilerName, logLines String[], bytecodeLines String[]) : Map<Integer,List<LineAnnotation>> from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1680,
        "description": "Change Return Type Map<Integer,LineAnnotation> to Map<Integer,List<LineAnnotation>> in method private buildAnnotations(member IMetaMember, compiler CompilerName, logLines String[], bytecodeLines String[]) : Map<Integer,List<LineAnnotation>> from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 1818,
        "description": "Change Variable Type line : LineAnnotation to lines : List<LineAnnotation> in method private checkLine(result Map<Integer,List<LineAnnotation>>, index int, annotation String, colour Color) : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1813,
        "description": "Change Parameter Type result : Map<Integer,LineAnnotation> to result : Map<Integer,List<LineAnnotation>> in method private checkLine(result Map<Integer,List<LineAnnotation>>, index int, annotation String, colour Color) : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 1818,
        "description": "Rename Variable line : LineAnnotation to lines : List<LineAnnotation> in method private checkLine(result Map<Integer,List<LineAnnotation>>, index int, annotation String, colour Color) : void from class org.adoptopenjdk.jitwatch.test.TestBytecodeAnnotationBuilder",
        "type": "Rename Variable"
      }
    ],
    "filePath": "src/test/java/org/adoptopenjdk/jitwatch/test/TestBytecodeAnnotationBuilder.java",
    "commit": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "fileType": "test"
  },
  {
    "fileName": "RuleContext.java",
    "refactorings": [],
    "filePath": "runtime/Java/src/org/antlr/v4/runtime/RuleContext.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "Trees.java",
    "refactorings": [{
      "rightSideLineNumber": 78,
      "description": "Inline Method public toStringTree(t Tree, nodeTextProvider TreeTextProvider) : String inlined to public toStringTree(t Tree, ruleNames List<String>) : String in class org.antlr.v4.runtime.tree.Trees",
      "type": "Inline Method"
    }],
    "filePath": "runtime/Java/src/org/antlr/v4/runtime/tree/Trees.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "BasicFontMetrics.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/BasicFontMetrics.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphicsSupport.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/GraphicsSupport.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "JFileChooserConfirmOverwrite.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/JFileChooserConfirmOverwrite.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "PostScriptDocument.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/PostScriptDocument.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemFontMetrics.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/SystemFontMetrics.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeLayoutAdaptor.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/TreeLayoutAdaptor.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "TreePostScriptGenerator.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/TreePostScriptGenerator.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeTextProvider.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/TreeTextProvider.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeViewer.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/TreeViewer.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "Trees.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/Trees.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "InterpreterTreeTextProvider.java",
    "refactorings": [],
    "filePath": "tool-testsuite/test/org/antlr/v4/test/tool/InterpreterTreeTextProvider.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "TestAmbigParseTrees.java",
    "refactorings": [],
    "filePath": "tool-testsuite/test/org/antlr/v4/test/tool/TestAmbigParseTrees.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGrammarParserInterpreter.java",
    "refactorings": [],
    "filePath": "tool-testsuite/test/org/antlr/v4/test/tool/TestGrammarParserInterpreter.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "TestLookaheadTrees.java",
    "refactorings": [],
    "filePath": "tool-testsuite/test/org/antlr/v4/test/tool/TestLookaheadTrees.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRig.java",
    "refactorings": [],
    "filePath": "tool/src/org/antlr/v4/gui/TestRig.java",
    "commit": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractApplePlatform.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AbstractApplePlatform.java",
    "commit": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleCxxPlatforms.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AppleCxxPlatforms.java",
    "commit": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleSdkDiscovery.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AppleSdkDiscovery.java",
    "commit": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleCxxPlatformsTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 83,
        "description": "Rename Method public appleSdkPathsBuiltFromDirectory() : void renamed to public iphoneOSSdkPathsBuiltFromDirectory() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 571,
        "description": "Rename Method public simulatorPlatformSetsLinkerFlags() : void renamed to public iphoneOSSimulatorPlatformSetsLinkerFlags() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest",
        "type": "Rename Method"
      }
    ],
    "filePath": "test/com/facebook/buck/apple/AppleCxxPlatformsTest.java",
    "commit": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AppleLibraryIntegrationTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/AppleLibraryIntegrationTest.java",
    "commit": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AppleSdkDiscoveryTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 483,
        "description": "Extract Method private createSymLinkSdks(sdks Iterable<String>, root Path, version String) : void extracted from private createSymLinkIosSdks(root Path, version String) : void in class com.facebook.buck.apple.AppleSdkDiscoveryTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 491,
        "description": "Parameterize Variable sdks : Set<String> to sdks : Iterable<String> in method private createSymLinkSdks(sdks Iterable<String>, root Path, version String) : void from class com.facebook.buck.apple.AppleSdkDiscoveryTest",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 491,
        "description": "Change Variable Type sdks : Set<String> to sdks : Iterable<String> in method private createSymLinkSdks(sdks Iterable<String>, root Path, version String) : void from class com.facebook.buck.apple.AppleSdkDiscoveryTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 483,
        "description": "Inline Variable sdks : Set<String> in method private createSymLinkIosSdks(root Path, version String) : void from class com.facebook.buck.apple.AppleSdkDiscoveryTest",
        "type": "Inline Variable"
      }
    ],
    "filePath": "test/com/facebook/buck/apple/AppleSdkDiscoveryTest.java",
    "commit": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "ProjectGenerator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1326,
        "description": "Rename Method private getDestination(targetNode TargetNode<?>) : Optional<PBXCopyFilesBuildPhase.Destination> renamed to private getDestinationSpec(targetNode TargetNode<?>) : Optional<CopyFilePhaseDestinationSpec> in class com.facebook.buck.apple.ProjectGenerator",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1402,
        "description": "Extract Method private generateSingleCopyFilesBuildPhase(target PBXNativeTarget, destinationSpec CopyFilePhaseDestinationSpec, targetNodes Iterable<TargetNode<?>>) : void extracted from private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void in class com.facebook.buck.apple.ProjectGenerator",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1410,
        "description": "Change Variable Type destination : PBXCopyFilesBuildPhase.Destination to destinationSpec : CopyFilePhaseDestinationSpec in method private generateSingleCopyFilesBuildPhase(target PBXNativeTarget, destinationSpec CopyFilePhaseDestinationSpec, targetNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1410,
        "description": "Parameterize Variable destination : PBXCopyFilesBuildPhase.Destination to destinationSpec : CopyFilePhaseDestinationSpec in method private generateSingleCopyFilesBuildPhase(target PBXNativeTarget, destinationSpec CopyFilePhaseDestinationSpec, targetNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 1396,
        "description": "Change Variable Type ruleByDestinationBuilder : ImmutableSetMultimap.Builder<PBXCopyFilesBuildPhase.Destination,TargetNode<?>> to ruleByDestinationSpecBuilder : ImmutableSetMultimap.Builder<CopyFilePhaseDestinationSpec,TargetNode<?>> in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1391,
        "description": "Change Variable Type optionalDestination : Optional<PBXCopyFilesBuildPhase.Destination> to optionalDestinationSpec : Optional<CopyFilePhaseDestinationSpec> in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1400,
        "description": "Change Variable Type ruleByDestination : ImmutableSetMultimap<PBXCopyFilesBuildPhase.Destination,TargetNode<?>> to ruleByDestinationSpec : ImmutableSetMultimap<CopyFilePhaseDestinationSpec,TargetNode<?>> in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1400,
        "description": "Change Variable Type destination : PBXCopyFilesBuildPhase.Destination to destinationSpec : CopyFilePhaseDestinationSpec in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1396,
        "description": "Rename Variable ruleByDestinationBuilder : ImmutableSetMultimap.Builder<PBXCopyFilesBuildPhase.Destination,TargetNode<?>> to ruleByDestinationSpecBuilder : ImmutableSetMultimap.Builder<CopyFilePhaseDestinationSpec,TargetNode<?>> in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 1391,
        "description": "Rename Variable optionalDestination : Optional<PBXCopyFilesBuildPhase.Destination> to optionalDestinationSpec : Optional<CopyFilePhaseDestinationSpec> in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 1400,
        "description": "Rename Variable ruleByDestination : ImmutableSetMultimap<PBXCopyFilesBuildPhase.Destination,TargetNode<?>> to ruleByDestinationSpec : ImmutableSetMultimap<CopyFilePhaseDestinationSpec,TargetNode<?>> in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 1400,
        "description": "Rename Variable destination : PBXCopyFilesBuildPhase.Destination to destinationSpec : CopyFilePhaseDestinationSpec in method private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 1326,
        "description": "Change Return Type Optional<PBXCopyFilesBuildPhase.Destination> to Optional<CopyFilePhaseDestinationSpec> in method private getDestinationSpec(targetNode TargetNode<?>) : Optional<CopyFilePhaseDestinationSpec> from class com.facebook.buck.apple.ProjectGenerator",
        "type": "Change Return Type"
      }
    ],
    "filePath": "src/com/facebook/buck/apple/ProjectGenerator.java",
    "commit": "https://github.com/facebook/buck/commit/8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractCopyFilePhaseDestinationSpec.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/xcode/xcodeproj/AbstractCopyFilePhaseDestinationSpec.java",
    "commit": "https://github.com/facebook/buck/commit/8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractProductType.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/xcode/xcodeproj/AbstractProductType.java",
    "commit": "https://github.com/facebook/buck/commit/8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "PBXCopyFilesBuildPhase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 53,
        "description": "Change Attribute Type dstSubfolderSpec : Destination to dstSubfolderSpec : CopyFilePhaseDestinationSpec in class com.facebook.buck.apple.xcode.xcodeproj.PBXCopyFilesBuildPhase",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Change Return Type Destination to CopyFilePhaseDestinationSpec in method public getDstSubfolderSpec() : CopyFilePhaseDestinationSpec from class com.facebook.buck.apple.xcode.xcodeproj.PBXCopyFilesBuildPhase",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Change Parameter Type dstSubfolderSpec : Destination to dstSubfolderSpec : CopyFilePhaseDestinationSpec in method public PBXCopyFilesBuildPhase(dstSubfolderSpec CopyFilePhaseDestinationSpec) from class com.facebook.buck.apple.xcode.xcodeproj.PBXCopyFilesBuildPhase",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Remove Parameter path : String in method public PBXCopyFilesBuildPhase(dstSubfolderSpec Destination, path String) from class com.facebook.buck.apple.xcode.xcodeproj.PBXCopyFilesBuildPhase",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "src/com/facebook/buck/apple/xcode/xcodeproj/PBXCopyFilesBuildPhase.java",
    "commit": "https://github.com/facebook/buck/commit/8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "ProjectGeneratorTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/ProjectGeneratorTest.java",
    "commit": "https://github.com/facebook/buck/commit/8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AugmentedRestLiResponseData.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/AugmentedRestLiResponseData.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ResponseType.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/ResponseType.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestLiCallback.java",
    "refactorings": [
      {
        "rightSideLineNumber": 221,
        "description": "Rename Method public setAugmentedRestLiResponseData(data AugmentedRestLiResponseData) : void renamed to public setRestLiResponseEnvelope(data RestLiResponseEnvelope) : void in class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 227,
        "description": "Rename Method public getAugmentedRestLiResponseData() : AugmentedRestLiResponseData renamed to public getRestLiResponseEnvelope() : RestLiResponseEnvelope in class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 209,
        "description": "Change Attribute Type _responseData : AugmentedRestLiResponseData to _responseData : RestLiResponseEnvelope in class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 212,
        "description": "Change Parameter Type response : AugmentedRestLiResponseData to response : RestLiResponseEnvelope in method public FilterResponseContextAdapter(response RestLiResponseEnvelope) from class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 224,
        "description": "Change Parameter Type data : AugmentedRestLiResponseData to data : RestLiResponseEnvelope in method public setRestLiResponseEnvelope(data RestLiResponseEnvelope) : void from class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 227,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public getRestLiResponseEnvelope() : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 90,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public onSuccess(result T, executionReport RequestExecutionReport) : void from class com.linkedin.restli.internal.server.RestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 116,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public onError(e Throwable, executionReport RequestExecutionReport) : void from class com.linkedin.restli.internal.server.RestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 149,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method package convertExceptionToRestLiResponseData(e Throwable) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.RestLiCallback",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 127,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method private invokeFiltersAndProcessResults(executionReport RequestExecutionReport, responseData RestLiResponseEnvelope, appEx Throwable) : void from class com.linkedin.restli.internal.server.RestLiCallback",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/RestLiCallback.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestLiResponseEnvelope.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/RestLiResponseEnvelope.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestLiResponseHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 179,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, responseObject Object) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.RestLiResponseHandler",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 237,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildExceptionResponseData(request RestRequest, routingResult RoutingResult, object Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.RestLiResponseHandler",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 172,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildPartialResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.RestLiResponseHandler",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/RestLiResponseHandler.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "FilterResponseContextInternal.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/filter/FilterResponseContextInternal.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ActionResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 46,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.ActionResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 40,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.ActionResponseBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/ActionResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchCreateResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 108,
        "description": "Extract Variable entry : CreateIdStatus<Object> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchCreateResponseBuilder",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 116,
        "description": "Change Variable Type statuses : List<CreateIdStatus<Object>> to collectionCreateList : List<CreateCollectionResponseEnvelope.CollectionCreateResponseItem> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchCreateResponseBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 116,
        "description": "Rename Variable statuses : List<CreateIdStatus<Object>> to collectionCreateList : List<CreateCollectionResponseEnvelope.CollectionCreateResponseItem> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchCreateResponseBuilder",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 80,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchCreateResponseBuilder",
        "type": "Change Return Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/BatchCreateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchGetResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 123,
        "description": "Extract Method private createEntityResponse(entityTemplate RecordTemplate, routingResult RoutingResult) : EntityResponse<RecordTemplate> extracted from public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : AugmentedRestLiResponseData in class com.linkedin.restli.internal.server.methods.response.BatchGetResponseBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 184,
        "description": "Inline Variable context : ServerResourceContext in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : AugmentedRestLiResponseData from class com.linkedin.restli.internal.server.methods.response.BatchGetResponseBuilder",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchGetResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.BatchGetResponseBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 54,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.BatchGetResponseBuilder",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/BatchGetResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchResponseUtil.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/BatchResponseUtil.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchUpdateResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 152,
        "description": "Change Variable Type mergedResults : Map<Object,UpdateStatus> to batchResponseMap : Map<Object,BatchResponseEntry> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 95,
        "description": "Remove Variable Modifier final in variable mergedResults : Map<Object,UpdateStatus> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : AugmentedRestLiResponseData from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 132,
        "description": "Change Variable Type key : Object to entry : Map.Entry<Object,UpdateResponse> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 152,
        "description": "Rename Variable mergedResults : Map<Object,UpdateStatus> to batchResponseMap : Map<Object,BatchResponseEntry> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 132,
        "description": "Rename Variable key : Object to entry : Map.Entry<Object,UpdateResponse> in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 95,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/BatchUpdateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CollectionResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 65,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, object Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.CollectionResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method private buildRestLiResponseData(request RestRequest, routingResult RoutingResult, elements List<? extends RecordTemplate>, pageIncrement PageIncrement, customMetadata RecordTemplate, totalResults Integer, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.CollectionResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Extract Variable response : CollectionResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.CollectionResponseBuilder",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.CollectionResponseBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/CollectionResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 48,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.CreateResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.CreateResponseBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/CreateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ErrorResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 81,
        "description": "Extract Method private buildErrorResponse(result RestLiServiceException, errorResponseFormat ErrorResponseFormat) : ErrorResponse extracted from public buildErrorResponse(result RestLiServiceException) : ErrorResponse in class com.linkedin.restli.internal.server.methods.response.ErrorResponseBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, object Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.ErrorResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.ErrorResponseBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/ErrorResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "GetResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 48,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.GetResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.GetResponseBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/GetResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestLiResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 42,
      "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.RestLiResponseBuilder",
      "type": "Change Return Type"
    }],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/RestLiResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "UpdateResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 41,
        "description": "Change Return Type AugmentedRestLiResponseData to RestLiResponseEnvelope in method public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map<String,String>) : RestLiResponseEnvelope from class com.linkedin.restli.internal.server.methods.response.UpdateResponseBuilder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 36,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public buildResponse(routingResult RoutingResult, responseData RestLiResponseEnvelope) : PartialRestResponse from class com.linkedin.restli.internal.server.methods.response.UpdateResponseBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/methods/response/UpdateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchResponseEnvelope.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/response/BatchResponseEnvelope.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CollectionResponseEnvelope.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/response/CollectionResponseEnvelope.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCollectionResponseEnvelope.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/response/CreateCollectionResponseEnvelope.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyResponseEnvelope.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/response/EmptyResponseEnvelope.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RecordResponseEnvelope.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/internal/server/response/RecordResponseEnvelope.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ErrorResponseFormat.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/server/ErrorResponseFormat.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestLiResponseData.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/server/RestLiResponseData.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestLiServiceException.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/server/RestLiServiceException.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "FilterResponseContext.java",
    "refactorings": [],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/server/filter/FilterResponseContext.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestLiOutputValidationFilter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 90,
        "description": "Inline Variable entityResponse : EntityResponse<? extends RecordTemplate> in method public onResponse(requestContext FilterRequestContext, responseContext FilterResponseContext) : void from class com.linkedin.restli.server.validation.RestLiOutputValidationFilter",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Change Variable Type entry : Map.Entry<?,? extends RecordTemplate> to entry : Map.Entry<?,? extends BatchResponseEnvelope.BatchResponseEntry> in method public onResponse(requestContext FilterRequestContext, responseContext FilterResponseContext) : void from class com.linkedin.restli.server.validation.RestLiOutputValidationFilter",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "restli-server/src/main/java/com/linkedin/restli/server/validation/RestLiOutputValidationFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "TestFilters.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestFilters.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestNullGreetingsClient.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestNullGreetingsClient.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestAugmentedRestLiResponseData.java",
    "refactorings": [],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/TestAugmentedRestLiResponseData.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRestLiCallback.java",
    "refactorings": [
      {
        "rightSideLineNumber": 139,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testOnSuccessNoFilters() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testOnErrorRestLiServiceExceptionNoFilters() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 234,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testOnErrorOtherExceptionNoFilters(ex Exception) : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 331,
        "description": "Change Variable Type appResponseData : AugmentedRestLiResponseData to appResponseData : RestLiResponseEnvelope in method public testOnSuccessWithFiltersSuccessful() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 362,
        "description": "Change Variable Type appResponseData : AugmentedRestLiResponseData to appResponseData : RestLiResponseEnvelope in method public testOnSuccessWithFiltersExceptionFromFirstFilterSecondFilterHandlesEx() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 410,
        "description": "Change Variable Type responseErrorData : AugmentedRestLiResponseData to responseErrorData : RestLiResponseEnvelope in method public testOnSuccessWithFiltersExceptionFromFirstFilterSecondFilterHandlesEx() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 443,
        "description": "Change Variable Type appResponseData : AugmentedRestLiResponseData to appResponseData : RestLiResponseEnvelope in method public testOnSuccessWithFiltersExceptionFromFirstFilterSecondFilterDoesNotHandleEx() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 493,
        "description": "Change Variable Type responseErrorData : AugmentedRestLiResponseData to responseErrorData : RestLiResponseEnvelope in method public testOnSuccessWithFiltersExceptionFromFirstFilterSecondFilterDoesNotHandleEx() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 516,
        "description": "Change Variable Type appResponseData : AugmentedRestLiResponseData to appResponseData : RestLiResponseEnvelope in method public testOnSuccessWithFiltersExceptionFromSecondFilter() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 564,
        "description": "Change Variable Type filterResponseData : AugmentedRestLiResponseData to filterResponseData : RestLiResponseEnvelope in method public testOnSuccessWithFiltersExceptionFromSecondFilter() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 631,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testOnErrorWithFiltersNotHandlingAppEx() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 720,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testOnErrorWithFiltersSuccessfulyHandlingAppEx() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 757,
        "description": "Change Variable Type responseAppData : AugmentedRestLiResponseData to responseAppData : RestLiResponseEnvelope in method public testOnErrorWithFiltersExceptionFromFirstFilterSecondFilterDoesNotHandle() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Change Variable Type responseFilterData : AugmentedRestLiResponseData to responseFilterData : RestLiResponseEnvelope in method public testOnErrorWithFiltersExceptionFromFirstFilterSecondFilterDoesNotHandle() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 901,
        "description": "Change Variable Type responseAppData : AugmentedRestLiResponseData to responseAppData : RestLiResponseEnvelope in method public testOnErrorWithFiltersExceptionFromFirstFilterSecondFilterHandles(resourceMethod ResourceMethod, entityFromFilter2 Object) : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1001,
        "description": "Change Variable Type responseFilterData : AugmentedRestLiResponseData to responseFilterData : RestLiResponseEnvelope in method public testOnErrorWithFiltersExceptionFromFirstFilterSecondFilterHandles(resourceMethod ResourceMethod, entityFromFilter2 Object) : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 833,
        "description": "Add Parameter Modifier final in parameter resourceMethod : ResourceMethod in method public testOnErrorWithFiltersExceptionFromFirstFilterSecondFilterHandles(resourceMethod ResourceMethod, entityFromFilter2 Object) : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 1053,
        "description": "Change Variable Type responseAppData : AugmentedRestLiResponseData to responseAppData : RestLiResponseEnvelope in method public testOnErrorWithFiltersExceptionFromSecondFilter() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1095,
        "description": "Change Variable Type responseFilterData : AugmentedRestLiResponseData to responseFilterData : RestLiResponseEnvelope in method public testOnErrorWithFiltersExceptionFromSecondFilter() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1128,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testFilterResponseContextAdapter() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1130,
        "description": "Change Variable Type updatedResponseData : AugmentedRestLiResponseData to updatedResponseData : RestLiResponseEnvelope in method public testFilterResponseContextAdapter() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1107,
        "description": "Remove Thrown Exception Type RestLiResponseDataException in method public testFilterResponseContextAdapter() : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Remove Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 1162,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testConvertExceptionToRestLiResponseData(e Exception, status HttpStatus) : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1182,
        "description": "Change Variable Type resultData : AugmentedRestLiResponseData to resultData : RestLiResponseEnvelope in method public testConvertExceptionToRestLiResponseData(e Exception, status HttpStatus) : void from class com.linkedin.restli.internal.server.TestRestLiCallback",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/TestRestLiCallback.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRestLiResponseEnvelope.java",
    "refactorings": [],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/TestRestLiResponseEnvelope.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRestLiResponseEnvelopeExceptions.java",
    "refactorings": [],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/TestRestLiResponseEnvelopeExceptions.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestActionResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 66,
      "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder(result Object, httpStatus HttpStatus, returnValue long) : void from class com.linkedin.restli.internal.server.methods.response.TestActionResponseBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestActionResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestBatchCreateResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 66,
      "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder() : void from class com.linkedin.restli.internal.server.methods.response.TestBatchCreateResponseBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestBatchCreateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestBatchGetResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 159,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder(results Object, protocolVersion ProtocolVersion, expectedTransformedResult Map<String,Foo>, expectedErrors Map<String,ErrorResponse>, expectedExceptionsWithUntypedKey Map<Object,RestLiServiceException>, maskTree MaskTree, projectionMode ProjectionMode) : void from class com.linkedin.restli.internal.server.methods.response.TestBatchGetResponseBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 306,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public unsupportedNullKeyMapTest(results Object, protocolVersion ProtocolVersion, expectedTransformedResult Map<String,Foo>) : void from class com.linkedin.restli.internal.server.methods.response.TestBatchGetResponseBuilder",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestBatchGetResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestBatchUpdateResponseBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 118,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder(results Object, protocolVersion ProtocolVersion, expectedResults Map<String,UpdateStatus>, expectedErrors Map<String,ErrorResponse>) : void from class com.linkedin.restli.internal.server.methods.response.TestBatchUpdateResponseBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 197,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public unsupportedNullKeyMapTest(results Object, protocolVersion ProtocolVersion, expectedResults Map<String,UpdateStatus>) : void from class com.linkedin.restli.internal.server.methods.response.TestBatchUpdateResponseBuilder",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestBatchUpdateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestCollectionResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 196,
      "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder(results Object, expectedMetadata DataMap, expectedElements List<Foo>, expectedPaging CollectionMetadata, dataMaskTree MaskTree, metaDataMaskTree MaskTree, pagingMaskTree MaskTree, dataProjectionMode ProjectionMode, metadataProjectionMode ProjectionMode) : void from class com.linkedin.restli.internal.server.methods.response.TestCollectionResponseBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestCollectionResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestCreateResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 82,
      "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder(protocolVersion ProtocolVersion, location String, id String) : void from class com.linkedin.restli.internal.server.methods.response.TestCreateResponseBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestCreateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestErrorResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 76,
      "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder(protocolVersion ProtocolVersion) : void from class com.linkedin.restli.internal.server.methods.response.TestErrorResponseBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestErrorResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGetResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 96,
      "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder(record Object, expectedHttpStatus HttpStatus, maskTree MaskTree, projectionMode ProjectionMode) : void from class com.linkedin.restli.internal.server.methods.response.TestGetResponseBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestGetResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestUpdateResponseBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 54,
      "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testBuilder() : void from class com.linkedin.restli.internal.server.methods.response.TestUpdateResponseBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/internal/server/methods/response/TestUpdateResponseBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRestLiResponseHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 679,
        "description": "Change Variable Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method public testRestLiResponseData(acceptTypeData AcceptTypeData, response1 String, response2 String, protocolVersion ProtocolVersion, errorResponseHeaderName String) : void from class com.linkedin.restli.server.test.TestRestLiResponseHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1225,
        "description": "Change Parameter Type responseData : AugmentedRestLiResponseData to responseData : RestLiResponseEnvelope in method private checkResponseData(responseData RestLiResponseEnvelope, status HttpStatus, numHeaders int, hasError boolean, hasEntity boolean, errorResponseHeaderName String) : void from class com.linkedin.restli.server.test.TestRestLiResponseHandler",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "restli-server/src/test/java/com/linkedin/restli/server/test/TestRestLiResponseHandler.java",
    "commit": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "ManagedExecutorService.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/concurrent/ManagedExecutorService.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ManagedScheduledExecutorService.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/concurrent/ManagedScheduledExecutorService.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AttributeMarshallers.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/AttributeMarshallers.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Executable.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/Executable.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Metric.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/Metric.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricExecutor.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/MetricExecutor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricHandler.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/MetricHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Operation.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/Operation.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationExecutor.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/OperationExecutor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationHandler.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/OperationHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Operations.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/Operations.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Registration.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/Registration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ReloadRequiredAddStepHandler.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/ReloadRequiredAddStepHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleResourceDescriptionResolver.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/descriptions/SimpleResourceDescriptionResolver.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SubsystemResourceDescriptionResolver.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/descriptions/SubsystemResourceDescriptionResolver.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AttributeOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/AttributeOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChainedOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/ChainedOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultValueAttributeConverter.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/DefaultValueAttributeConverter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/OperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "PathAddressTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/PathAddressTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleAddOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleAddOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleAttributeConverter.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleAttributeConverter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleDescribeOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleDescribeOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleReadAttributeOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleReadAttributeOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleRejectAttributeChecker.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleRejectAttributeChecker.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleRemoveOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleRemoveOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleResourceTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleResourceTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleUndefineAttributeOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleUndefineAttributeOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleWriteAttributeOperationTransformer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/transform/SimpleWriteAttributeOperationTransformer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DoubleRangeValidatorBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/validation/DoubleRangeValidatorBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ModuleIdentifierValidator.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/validation/ModuleIdentifierValidator.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ParameterValidatorBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/controller/validation/ParameterValidatorBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ModelNodes.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/dmr/ModelNodes.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusteringLogger.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/logging/ClusteringLogger.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchServiceTargetFactory.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/BatchServiceTargetFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DelegatingBatchServiceTarget.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/DelegatingBatchServiceTarget.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DelegatingServiceBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/DelegatingServiceBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DelegatingServiceContainer.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/DelegatingServiceContainer.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DelegatingServiceController.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/DelegatingServiceController.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DelegatingServiceTarget.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/DelegatingServiceTarget.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceBuilderFactory.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/ServiceBuilderFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceContainerFactory.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/ServiceContainerFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceContainerHelper.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/ServiceContainerHelper.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceControllerFactory.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/ServiceControllerFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceTargetFactory.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/msc/ServiceTargetFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "BinderServiceBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/naming/BinderServiceBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JndiNameFactory.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/naming/JndiNameFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AliasServiceBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/AliasServiceBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AsynchronousServiceBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/AsynchronousServiceBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Builder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/Builder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Dependency.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/Dependency.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "InjectedValueDependency.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/InjectedValueDependency.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "InjectorDependency.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/InjectorDependency.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceNameProvider.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/ServiceNameProvider.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueDependency.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/ValueDependency.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "CachedThreadPoolExecutorServiceBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/concurrent/CachedThreadPoolExecutorServiceBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoveOnCancelScheduledExecutorServiceBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/main/java/org/infinispan/server/commons/service/concurrent/RemoveOnCancelScheduledExecutorServiceBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelTransport.java",
    "refactorings": [],
    "filePath": "server/integration/infinispan/src/main/java/org/jboss/as/clustering/infinispan/ChannelTransport.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ManagedExecutorFactory.java",
    "refactorings": [],
    "filePath": "server/integration/infinispan/src/main/java/org/jboss/as/clustering/infinispan/ManagedExecutorFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ManagedScheduledExecutorFactory.java",
    "refactorings": [],
    "filePath": "server/integration/infinispan/src/main/java/org/jboss/as/clustering/infinispan/ManagedScheduledExecutorFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheContainerAdd.java",
    "refactorings": [],
    "filePath": "server/integration/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheContainerAdd.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "EmbeddedCacheManagerConfigurationService.java",
    "refactorings": [],
    "filePath": "server/integration/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/EmbeddedCacheManagerConfigurationService.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/ChannelFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkChannelFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/ForkChannelFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JChannelFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/JChannelFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "LogFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/LogFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ManagedSocketFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/ManagedSocketFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolDefaults.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/ProtocolDefaults.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TopologyAddressGenerator.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/TopologyAddressGenerator.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsLogger.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/logging/JGroupsLogger.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RealmAuthorizationCallbackHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/security/RealmAuthorizationCallbackHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SaslClientCallbackHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/security/SaslClientCallbackHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/ChannelFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolConfiguration.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/ProtocolConfiguration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolStackConfiguration.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/ProtocolStackConfiguration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RelayConfiguration.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/RelayConfiguration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoteSiteConfiguration.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/RemoteSiteConfiguration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SaslConfiguration.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/SaslConfiguration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportConfiguration.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/TransportConfiguration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/service/ChannelBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelConnectorBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/service/ChannelConnectorBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelServiceName.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/service/ChannelServiceName.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelServiceNameFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/service/ChannelServiceNameFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolStackServiceName.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/service/ProtocolStackServiceName.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolStackServiceNameFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/spi/service/ProtocolStackServiceNameFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractProtocolConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/AbstractProtocolConfigurationBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Attribute.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/Attribute.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelAddHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ChannelAddHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelMetric.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ChannelMetric.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelMetricExecutor.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ChannelMetricExecutor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelRemoveHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ChannelRemoveHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ChannelResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Element.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/Element.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ExportNativeConfiguration.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ExportNativeConfiguration.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkAddHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ForkAddHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkChannelFactoryBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ForkChannelFactoryBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkProtocolAddHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ForkProtocolAddHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkProtocolResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ForkProtocolResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkProtocolResourceRegistrationHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ForkProtocolResourceRegistrationHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkRemoveHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ForkRemoveHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ForkResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JChannelFactoryBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JChannelFactoryBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsBindingFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsBindingFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsExtension.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsExtension.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsModel.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsModel.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsResourceDescriptionResolver.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsResourceDescriptionResolver.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSchema.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsSchema.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemAddHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsSubsystemAddHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemRemoveHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsSubsystemRemoveHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsSubsystemResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemXMLReader.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsSubsystemXMLReader.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemXMLWriter.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/JGroupsSubsystemXMLWriter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricKeys.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/MetricKeys.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ModelKeys.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ModelKeys.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/PropertyResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ProtocolConfigurationBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolDefaultsBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ProtocolDefaultsBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolMetricsHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ProtocolMetricsHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ProtocolResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolResourceRegistrationHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ProtocolResourceRegistrationHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RelayConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/RelayConfigurationBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RelayResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/RelayResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoteSiteConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/RemoteSiteConfigurationBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoteSiteResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/RemoteSiteResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SaslConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/SaslConfigurationBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SaslResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/SaslResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StackAddHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/StackAddHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StackRemoveHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/StackRemoveHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StackResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/StackResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ThreadPoolResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ThreadPoolResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ThreadsAttributesWriteHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/ThreadsAttributesWriteHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/TransportConfigurationBuilder.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/infinispan/server/jgroups/subsystem/TransportResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JChannelFactory.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/JChannelFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsLogger.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/JGroupsLogger.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsMessages.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/JGroupsMessages.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ThreadFactoryAdapter.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/ThreadFactoryAdapter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TimerSchedulerAdapter.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/TimerSchedulerAdapter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelFactoryService.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/ChannelFactoryService.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelService.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/ChannelService.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemAdd.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemAdd.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemDescribe.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemDescribe.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemRemove.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemRemove.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemRootResource.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemRootResource.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemXMLReader_1_0.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLReader_1_0.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemXMLReader_1_1.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLReader_1_1.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemXMLReader_1_2.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLReader_1_2.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemXMLReader_7_0.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLReader_7_0.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsSubsystemXMLWriter.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLWriter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "Namespace.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/Namespace.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/PropertyResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolLayerAdd.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/ProtocolLayerAdd.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolLayerRemove.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/ProtocolLayerRemove.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/ProtocolResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolStackAdd.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/ProtocolStackAdd.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoteSiteResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/RemoteSiteResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StackResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/StackResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SubsystemWriteAttributeHandler.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/SubsystemWriteAttributeHandler.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportLayerAdd.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/TransportLayerAdd.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportLayerRemove.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/TransportLayerRemove.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportResourceDefinition.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/main/java/org/jboss/as/clustering/jgroups/subsystem/TransportResourceDefinition.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusteringSubsystemTest.java",
    "refactorings": [],
    "filePath": "server/integration/commons/src/test/java/org/infinispan/server/commons/subsystem/ClusteringSubsystemTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "EndpointSubsystemTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/endpoint/src/test/java/org/infinispan/server/endpoint/EndpointSubsystemTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "InfinispanSubsystemDependenciesInitialization.java",
    "refactorings": [],
    "filePath": "server/integration/infinispan/src/test/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemDependenciesInitialization.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "InfinispanSubsystemTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/infinispan/src/test/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "ManagedSocketFactoryTest.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/infinispan/server/jgroups/ManagedSocketFactoryTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "JGroupsSubsystemInitialization.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/infinispan/server/jgroups/subsystem/JGroupsSubsystemInitialization.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OperationSequencesTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/infinispan/server/jgroups/subsystem/OperationSequencesTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OperationTestCaseBase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/infinispan/server/jgroups/subsystem/OperationTestCaseBase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OperationsTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/infinispan/server/jgroups/subsystem/OperationsTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "SubsystemParsingTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/infinispan/server/jgroups/subsystem/SubsystemParsingTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "TransformersTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/infinispan/server/jgroups/subsystem/TransformersTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "JGroupsSubsystemTest.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "JGroupsSubsystemTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OperationTestCaseBase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/jboss/as/clustering/jgroups/subsystem/OperationTestCaseBase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OperationsTestCase.java",
    "refactorings": [],
    "filePath": "server/integration/jgroups/src/test/java/org/jboss/as/clustering/jgroups/subsystem/OperationsTestCase.java",
    "commit": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultLightProjectDescriptor.java",
    "refactorings": [],
    "filePath": "java/testFramework/src/com/intellij/testFramework/fixtures/DefaultLightProjectDescriptor.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "LightPlatformTestCase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 757,
        "description": "Add Attribute Annotation @Nullable in attribute private mySdk : Sdk from class com.intellij.testFramework.LightPlatformTestCase.SimpleLightProjectDescriptor",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 759,
        "description": "Add Parameter Annotation @Nullable in parameter sdk : Sdk in method package SimpleLightProjectDescriptor(moduleType ModuleType, sdk Sdk) from class com.intellij.testFramework.LightPlatformTestCase.SimpleLightProjectDescriptor",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 770,
        "description": "Add Method Annotation @Nullable in method public getSdk() : Sdk from class com.intellij.testFramework.LightPlatformTestCase.SimpleLightProjectDescriptor",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "LightProjectDescriptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 48,
        "description": "Add Attribute Modifier final in attribute public EMPTY_PROJECT_DESCRIPTOR : LightProjectDescriptor from class com.intellij.testFramework.LightProjectDescriptor",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Add Attribute Modifier static in attribute public EMPTY_PROJECT_DESCRIPTOR : LightProjectDescriptor from class com.intellij.testFramework.LightProjectDescriptor",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Change Type Declaration Kind interface to class in type com.intellij.testFramework.LightProjectDescriptor",
        "type": "Change Type Declaration Kind"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Method Annotation @Nullable in method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Method Annotation @Nullable in method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 146,
        "description": "Change Method Access Modifier public to protected in method protected configureModule(module Module, model ModifiableRootModel, contentEntry ContentEntry) : void from class com.intellij.testFramework.LightProjectDescriptor",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Pull Up Method public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor",
        "type": "Pull Up Method"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Remove Method Annotation @Override in method public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor.Empty",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Pull Up Method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor",
        "type": "Pull Up Method"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Remove Method Annotation @Override in method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor.Empty",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Collapse Hierarchy com.intellij.testFramework.LightProjectDescriptor.Empty to com.intellij.testFramework.LightProjectDescriptor",
        "type": "Collapse Hierarchy"
      }
    ],
    "filePath": "platform/testFramework/src/com/intellij/testFramework/LightProjectDescriptor.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "LightProjectDescriptorEx.java",
    "refactorings": [],
    "filePath": "platform/testFramework/src/com/intellij/testFramework/LightProjectDescriptorEx.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "PyLightProjectDescriptor.java",
    "refactorings": [],
    "filePath": "python/testSrc/com/jetbrains/python/fixtures/PyLightProjectDescriptor.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "ArraySubscriptOperator.java",
    "refactorings": [{
      "rightSideLineNumber": 134,
      "description": "Extract Method public checkArrayIndex(index long) : void extracted from public readBlockAndCheckIndex(array Slice, index long) : Block in class com.facebook.presto.operator.scalar.ArraySubscriptOperator",
      "type": "Extract Method"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/scalar/ArraySubscriptOperator.java",
    "commit": "https://github.com/facebook/presto/commit/8b1f5ce432bd6f579c646705d79ff0c4690495ae",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ExpressionInterpreter.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/ExpressionInterpreter.java",
    "commit": "https://github.com/facebook/presto/commit/8b1f5ce432bd6f579c646705d79ff0c4690495ae",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TestExpressionInterpreter.java",
    "refactorings": [],
    "filePath": "presto-main/src/test/java/com/facebook/presto/sql/TestExpressionInterpreter.java",
    "commit": "https://github.com/facebook/presto/commit/8b1f5ce432bd6f579c646705d79ff0c4690495ae",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "ContributionManagerDialog.java",
    "refactorings": [{
      "rightSideLineNumber": 66,
      "description": "Change Attribute Type updatesContributionTab : ContributionTab to updatesContributionTab : UpdateContributionTab in class processing.app.contrib.ContributionManagerDialog",
      "type": "Change Attribute Type"
    }],
    "filePath": "app/src/processing/app/contrib/ContributionManagerDialog.java",
    "commit": "https://github.com/processing/processing/commit/d403a0b2322a74dde824094d67b7997c1c371883",
    "repository": "https://github.com/processing/processing.git",
    "fileType": "main"
  },
  {
    "fileName": "ContributionTab.java",
    "refactorings": [{
      "rightSideLineNumber": 264,
      "description": "Change Method Access Modifier private to package in method package buildErrorPanel() : void from class processing.app.contrib.ContributionTab",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "app/src/processing/app/contrib/ContributionTab.java",
    "commit": "https://github.com/processing/processing/commit/d403a0b2322a74dde824094d67b7997c1c371883",
    "repository": "https://github.com/processing/processing.git",
    "fileType": "main"
  },
  {
    "fileName": "UpdateContribListingPanel.java",
    "refactorings": [],
    "filePath": "app/src/processing/app/contrib/UpdateContribListingPanel.java",
    "commit": "https://github.com/processing/processing/commit/d403a0b2322a74dde824094d67b7997c1c371883",
    "repository": "https://github.com/processing/processing.git",
    "fileType": "main"
  },
  {
    "fileName": "UpdateContributionTab.java",
    "refactorings": [],
    "filePath": "app/src/processing/app/contrib/UpdateContributionTab.java",
    "commit": "https://github.com/processing/processing/commit/d403a0b2322a74dde824094d67b7997c1c371883",
    "repository": "https://github.com/processing/processing.git",
    "fileType": "main"
  },
  {
    "fileName": "UpdateStatusPanel.java",
    "refactorings": [],
    "filePath": "app/src/processing/app/contrib/UpdateStatusPanel.java",
    "commit": "https://github.com/processing/processing/commit/d403a0b2322a74dde824094d67b7997c1c371883",
    "repository": "https://github.com/processing/processing.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseOptimizer.java",
    "refactorings": [],
    "filePath": "deeplearning4j-core/src/main/java/org/deeplearning4j/optimize/solvers/BaseOptimizer.java",
    "commit": "https://github.com/deeplearning4j/deeplearning4j/commit/c50064efb325b0c94cc62788b4c8935b7c39ac40",
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TestOptimizers.java",
    "refactorings": [{
      "rightSideLineNumber": 198,
      "description": "Extract Method private getOptimizer(oa OptimizationAlgorithm, conf NeuralNetConfiguration, m Model) : ConvexOptimizer extracted from public testSphereFnOptHelper(oa OptimizationAlgorithm, numLineSearchIter int, nDimensions int) : void in class org.deeplearning4j.optimize.solver.TestOptimizers",
      "type": "Extract Method"
    }],
    "filePath": "deeplearning4j-core/src/test/java/org/deeplearning4j/optimize/solver/TestOptimizers.java",
    "commit": "https://github.com/deeplearning4j/deeplearning4j/commit/c50064efb325b0c94cc62788b4c8935b7c39ac40",
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "fileType": "test"
  },
  {
    "fileName": "OperationMode.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/OperationMode.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "KafkaStreamImporter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 739,
        "description": "Merge Parameter [added : Set<URI>, removed : Set<URI>] to assignment : ImporterChannelAssignment in method public onChange(assignment ImporterChannelAssignment) : void from class org.voltdb.importclient.kafka.KafkaStreamImporter",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 739,
        "description": "Remove Parameter assigned : Set<URI> in method public onChange(added Set<URI>, removed Set<URI>, assigned Set<URI>, version int) : void from class org.voltdb.importclient.kafka.KafkaStreamImporter",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 739,
        "description": "Remove Parameter version : int in method public onChange(added Set<URI>, removed Set<URI>, assigned Set<URI>, version int) : void from class org.voltdb.importclient.kafka.KafkaStreamImporter",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "src/frontend/org/voltdb/importclient/kafka/KafkaStreamImporter.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelAssignment.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importer/ChannelAssignment.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelChangeCallback.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importer/ChannelChangeCallback.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelChangeNotifier.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importer/ChannelChangeNotifier.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelDistributer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 260,
        "description": "Add Attribute Modifier final in attribute package m_specs : SpecsRef from class org.voltdb.importer.ChannelDistributer",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 260,
        "description": "Remove Attribute Modifier volatile in attribute package m_specs : SpecsRef from class org.voltdb.importer.ChannelDistributer",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 261,
        "description": "Add Attribute Modifier final in attribute package m_hosts : HostsRef from class org.voltdb.importer.ChannelDistributer",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 261,
        "description": "Remove Attribute Modifier volatile in attribute package m_hosts : HostsRef from class org.voltdb.importer.ChannelDistributer",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 262,
        "description": "Add Attribute Modifier final in attribute package m_channels : ChannelsRef from class org.voltdb.importer.ChannelDistributer",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 262,
        "description": "Remove Attribute Modifier volatile in attribute package m_channels : ChannelsRef from class org.voltdb.importer.ChannelDistributer",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 115,
        "description": "Add Parameter content : byte[] in method package mkdirs(zk ZooKeeper, zkNode String, content byte[]) : void from class org.voltdb.importer.ChannelDistributer",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 117,
        "description": "Parameterize Attribute EMPTY_ARRAY : byte[] to content : byte[] in method package mkdirs(zk ZooKeeper, zkNode String, content byte[]) : void from class org.voltdb.importer.ChannelDistributer",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "src/frontend/org/voltdb/importer/ChannelDistributer.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportHandlerProxy.java",
    "refactorings": [
      {
        "rightSideLineNumber": 174,
        "description": "Add Parameter assignment : ImporterChannelAssignment in method public onChange(assignment ImporterChannelAssignment) : void from class org.voltdb.importer.ImportHandlerProxy",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 174,
        "description": "Remove Parameter added : Set<URI> in method public onChange(added Set<URI>, removed Set<URI>, assigned Set<URI>, version int) : void from class org.voltdb.importer.ImportHandlerProxy",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 174,
        "description": "Remove Parameter removed : Set<URI> in method public onChange(added Set<URI>, removed Set<URI>, assigned Set<URI>, version int) : void from class org.voltdb.importer.ImportHandlerProxy",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 174,
        "description": "Remove Parameter assigned : Set<URI> in method public onChange(added Set<URI>, removed Set<URI>, assigned Set<URI>, version int) : void from class org.voltdb.importer.ImportHandlerProxy",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 174,
        "description": "Remove Parameter version : int in method public onChange(added Set<URI>, removed Set<URI>, assigned Set<URI>, version int) : void from class org.voltdb.importer.ImportHandlerProxy",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "src/frontend/org/voltdb/importer/ImportHandlerProxy.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportManager.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importer/ImportManager.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportProcessor.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importer/ImportProcessor.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ImporterChannelAssignment.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importer/ImporterChannelAssignment.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "VersionedOperationMode.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importer/VersionedOperationMode.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "Pause.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/sysprocs/Pause.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "Resume.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/sysprocs/Resume.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "TestChannelDistributer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 81,
        "description": "Rename Method package fromURIs(uris Set<URI>) : Set<ChannelSpec> renamed to package asSpecs(uris Set<URI>) : Set<ChannelSpec> in class org.voltdb.importer.TestChannelDistributer",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 61,
        "description": "Change Attribute Type queue : BlockingDeque<ChannelAssignment> to queue : BlockingDeque<ImporterChannelAssignment> in class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Change Variable Type expected : Set<ChannelSpec> to expected : Set<URI> in method public testRegistration() : void from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 168,
        "description": "Change Variable Type actual : Set<ChannelSpec> to actual : Set<URI> in method public testRegistration() : void from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 188,
        "description": "Change Variable Type expected : Set<ChannelSpec> to expected : Set<URI> in method public testHostFailure() : void from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 212,
        "description": "Change Variable Type actual : Set<ChannelSpec> to actual : Set<URI> in method public testHostFailure() : void from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 95,
        "description": "Change Variable Type sbldr : ImmutableSet.Builder<ChannelSpec> to sbldr : ImmutableSet.Builder<URI> in method package getRemoved(expected int) : Set<URI> from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 89,
        "description": "Change Variable Type assignment : ChannelAssignment to assignment : ImporterChannelAssignment in method package getRemoved(expected int) : Set<URI> from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Change Return Type Set<ChannelSpec> to Set<URI> in method package getRemoved(expected int) : Set<URI> from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 108,
        "description": "Change Variable Type sbldr : ImmutableSet.Builder<ChannelSpec> to sbldr : ImmutableSet.Builder<URI> in method package getAdded(expected int) : Set<URI> from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 102,
        "description": "Change Variable Type assignment : ChannelAssignment to assignment : ImporterChannelAssignment in method package getAdded(expected int) : Set<URI> from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Change Return Type Set<ChannelSpec> to Set<URI> in method package getAdded(expected int) : Set<URI> from class org.voltdb.importer.TestChannelDistributer",
        "type": "Change Return Type"
      }
    ],
    "filePath": "tests/frontend/org/voltdb/importer/TestChannelDistributer.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "MethodMapper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 102,
        "description": "Extract Method private validateParameters() : void extracted from public prepare(manager MappingManager, ps PreparedStatement) : void in class com.datastax.driver.mapping.MethodMapper",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 108,
        "description": "Extract Variable variables : ColumnDefinitions in method private validateParameters() : void from class com.datastax.driver.mapping.MethodMapper",
        "type": "Extract Variable"
      }
    ],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/MethodMapper.java",
    "commit": "https://github.com/datastax/java-driver/commit/14abb6919a99a0d6d500198dd2e30c83b1bb6709",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "MapperAccessorParamsTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 41,
        "description": "Rename Method package should_include_enumtype_in_accessor_ordinal() : void renamed to public should_allow_enum_as_int_in_accessor_params() : void in class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Rename Method package should_include_enumtype_in_accessor_string() : void renamed to public should_allow_enum_as_string_in_accessor_params() : void in class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 41,
        "description": "Change Method Access Modifier package to public in method public should_allow_enum_as_int_in_accessor_params() : void from class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Change Method Access Modifier package to public in method public should_allow_enum_as_string_in_accessor_params() : void from class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "driver-mapping/src/test/java/com/datastax/driver/mapping/MapperAccessorParamsTest.java",
    "commit": "https://github.com/datastax/java-driver/commit/14abb6919a99a0d6d500198dd2e30c83b1bb6709",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "ClientEndpointManagerImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 54,
      "description": "Add Attribute Annotation @Probe(name = \"count\") in attribute private endpoints : ConcurrentMap<Connection,ClientEndpoint> from class com.hazelcast.client.impl.ClientEndpointManagerImpl",
      "type": "Add Attribute Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/ClientEndpointManagerImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusterClockImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Add Method Annotation @Probe(name = \"clusterTime\") in method public getClusterTime() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 50,
        "description": "Add Method Annotation @Probe(name = \"clusterTimeDiff\") in method public getClusterTimeDiff() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Add Method Annotation @Probe(name = \"clusterUpTime\") in method public getClusterUpTime() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 73,
        "description": "Add Method Annotation @Probe(name = \"clusterStartTime\") in method public getClusterStartTime() : long from class com.hazelcast.cluster.impl.ClusterClockImpl",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/ClusterClockImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusterServiceImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 169,
        "description": "Add Attribute Annotation @Probe(name = \"lastHeartBeat\") in attribute private lastHeartBeat : long from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 1393,
        "description": "Add Method Annotation @Probe(name = \"size\") in method public getSize() : int from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/ClusterServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "GroupProperties.java",
    "refactorings": [
      {
        "rightSideLineNumber": 62,
        "description": "Rename Attribute PROP_PERFORMANCE_MONITORING_ENABLED : String to PROP_PERFORMANCE_MONITOR_ENABLED : String in class com.hazelcast.instance.GroupProperties",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 458,
        "description": "Rename Attribute PERFORMANCE_MONITORING_ENABLED : GroupProperty to PERFORMANCE_MONITOR_ENABLED : GroupProperty in class com.hazelcast.instance.GroupProperties",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 460,
        "description": "Rename Attribute PERFORMANCE_MONITORING_DELAY_SECONDS : GroupProperty to PERFORMANCE_MONITOR_DELAY_SECONDS : GroupProperty in class com.hazelcast.instance.GroupProperties",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/instance/GroupProperties.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HazelcastInstanceImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DoubleGauge.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/DoubleGauge.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DoubleProbeFunction.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/DoubleProbeFunction.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Gauge.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/Gauge.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LongGauge.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/LongGauge.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LongProbeFunction.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/LongProbeFunction.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Metric.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/Metric.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricsRegistry.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/MetricsRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Probe.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/Probe.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ProbeFunction.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/ProbeFunction.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractGauge.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/AbstractGauge.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DoubleGaugeImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/DoubleGaugeImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "FieldProbe.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/FieldProbe.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "GaugeImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/GaugeImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LockStripe.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/LockStripe.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LongGaugeImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/LongGaugeImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MethodProbe.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/MethodProbe.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricsRegistryImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 93,
        "description": "Rename Method package getObjectMetadata(clazz Class<?>) : SourceMetadata renamed to package loadSourceMetadata(clazz Class<?>) : SourceMetadata in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Change Attribute Access Modifier private to package in attribute package logger : ILogger from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Remove Method Modifier synchronized in method public scanAndRegister(source S, namePrefix String) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 191,
        "description": "Change Variable Type gauge : GaugeImpl to probeInstance : ProbeInstance in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 189,
        "description": "Change Variable Type entry : Map.Entry<String,GaugeImpl> to entry : Map.Entry<String,ProbeInstance> in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 191,
        "description": "Rename Variable gauge : GaugeImpl to probeInstance : ProbeInstance in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Remove Method Modifier synchronized in method public deregister(source S) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Remove Method Annotation @Override in method public modCount() : int from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Change Method Access Modifier public to package in method package modCount() : int from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Change Parameter Type input : LongProbe<S> to function : LongProbeFunction<S> in method public register(source S, name String, function LongProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Rename Parameter input : LongProbe<S> to function : LongProbeFunction<S> in method public register(source S, name String, function LongProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 119,
        "description": "Remove Method Modifier synchronized in method public register(source S, name String, input LongProbe<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 134,
        "description": "Change Parameter Type input : DoubleProbe<S> to function : DoubleProbeFunction<S> in method public register(source S, name String, function DoubleProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 134,
        "description": "Rename Parameter input : DoubleProbe<S> to function : DoubleProbeFunction<S> in method public register(source S, name String, function DoubleProbeFunction<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 128,
        "description": "Remove Method Modifier synchronized in method public register(source S, name String, input DoubleProbe<S>) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 146,
        "description": "Change Variable Type gauge : GaugeImpl to probeInstance : ProbeInstance in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 158,
        "description": "Change Parameter Type input : Object to function : ProbeFunction in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 146,
        "description": "Rename Variable gauge : GaugeImpl to probeInstance : ProbeInstance in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 158,
        "description": "Rename Parameter input : Object to function : ProbeFunction in method package registerInternal(source S, name String, function ProbeFunction) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Add Parameter probeInstance : ProbeInstance in method private logOverwrite(probeInstance ProbeInstance) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Remove Parameter name : String in method private logOverwrite(name String, gauge GaugeImpl) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Remove Parameter gauge : GaugeImpl in method private logOverwrite(name String, gauge GaugeImpl) : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Rename Attribute metrics : ConcurrentMap<String,GaugeImpl> to probeInstances : ConcurrentMap<String,ProbeInstance> in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Change Attribute Type metrics : ConcurrentMap<String,GaugeImpl> to probeInstances : ConcurrentMap<String,ProbeInstance> in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/MetricsRegistryImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ProbeInstance.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/ProbeInstance.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ProbeUtils.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/ProbeUtils.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "SortedProbesInstances.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/SortedProbesInstances.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "SourceMetadata.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/impl/SourceMetadata.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoadingMetricSet.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/metricsets/ClassLoadingMetricSet.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "OperatingSystemMetricsSet.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/metricsets/OperatingSystemMetricsSet.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "RuntimeMetricSet.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/metricsets/RuntimeMetricSet.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ThreadMetricSet.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/metricsets/ThreadMetricSet.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "CommaSeparatedKeyValueProbeRenderer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/renderers/CommaSeparatedKeyValueProbeRenderer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HumanFriendlyProbeRenderer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/renderers/HumanFriendlyProbeRenderer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ProbeRenderer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/renderers/ProbeRenderer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/metrics/renderers/package-info.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HealthMonitor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 162,
        "description": "Change Class Access Modifier private to package in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 290,
        "description": "Rename Method public toString() : String renamed to public render() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 262,
        "description": "Remove Attribute Modifier final in attribute private memoryUsedOfTotalPercentage : double from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 263,
        "description": "Remove Attribute Modifier final in attribute private memoryUsedOfMaxPercentage : double from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 165,
        "description": "Change Attribute Type clusterTimeDiff : long to clusterTimeDiff : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 165,
        "description": "Change Attribute Access Modifier private to package in attribute package clusterTimeDiff : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 187,
        "description": "Change Attribute Type eventQueueSize : int to eventQueueSize : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 187,
        "description": "Change Attribute Access Modifier private to package in attribute package eventQueueSize : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Change Attribute Type proxyCount : int to proxyCount : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Change Attribute Access Modifier private to package in attribute package proxyCount : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Change Attribute Type clientEndpointCount : int to clientEndpointCount : LongGauge in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Change Attribute Access Modifier private to package in attribute package clientEndpointCount : LongGauge from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 306,
        "description": "Extract Method private renderConnection() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 305,
        "description": "Extract Method private renderClient() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 304,
        "description": "Extract Method private renderProxy() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 336,
        "description": "Extract Method private renderLoad() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 292,
        "description": "Extract Method private renderProcessors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 293,
        "description": "Extract Method private renderPhysicalMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 294,
        "description": "Extract Method private renderSwap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 368,
        "description": "Extract Method private renderHeap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 301,
        "description": "Extract Method private renderEvents() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 300,
        "description": "Extract Method private renderCluster() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Extract Method private renderThread() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Extract Method private renderGc() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 415,
        "description": "Extract Method private renderNativeMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 450,
        "description": "Extract Method private renderExecutors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 303,
        "description": "Extract Method private renderOperationService() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 315,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderConnection() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 320,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderClient() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 325,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderProxy() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 339,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderLoad() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 345,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderProcessors() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 352,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderPhysicalMemory() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 359,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderSwap() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 366,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderHeap() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 379,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderEvents() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 384,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderCluster() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 391,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderThread() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 408,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderGc() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 425,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderNativeMemory() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 446,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderExecutors() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 471,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method private renderOperationService() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 307,
        "description": "Replace Variable With Attribute sb : StringBuilder to sb : StringBuilder in method public render() : String from class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Rename Attribute THRESHOLD : double to THRESHOLD_PERCENTAGE : double in class com.hazelcast.internal.monitors.HealthMonitor",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Move Method public run() : void from class com.hazelcast.internal.monitors.HealthMonitor to public run() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
        "type": "Move Method"
      },
      {
        "rightSideLineNumber": 101,
        "description": "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor to private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
        "type": "Move Attribute"
      },
      {
        "rightSideLineNumber": 101,
        "description": "Extract Class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread from class com.hazelcast.internal.monitors.HealthMonitor",
        "type": "Extract Class"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/monitors/HealthMonitor.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "PerformanceLogFile.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/monitors/PerformanceLogFile.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "PerformanceMonitor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Change Attribute Access Modifier private to package in attribute package logger : ILogger from class com.hazelcast.internal.monitors.PerformanceMonitor",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Change Attribute Access Modifier private to package in attribute package operationService : InternalOperationService from class com.hazelcast.internal.monitors.PerformanceMonitor",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 95,
        "description": "Move Method public run() : void from class com.hazelcast.internal.monitors.PerformanceMonitor to public run() : void from class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
        "type": "Move Method"
      },
      {
        "rightSideLineNumber": 111,
        "description": "Extract Method private sleep() : void extracted from public run() : void in class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor to private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
        "type": "Move Attribute"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Extract Class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread from class com.hazelcast.internal.monitors.PerformanceMonitor",
        "type": "Extract Class"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/internal/monitors/PerformanceMonitor.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectionManager.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/ConnectionManager.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "IOService.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/IOService.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeIOService.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/NodeIOService.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractIOSelector.java",
    "refactorings": [
      {
        "rightSideLineNumber": 37,
        "description": "Change Attribute Access Modifier private to protected in attribute protected selectorQueue : Queue<Runnable> from class com.hazelcast.nio.tcp.AbstractIOSelector",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Add Attribute Annotation @Probe(name = \"selectorQueueSize\") in attribute protected selectorQueue : Queue<Runnable> from class com.hazelcast.nio.tcp.AbstractIOSelector",
        "type": "Add Attribute Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/AbstractIOSelector.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractSelectionHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 37,
        "description": "Change Attribute Access Modifier private to protected in attribute protected selectionKey : SelectionKey from class com.hazelcast.nio.tcp.AbstractSelectionHandler",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 61,
        "description": "Remove Method Modifier final in method package handleSocketException(e Throwable) : void from class com.hazelcast.nio.tcp.AbstractSelectionHandler",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 105,
        "description": "Add Method Annotation @Override in method public getOwner() : IOSelector from class com.hazelcast.nio.tcp.AbstractSelectionHandler",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/AbstractSelectionHandler.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultPacketReader.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/DefaultPacketReader.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InSelectorImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 31,
        "description": "Change Attribute Type readEvents : long to readEvents : SwCounter in class com.hazelcast.nio.tcp.InSelectorImpl",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Add Attribute Modifier final in attribute private readEvents : SwCounter from class com.hazelcast.nio.tcp.InSelectorImpl",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Remove Attribute Modifier volatile in attribute private readEvents : long from class com.hazelcast.nio.tcp.InSelectorImpl",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Add Attribute Annotation @Probe in attribute private readEvents : SwCounter from class com.hazelcast.nio.tcp.InSelectorImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 50,
        "description": "Remove Method Annotation @SuppressFBWarnings({\"VO_VOLATILE_INCREMENT\"}) in method protected handleSelectionKey(sk SelectionKey) : void from class com.hazelcast.nio.tcp.InSelectorImpl",
        "type": "Remove Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/InSelectorImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "OutSelectorImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 31,
        "description": "Change Attribute Type writeEvents : long to writeEvents : SwCounter in class com.hazelcast.nio.tcp.OutSelectorImpl",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Add Attribute Modifier final in attribute private writeEvents : SwCounter from class com.hazelcast.nio.tcp.OutSelectorImpl",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Remove Attribute Modifier volatile in attribute private writeEvents : long from class com.hazelcast.nio.tcp.OutSelectorImpl",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Add Attribute Annotation @Probe in attribute private writeEvents : SwCounter from class com.hazelcast.nio.tcp.OutSelectorImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Remove Method Annotation @SuppressFBWarnings({\"VO_VOLATILE_INCREMENT\"}) in method protected handleSelectionKey(sk SelectionKey) : void from class com.hazelcast.nio.tcp.OutSelectorImpl",
        "type": "Remove Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/OutSelectorImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ReadHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 215,
        "description": "Rename Method package getLastHandle() : long renamed to package getLastReadTime() : long in class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Change Attribute Type eventCount : long to eventCount : SwCounter in class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Add Attribute Modifier final in attribute private eventCount : SwCounter from class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Remove Attribute Modifier volatile in attribute private eventCount : long from class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Add Attribute Annotation @Probe(name = \"in.eventCount\") in attribute private eventCount : SwCounter from class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Add Method Annotation @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"VO_VOLATILE_INCREMENT\", justification = \"eventCount is accessed by a single thread only.\") in method public handle() : void from class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Remove Method Annotation @SuppressFBWarnings(value = \"VO_VOLATILE_INCREMENT\", justification = \"eventCount is accessed by a single thread only.\") in method public handle() : void from class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Rename Attribute lastHandle : long to lastReadTime : long in class com.hazelcast.nio.tcp.ReadHandler",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/ReadHandler.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpIpConnection.java",
    "refactorings": [{
      "rightSideLineNumber": 224,
      "description": "Extract Method package getConnectionAddress() : Object extracted from public close(t Throwable) : void in class com.hazelcast.nio.tcp.TcpIpConnection",
      "type": "Extract Method"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/TcpIpConnection.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpIpConnectionManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Add Attribute Annotation @Probe(name = \"count\") in attribute private connectionsMap : ConcurrentHashMap<Address,Connection> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Add Attribute Annotation @Probe(name = \"monitorCount\") in attribute private monitors : ConcurrentHashMap<Address,TcpIpConnectionMonitor> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Add Attribute Annotation @Probe(name = \"inProgressCount\") in attribute private connectionsInProgress : Set<Address> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 96,
        "description": "Add Attribute Annotation @Probe(name = \"connectionListenerCount\") in attribute private connectionListeners : Set<ConnectionListener> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Add Attribute Annotation @Probe(name = \"acceptedSocketCount\") in attribute private acceptedSockets : Set<SocketChannelWrapper> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Add Attribute Annotation @Probe(name = \"activeCount\") in attribute private activeConnections : Set<TcpIpConnection> from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Add Attribute Annotation @Probe(name = \"textCount\") in attribute private allTextConnections : AtomicInteger from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 234,
        "description": "Encapsulate Attribute private ioBalancer : IOBalancer from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 485,
        "description": "Extract Variable inSelector : InSelectorImpl in method public start() : void from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 494,
        "description": "Extract Variable outSelector : OutSelectorImpl in method public start() : void from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 610,
        "description": "Add Method Annotation @Probe(name = \"clientCount\") in method public getCurrentClientConnections() : int from class com.hazelcast.nio.tcp.TcpIpConnectionManager",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/TcpIpConnectionManager.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "WriteHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 99,
        "description": "Rename Method package getLastHandle() : long renamed to package getLastWriteTime() : long in class com.hazelcast.nio.tcp.WriteHandler",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 51,
        "description": "Add Attribute Annotation @Probe(name = \"out.writeQueueSize\") in attribute private writeQueue : Queue<SocketWritable> from class com.hazelcast.nio.tcp.WriteHandler",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Add Attribute Annotation @Probe(name = \"out.priorityWriteQueueSize\") in attribute private urgentWriteQueue : Queue<SocketWritable> from class com.hazelcast.nio.tcp.WriteHandler",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Add Attribute Modifier volatile in attribute private currentPacket : SocketWritable from class com.hazelcast.nio.tcp.WriteHandler",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Add Attribute Annotation @Probe(name = \"out.eventCount\") in attribute private eventCount : long from class com.hazelcast.nio.tcp.WriteHandler",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 68,
        "description": "Rename Attribute lastHandle : long to lastWriteTime : long in class com.hazelcast.nio.tcp.WriteHandler",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/WriteHandler.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "EventCountBasicMigrationStrategy.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/iobalancer/EventCountBasicMigrationStrategy.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "IOBalancer.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/iobalancer/IOBalancer.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalPartitionServiceImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 128,
        "description": "Add Attribute Annotation @Probe in attribute private replicaSyncProcessLock : Semaphore from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 140,
        "description": "Add Attribute Annotation @Probe in attribute private stateVersion : AtomicInteger from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Attribute Annotation @Probe(name = \"migrationQueueSize\") in attribute private migrationQueue : BlockingQueue<Runnable> from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 145,
        "description": "Add Attribute Annotation @Probe(name = \"lastRepartitionTime\") in attribute private lastRepartitionTime : AtomicLong from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 152,
        "description": "Add Attribute Annotation @Probe in attribute private memberGroupsSize : int from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 159,
        "description": "Add Attribute Annotation @Probe(name = \"activeMigrationCount\") in attribute private activeMigrations : ConcurrentMap<Integer,MigrationInfo> from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 384,
        "description": "Add Method Annotation @Probe(name = \"maxBackupCount\") in method public getMaxBackupCount() : int from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 390,
        "description": "Add Method Annotation @Override in method public memberAdded(member MemberImpl) : void from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 413,
        "description": "Add Method Annotation @Override in method public memberRemoved(member MemberImpl) : void from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 830,
        "description": "Add Method Annotation @Override in method public getActiveMigrations() : Collection<MigrationInfo> from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/partition/impl/InternalPartitionServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeEngineImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/NodeEngineImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "EventServiceImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 83,
        "description": "Add Attribute Annotation @Probe(name = \"threadCount\") in attribute private eventThreadCount : int from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Add Attribute Annotation @Probe(name = \"queueCapacity\") in attribute private eventQueueCapacity : int from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Change Attribute Type totalFailures : AtomicLong to totalFailures : MwCounter in class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Add Attribute Annotation @Probe(name = \"totalFailureCount\") in attribute private totalFailures : MwCounter from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Add Method Annotation @Probe(name = \"eventQueueSize\") in method public getEventQueueSize() : int from class com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/eventservice/impl/EventServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "EventServiceSegment.java",
    "refactorings": [
      {
        "rightSideLineNumber": 43,
        "description": "Add Attribute Annotation @Probe(name = \"listenerCount\") in attribute private registrationIdMap : ConcurrentMap<String,Registration> from class com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Add Attribute Annotation @Probe(name = \"publicationCount\") in attribute private totalPublishes : AtomicLong from class com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
        "type": "Add Attribute Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/eventservice/impl/EventServiceSegment.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ExecutionServiceImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 135,
      "description": "Add Variable Modifier final in variable executor : ManagedExecutorService in method public register(name String, defaultPoolSize int, defaultQueueCapacity int, type ExecutorType) : ManagedExecutorService from class com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl",
      "type": "Add Variable Modifier"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/executionservice/impl/ExecutionServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationExecutor.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationexecutor/OperationExecutor.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassicOperationExecutor.java",
    "refactorings": [{
      "rightSideLineNumber": 85,
      "description": "Add Parameter metricsRegistry : MetricsRegistry in method public ClassicOperationExecutor(properties GroupProperties, loggerService LoggingService, thisAddress Address, operationRunnerFactory OperationRunnerFactory, responsePacketHandler ResponsePacketHandler, hazelcastThreadGroup HazelcastThreadGroup, nodeExtension NodeExtension, metricsRegistry MetricsRegistry) from class com.hazelcast.spi.impl.operationexecutor.classic.ClassicOperationExecutor",
      "type": "Add Parameter"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationexecutor/classic/ClassicOperationExecutor.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationThread.java",
    "refactorings": [{
      "rightSideLineNumber": 126,
      "description": "Remove Method Annotation @SuppressFBWarnings({\"VO_VOLATILE_INCREMENT\"}) in method private process(task Object) : void from class com.hazelcast.spi.impl.operationexecutor.classic.OperationThread",
      "type": "Remove Method Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationexecutor/classic/OperationThread.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalOperationService.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/InternalOperationService.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Invocation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/Invocation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InvocationRegistry.java",
    "refactorings": [
      {
        "rightSideLineNumber": 75,
        "description": "Add Attribute Annotation @Probe(name = \"invocations.pending\") in attribute private invocations : ConcurrentMap<Long,Invocation> from class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 128,
        "description": "Add Method Annotation @Probe(name = \"invocations.lastCallId\") in method public getLastCallId() : long from class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/InvocationRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationRunnerImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/OperationRunnerImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationServiceImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 98,
        "description": "Rename Attribute executedOperationsCount : AtomicLong to completedOperationsCount : AtomicLong in class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Add Attribute Annotation @Probe(name = \"completed.count\") in attribute package completedOperationsCount : AtomicLong from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
        "type": "Add Attribute Annotation"
      },
      {
        "rightSideLineNumber": 196,
        "description": "Add Method Annotation @Probe(name = \"running.count\") in method public getRunningOperationsCount() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 212,
        "description": "Add Method Annotation @Probe(name = \"response-queue.size\") in method public getResponseQueueSize() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 218,
        "description": "Add Method Annotation @Probe(name = \"queue.size\") in method public getOperationExecutorQueueSize() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 224,
        "description": "Add Method Annotation @Probe(name = \"priority-queue.size\") in method public getPriorityOperationExecutorQueueSize() : int from class com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/OperationServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ProxyServiceImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 99,
      "description": "Add Method Annotation @Probe(name = \"proxyCount\") in method public getProxyCount() : int from class com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
      "type": "Add Method Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/proxyservice/impl/ProxyServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ManagedExecutorService.java",
    "refactorings": [
      {
        "rightSideLineNumber": 27,
        "description": "Add Method Annotation @Probe(name = \"completedTaskCount\") in method public getCompletedTaskCount() : long from class com.hazelcast.util.executor.ManagedExecutorService",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 30,
        "description": "Add Method Annotation @Probe(name = \"maximumPoolSize\") in method public getMaximumPoolSize() : int from class com.hazelcast.util.executor.ManagedExecutorService",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Add Method Annotation @Probe(name = \"poolSize\") in method public getPoolSize() : int from class com.hazelcast.util.executor.ManagedExecutorService",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 36,
        "description": "Add Method Annotation @Probe(name = \"queueSize\") in method public getQueueSize() : int from class com.hazelcast.util.executor.ManagedExecutorService",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 39,
        "description": "Add Method Annotation @Probe(name = \"remainingQueueCapacity\") in method public getRemainingQueueCapacity() : int from class com.hazelcast.util.executor.ManagedExecutorService",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/util/executor/ManagedExecutorService.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DoubleGaugeImplTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/DoubleGaugeImplTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "FieldProbeTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/FieldProbeTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "GaugeImplTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/GaugeImplTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "LongGaugeImplTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/LongGaugeImplTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "MethodProbeTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/MethodProbeTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "MetricsRegistryImplTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Rename Method public getMetric_whenNullName() : void renamed to public newGauge_whenNullName() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 54,
        "description": "Rename Method public getMetric_whenNotExistingMetric() : void renamed to public newGauge_whenNotExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 63,
        "description": "Rename Method public getMetric_whenExistingMetric() : void renamed to public newGauge_whenExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGaugeImpl in method public newGauge_whenNotExistingMetric() : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 68,
        "description": "Change Variable Type first : Gauge to first : LongGaugeImpl in method public newGauge_whenExistingMetric() : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 68,
        "description": "Change Variable Type second : Gauge to second : LongGaugeImpl in method public newGauge_whenExistingMetric() : void from class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/MetricsRegistryImplTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "ProbeUtilsTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/ProbeUtilsTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "RegisterAnnotatedFieldsTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 40,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_customName() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveInteger() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveLong() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public register_primitiveDouble() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 104,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_concurrentHashMap() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_counterFields() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 140,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_staticField() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 157,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_superclassRegistration() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedFieldsTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/RegisterAnnotatedFieldsTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "RegisterAnnotatedMethodsTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 59,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_withCustomName() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveByte() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveShort() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveInt() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_primitiveLong() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public register_primitiveFloat() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 169,
        "description": "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public register_primitiveDouble() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 185,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_atomicLong() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 201,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_atomicInteger() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 217,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_counter() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 235,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_collection() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 255,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_map() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 275,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_subclass() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 296,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_staticMethod() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 312,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public register_interfaceWithGauges() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 333,
        "description": "Change Variable Type methodGauge : Gauge to methodGauge : LongGauge in method public register_superclassWithGaugeMethods() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 336,
        "description": "Change Variable Type fieldGauge : Gauge to fieldGauge : LongGauge in method public register_superclassWithGaugeMethods() : void from class com.hazelcast.internal.metrics.impl.RegisterAnnotatedMethodsTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/RegisterAnnotatedMethodsTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "RegisterMetricTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 120,
        "description": "Change Variable Type field1 : Gauge to field1 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Change Variable Type field2 : Gauge to field2 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Change Variable Type method1 : Gauge to method1 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 123,
        "description": "Change Variable Type method2 : Gauge to method2 : LongGauge in method public deregister_whenRegistered() : void from class com.hazelcast.internal.metrics.impl.RegisterMetricTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/RegisterMetricTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "RenderTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/impl/RenderTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "ClassLoadingMetricSetTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 45,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public loadedClassesCount() : void from class com.hazelcast.internal.metrics.metricsets.ClassLoadingMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public totalLoadedClassesCount() : void from class com.hazelcast.internal.metrics.metricsets.ClassLoadingMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public unloadedClassCount() : void from class com.hazelcast.internal.metrics.metricsets.ClassLoadingMetricSetTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/metricsets/ClassLoadingMetricSetTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "GarbageCollectionMetricSetTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 43,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public minorCount() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public minorTime() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public majorCount() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public majorTime() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public unknownCount() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 104,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public unknownTime() : void from class com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSetTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/metricsets/GarbageCollectionMetricSetTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "OperatingSystemMetricSetTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 100,
        "description": "Change Variable Type gauge : Gauge to gauge : DoubleGauge in method public registerMethod_whenDouble() : void from class com.hazelcast.internal.metrics.metricsets.OperatingSystemMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 111,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public registerMethod_whenLong() : void from class com.hazelcast.internal.metrics.metricsets.OperatingSystemMetricSetTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/metricsets/OperatingSystemMetricSetTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "RuntimeMetricSetTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public freeMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 58,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public totalMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public maxMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public usedMemory() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 91,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public availableProcessors() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 101,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public uptime() : void from class com.hazelcast.internal.metrics.metricsets.RuntimeMetricSetTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/metricsets/RuntimeMetricSetTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "ThreadMetricSetTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 45,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public threadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public peakThreadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public daemonThreadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 81,
        "description": "Change Variable Type gauge : Gauge to gauge : LongGauge in method public totalStartedThreadCount() : void from class com.hazelcast.internal.metrics.metricsets.ThreadMetricSetTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/metricsets/ThreadMetricSetTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "CommaSeparatedKeyValueProbeRendererTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/renderers/CommaSeparatedKeyValueProbeRendererTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "HumanFriendlyProbeRendererTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/metrics/renderers/HumanFriendlyProbeRendererTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "HealthMonitorTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/monitors/HealthMonitorTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "PerformanceMonitorTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/internal/monitors/PerformanceMonitorTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractClassicOperationExecutorTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/AbstractClassicOperationExecutorTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "ClassicOperationExecutorTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/ClassicOperationExecutorTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "OperationRunnerImplTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/OperationRunnerImplTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "HazelcastTestSupport.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/test/HazelcastTestSupport.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestNodeRegistry.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/test/TestNodeRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractConnector.java",
    "refactorings": [],
    "filePath": "main/src/cgeo/geocaching/connector/AbstractConnector.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "IConnector.java",
    "refactorings": [],
    "filePath": "main/src/cgeo/geocaching/connector/IConnector.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "GCMap.java",
    "refactorings": [{
      "rightSideLineNumber": 58,
      "description": "Extract Variable filteredGeocodes : Set<String> in method public searchByGeocodes(geocodes Set<String>) : SearchResult from class cgeo.geocaching.connector.gc.GCMap",
      "type": "Extract Variable"
    }],
    "filePath": "main/src/cgeo/geocaching/connector/gc/GCMap.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorFactoryTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/ConnectorFactoryTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "GeocachingAustraliaConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/GeocachingAustraliaConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "GeopeitusConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/GeopeitusConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "WaymarkingConnectorTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 13,
        "description": "Extract Method private getWaymarkingConnector() : IConnector extracted from public testGetGeocodeFromUrl() : void in class cgeo.geocaching.connector.WaymarkingConnectorTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 13,
        "description": "Extract Method private getWaymarkingConnector() : IConnector extracted from public testCanHandle() : void in class cgeo.geocaching.connector.WaymarkingConnectorTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "tests/src/cgeo/geocaching/connector/WaymarkingConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "ECConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/ec/ECConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "GCConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/gc/GCConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "OCConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/oc/OCConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "OXConnectorTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 27,
        "description": "Change Variable Type oxConnector : OXConnector to oxConnector : IConnector in method public testCanHandle() : void from class cgeo.geocaching.connector.ox.OXConnectorTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Change Variable Type connector : OXConnector to connector : IConnector in method public testGetGeocodeFromUrl() : void from class cgeo.geocaching.connector.ox.OXConnectorTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "tests/src/cgeo/geocaching/connector/ox/OXConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "TerraCachingConnectorTest.java",
    "refactorings": [],
    "filePath": "tests/src/cgeo/geocaching/connector/tc/TerraCachingConnectorTest.java",
    "commit": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "repository": "https://github.com/cgeo/cgeo.git",
    "fileType": "test"
  },
  {
    "fileName": "DynamicEndpointSnitchLongTest.java",
    "refactorings": [],
    "filePath": "test/long/org/apache/cassandra/locator/DynamicEndpointSnitchLongTest.java",
    "commit": "https://github.com/apache/cassandra/commit/4fcd7d4d366d001cf5f1f7d926c608c902e3f0af",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "DynamicEndpointSnitchTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/locator/DynamicEndpointSnitchTest.java",
    "commit": "https://github.com/apache/cassandra/commit/4fcd7d4d366d001cf5f1f7d926c608c902e3f0af",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultHttp2ConnectionDecoder.java",
    "refactorings": [],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttp2ConnectionEncoder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 321,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method private FlowControlledData(ctx ChannelHandlerContext, stream Http2Stream, buf ByteBuf, padding int, endOfStream boolean, promise ChannelPromise) from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledData",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 333,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public error(ctx ChannelHandlerContext, cause Throwable) : void from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledData",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 340,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public write(ctx ChannelHandlerContext, allowedBytes int) : void from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledData",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 362,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public merge(ctx ChannelHandlerContext, next Http2RemoteFlowController.FlowControlled) : boolean from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledData",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 387,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method private FlowControlledHeaders(ctx ChannelHandlerContext, stream Http2Stream, headers Http2Headers, streamDependency int, weight short, exclusive boolean, padding int, endOfStream boolean, promise ChannelPromise) from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledHeaders",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 401,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public error(ctx ChannelHandlerContext, cause Throwable) : void from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledHeaders",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 409,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public write(ctx ChannelHandlerContext, allowedBytes int) : void from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledHeaders",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 420,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public merge(ctx ChannelHandlerContext, next Http2RemoteFlowController.FlowControlled) : boolean from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledHeaders",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 436,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public FlowControlledBase(ctx ChannelHandlerContext, stream Http2Stream, padding int, endOfStream boolean, promise ChannelPromise) from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledBase",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttp2LocalFlowController.java",
    "refactorings": [
      {
        "rightSideLineNumber": 382,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public consumeBytes(ctx ChannelHandlerContext, numBytes int) : boolean from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController.DefaultState",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 394,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public writeWindowUpdateIfNeeded(ctx ChannelHandlerContext) : boolean from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController.DefaultState",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 408,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method private writeWindowUpdate(ctx ChannelHandlerContext) : void from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController.DefaultState",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 454,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public writeWindowUpdateIfNeeded(ctx ChannelHandlerContext) : boolean from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController.REDUCED_FLOW_STATE.new FlowState",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 459,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public consumeBytes(ctx ChannelHandlerContext, numBytes int) : boolean from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController.REDUCED_FLOW_STATE.new FlowState",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public incrementWindowSize(ctx ChannelHandlerContext, stream Http2Stream, delta int) : void from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 145,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public consumeBytes(ctx ChannelHandlerContext, stream Http2Stream, numBytes int) : boolean from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 200,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public windowUpdateRatio(ctx ChannelHandlerContext, stream Http2Stream, ratio float) : void from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 230,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public receiveFlowControlledFrame(ctx ChannelHandlerContext, stream Http2Stream, data ByteBuf, padding int, endOfStream boolean) : void from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 513,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public writeWindowUpdateIfNeeded(ctx ChannelHandlerContext) : boolean from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController.FlowState",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 520,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public consumeBytes(ctx ChannelHandlerContext, numBytes int) : boolean from class io.netty.handler.codec.http2.DefaultHttp2LocalFlowController.FlowState",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2LocalFlowController.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttp2RemoteFlowController.java",
    "refactorings": [
      {
        "rightSideLineNumber": 631,
        "description": "Extract Variable frame : FlowControlled in method package writeBytes(bytes int) : int from class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController.DefaultState",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 643,
        "description": "Rename Variable writableBytes : int to maxBytes : int in method package writeBytes(bytes int) : int from class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController.DefaultState",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 203,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public incrementWindowSize(ctx ChannelHandlerContext, stream Http2Stream, delta int) : void from class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 225,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public addFlowControlled(ctx ChannelHandlerContext, stream Http2Stream, frame FlowControlled) : void from class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DelegatingDecompressorFrameListener.java",
    "refactorings": [
      {
        "rightSideLineNumber": 322,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public incrementWindowSize(ctx ChannelHandlerContext, stream Http2Stream, delta int) : void from class io.netty.handler.codec.http2.DelegatingDecompressorFrameListener.ConsumedBytesConverter",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 327,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public receiveFlowControlledFrame(ctx ChannelHandlerContext, stream Http2Stream, data ByteBuf, padding int, endOfStream boolean) : void from class io.netty.handler.codec.http2.DelegatingDecompressorFrameListener.ConsumedBytesConverter",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 333,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public consumeBytes(ctx ChannelHandlerContext, stream Http2Stream, numBytes int) : boolean from class io.netty.handler.codec.http2.DelegatingDecompressorFrameListener.ConsumedBytesConverter",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DelegatingDecompressorFrameListener.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "Http2ConnectionHandler.java",
    "refactorings": [],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "Http2FlowController.java",
    "refactorings": [],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FlowController.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "Http2LocalFlowController.java",
    "refactorings": [],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2LocalFlowController.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "Http2RemoteFlowController.java",
    "refactorings": [],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2RemoteFlowController.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "NoopHttp2LocalFlowController.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public incrementWindowSize(ctx ChannelHandlerContext, stream Http2Stream, delta int) : void from class io.netty.microbench.http2.NoopHttp2LocalFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public receiveFlowControlledFrame(ctx ChannelHandlerContext, stream Http2Stream, data ByteBuf, padding int, endOfStream boolean) : void from class io.netty.microbench.http2.NoopHttp2LocalFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 58,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public consumeBytes(ctx ChannelHandlerContext, stream Http2Stream, numBytes int) : boolean from class io.netty.microbench.http2.NoopHttp2LocalFlowController",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "microbench/src/main/java/io/netty/microbench/http2/NoopHttp2LocalFlowController.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "NoopHttp2RemoteFlowController.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public incrementWindowSize(ctx ChannelHandlerContext, stream Http2Stream, delta int) : void from class io.netty.microbench.http2.NoopHttp2RemoteFlowController",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Remove Parameter ctx : ChannelHandlerContext in method public addFlowControlled(ctx ChannelHandlerContext, stream Http2Stream, payload FlowControlled) : void from class io.netty.microbench.http2.NoopHttp2RemoteFlowController",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "microbench/src/main/java/io/netty/microbench/http2/NoopHttp2RemoteFlowController.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttp2ConnectionDecoderTest.java",
    "refactorings": [],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoderTest.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultHttp2ConnectionEncoderTest.java",
    "refactorings": [{
      "rightSideLineNumber": 137,
      "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public setup() : void from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoderTest",
      "type": "Add Method Annotation"
    }],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoderTest.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultHttp2LocalFlowControllerTest.java",
    "refactorings": [],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2LocalFlowControllerTest.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultHttp2RemoteFlowControllerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1481,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public error(ctx ChannelHandlerContext, t Throwable) : void from class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest.FakeFlowControlled",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 1490,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public write(ctx ChannelHandlerContext, allowedBytes int) : void from class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest.FakeFlowControlled",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 1501,
        "description": "Add Parameter ctx : ChannelHandlerContext in method public merge(ctx ChannelHandlerContext, next Http2RemoteFlowController.FlowControlled) : boolean from class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest.FakeFlowControlled",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 108,
        "description": "Extract Method private initConnectionAndController() : void extracted from public setup() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1446,
        "description": "Extract Method private resetCtx() : void extracted from public windowUpdateAndFlushShouldTriggerWrite() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2RemoteFlowControllerTest.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "Http2ConnectionHandlerTest.java",
    "refactorings": [],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "StreamBufferingEncoderTest.java",
    "refactorings": [],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/StreamBufferingEncoderTest.java",
    "commit": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "SessionCompletion.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/batch/SessionCompletion.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "SjmsBatchComponent.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/batch/SjmsBatchComponent.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "SjmsBatchConsumer.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/batch/SjmsBatchConsumer.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "SjmsBatchEndpoint.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/batch/SjmsBatchEndpoint.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractMessageHandler.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/consumer/AbstractMessageHandler.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "JmsMessageHelper.java",
    "refactorings": [{
      "rightSideLineNumber": 79,
      "description": "Extract Method public createExchange(message Message, endpoint Endpoint, keyFormatStrategy KeyFormatStrategy) : Exchange extracted from public createExchange(message Message, endpoint Endpoint) : Exchange in class org.apache.camel.component.sjms.jms.JmsMessageHelper",
      "type": "Extract Method"
    }],
    "filePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsMessageHelper.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "EmbeddedActiveMQBroker.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/test/java/org/apache/camel/component/sjms/batch/EmbeddedActiveMQBroker.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "ListAggregationStrategy.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/test/java/org/apache/camel/component/sjms/batch/ListAggregationStrategy.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "SjmsBatchConsumerTest.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/test/java/org/apache/camel/component/sjms/batch/SjmsBatchConsumerTest.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "SjmsBatchEndpointTest.java",
    "refactorings": [],
    "filePath": "components/camel-sjms/src/test/java/org/apache/camel/component/sjms/batch/SjmsBatchEndpointTest.java",
    "commit": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "DataFlowInspectionBase.java",
    "refactorings": [{
      "rightSideLineNumber": 155,
      "description": "Split Conditional if(element instanceof PsiMethod && ((PsiMethod)element).isConstructor()) to [if(((PsiMethod)element).isConstructor()), if(element instanceof PsiMethod)] in method private isInsideConstructorOrInitializer(element PsiElement) : boolean from class com.intellij.codeInspection.dataFlow.DataFlowInspectionBase",
      "type": "Split Conditional"
    }],
    "filePath": "java/java-analysis-impl/src/com/intellij/codeInspection/dataFlow/DataFlowInspectionBase.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "DfaPsiUtil.java",
    "refactorings": [],
    "filePath": "java/java-analysis-impl/src/com/intellij/codeInspection/dataFlow/DfaPsiUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "DfaVariableValue.java",
    "refactorings": [
      {
        "rightSideLineNumber": 226,
        "description": "Extract Method private getFieldInitializerNullness(expression PsiExpression) : Nullness extracted from private calcInherentNullability() : Nullness in class com.intellij.codeInspection.dataFlow.value.DfaVariableValue",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 219,
        "description": "Invert Condition if(!(expression instanceof PsiReferenceExpression)) to if(expression instanceof PsiReferenceExpression) in method private getFieldInitializerNullness(expression PsiExpression) : Nullness from class com.intellij.codeInspection.dataFlow.value.DfaVariableValue",
        "type": "Invert Condition"
      }
    ],
    "filePath": "java/java-analysis-impl/src/com/intellij/codeInspection/dataFlow/value/DfaVariableValue.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "FinalFieldNotDuringInitialization.java",
    "refactorings": [],
    "filePath": "java/java-tests/testData/inspection/dataFlow/fixture/FinalFieldNotDuringInitialization.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "DataFlowInspectionTest.java",
    "refactorings": [],
    "filePath": "java/java-tests/testSrc/com/intellij/codeInspection/DataFlowInspectionTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "JmxColumnHandle.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxColumnHandle.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxConnectorFactory.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxConnectorFactory.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxConnectorId.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxConnectorId.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxHandleResolver.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxHandleResolver.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxMetadata.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxPlugin.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxPlugin.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxRecordSetProvider.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxSplit.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxSplit.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxSplitManager.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxTableHandle.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxTableHandle.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "Types.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/Types.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ServerMainModule.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/server/ServerMainModule.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TestJmxSplitManager.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/test/java/com/facebook/presto/connector/jmx/TestJmxSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "ReadableTxState.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/txstate/ReadableTxState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionState.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/txstate/TransactionState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StateHandlingStatementOperations.java",
    "refactorings": [
      {
        "rightSideLineNumber": 826,
        "description": "Rename Method private filterIndexStateChanges(state KernelStatement, index IndexDescriptor, value Object, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator renamed to private filterIndexStateChangesForScanOrSeek(state KernelStatement, index IndexDescriptor, value Object, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 859,
        "description": "Rename Method private filterIndexStateChangesForPrefix(state KernelStatement, index IndexDescriptor, prefix String, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator renamed to private filterIndexStateChangesForRangeSeekByPrefix(state KernelStatement, index IndexDescriptor, prefix String, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 846,
        "description": "Extract Method private filterIndexStateChangesForRangeSeekByNumber(state KernelStatement, index IndexDescriptor, lower Number, includeLower boolean, upper Number, includeUpper boolean, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator extracted from public nodesGetFromIndexRangeSeekByNumber(state KernelStatement, index IndexDescriptor, lower Number, includeLower boolean, upper Number, includeUpper boolean) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Extract Method"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/StateHandlingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TxState.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1194,
        "description": "Rename Method public indexUpdates(descriptor IndexDescriptor, value Object) : ReadableDiffSets<Long> renamed to public indexUpdatesForScanOrSeek(descriptor IndexDescriptor, value Object) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1270,
        "description": "Rename Method public indexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> renamed to public indexUpdatesForRangeSeekByPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1276,
        "description": "Rename Method private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> renamed to private getIndexUpdatesForRangeSeekByPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1364,
        "description": "Rename Method private getIndexUpdates(label int, create boolean, property DefinedProperty) : DiffSets<Long> renamed to private getIndexUpdatesForScanOrSeek(label int, create boolean, property DefinedProperty) : DiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1395,
        "description": "Rename Method private getIndexUpdates(label int, propertyKeyId int) : DiffSets<Long> renamed to private getIndexUpdatesForScanOrSeek(label int, propertyKeyId int) : DiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1328,
        "description": "Extract Method private getSortedIndexUpdates(descriptor IndexDescriptor) : TreeMap<DefinedProperty,DiffSets<Long>> extracted from private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1284,
        "description": "Extract Variable propertyKeyId : int in method private getIndexUpdatesForRangeSeekByPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> from class org.neo4j.kernel.impl.api.state.TxState",
        "type": "Extract Variable"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/state/TxState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DefinedPropertyTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/api/properties/DefinedPropertyTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StateHandlingStatementOperationsTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/StateHandlingStatementOperationsTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TxStateTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 188,
        "description": "Rename Method public shouldComputeIndexUpdatesOnAnEmptyTxState() : void renamed to public shouldComputeIndexUpdatesForScanOrSeekOnAnEmptyTxState() : void in class org.neo4j.kernel.impl.api.state.TxStateTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1144,
        "description": "Rename Method private addToIndex(labelId int, propertyKeyId int, nodeIds long[]) : void renamed to public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void in class org.neo4j.kernel.impl.api.state.TxStateTest.addNodesToIndex.new IndexUpdater",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1152,
        "description": "Localize Parameter labelId : int to labelId : int in method public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void from class org.neo4j.kernel.impl.api.state.TxStateTest.addNodesToIndex.new IndexUpdater",
        "type": "Localize Parameter"
      },
      {
        "rightSideLineNumber": 1144,
        "description": "Add Variable Modifier final in variable labelId : int in method public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void from class org.neo4j.kernel.impl.api.state.TxStateTest.addNodesToIndex.new IndexUpdater",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 1154,
        "description": "Localize Parameter propertyKeyId : int to propertyKeyId : int in method public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void from class org.neo4j.kernel.impl.api.state.TxStateTest.addNodesToIndex.new IndexUpdater",
        "type": "Localize Parameter"
      },
      {
        "rightSideLineNumber": 1144,
        "description": "Add Variable Modifier final in variable propertyKeyId : int in method public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void from class org.neo4j.kernel.impl.api.state.TxStateTest.addNodesToIndex.new IndexUpdater",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 1144,
        "description": "Add Parameter nodesWithValues : Collection<Pair<Long,String>> in method public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void from class org.neo4j.kernel.impl.api.state.TxStateTest.addNodesToIndex.new IndexUpdater",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 1144,
        "description": "Remove Parameter nodeIds : long[] in method private addToIndex(labelId int, propertyKeyId int, nodeIds long[]) : void from class org.neo4j.kernel.impl.api.state.TxStateTest",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 1144,
        "description": "Change Method Access Modifier private to public in method public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void from class org.neo4j.kernel.impl.api.state.TxStateTest.addNodesToIndex.new IndexUpdater",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 171,
        "description": "Replace Variable With Attribute rule : IndexDescriptor to indexOn_1_1 : IndexDescriptor in method public shouldAddAndGetByLabel() : void from class org.neo4j.kernel.impl.api.state.TxStateTest",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Replace Variable With Attribute rule : IndexDescriptor to indexOn_1_1 : IndexDescriptor in method public shouldAddAndGetByRuleId() : void from class org.neo4j.kernel.impl.api.state.TxStateTest",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 192,
        "description": "Replace Variable With Attribute rule : IndexDescriptor to indexOn_1_1 : IndexDescriptor in method public shouldComputeIndexUpdatesForScanOrSeekOnAnEmptyTxState() : void from class org.neo4j.kernel.impl.api.state.TxStateTest",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 171,
        "description": "Replace Variable With Attribute labelId : int to labelId1 : int in method public shouldAddAndGetByLabel() : void from class org.neo4j.kernel.impl.api.state.TxStateTest",
        "type": "Replace Variable With Attribute"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/TxStateTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PropertyConverter.java",
    "refactorings": [],
    "filePath": "DaoCore/src/de/greenrobot/dao/converter/PropertyConverter.java",
    "commit": "https://github.com/greenrobot/greenDAO/commit/d6d9dd4365387816fda6987a4ad9b679c27e72a3",
    "repository": "https://github.com/greenrobot/greenDAO.git",
    "fileType": "main"
  },
  {
    "fileName": "MyTimestampConverter.java",
    "refactorings": [],
    "filePath": "DaoTest/src/de/greenrobot/daotest/customtype/MyTimestampConverter.java",
    "commit": "https://github.com/greenrobot/greenDAO/commit/d6d9dd4365387816fda6987a4ad9b679c27e72a3",
    "repository": "https://github.com/greenrobot/greenDAO.git",
    "fileType": "test"
  },
  {
    "fileName": "CdiBeanManagerHelper.java",
    "refactorings": [],
    "filePath": "components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiBeanManagerHelper.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "CamelSpringBootApplicationController.java",
    "refactorings": [],
    "filePath": "components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/CamelSpringBootApplicationController.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "UndertowProducer.java",
    "refactorings": [],
    "filePath": "components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowProducer.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "PackageDataFormatMojo.java",
    "refactorings": [
      {
        "rightSideLineNumber": 296,
        "description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareDataFormat(log Log, project MavenProject, projectHelper MavenProjectHelper, dataFormatOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageDataFormatMojo",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 140,
        "description": "Inline Variable name : String in method public prepareDataFormat(log Log, project MavenProject, projectHelper MavenProjectHelper, dataFormatOutDir File, schemaOutDir File, buildContext BuildContext) : void from class org.apache.camel.maven.packaging.PackageDataFormatMojo",
        "type": "Inline Variable"
      }
    ],
    "filePath": "tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PackageDataFormatMojo.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "PackageLanguageMojo.java",
    "refactorings": [
      {
        "rightSideLineNumber": 294,
        "description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareLanguage(log Log, project MavenProject, projectHelper MavenProjectHelper, languageOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageLanguageMojo",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 140,
        "description": "Inline Variable name : String in method public prepareLanguage(log Log, project MavenProject, projectHelper MavenProjectHelper, languageOutDir File, schemaOutDir File, buildContext BuildContext) : void from class org.apache.camel.maven.packaging.PackageLanguageMojo",
        "type": "Inline Variable"
      }
    ],
    "filePath": "tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PackageLanguageMojo.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpGetHeadersNotCopiedTest.java",
    "refactorings": [],
    "filePath": "components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetHeadersNotCopiedTest.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "HttpCamelHeadersNotCopiedTest.java",
    "refactorings": [],
    "filePath": "components/camel-http4/src/test/java/org/apache/camel/component/http4/HttpCamelHeadersNotCopiedTest.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "CamelBlueprintHelper.java",
    "refactorings": [],
    "filePath": "components/camel-test-blueprint/src/main/java/org/apache/camel/test/blueprint/CamelBlueprintHelper.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "CamelBlueprintTestSupport.java",
    "refactorings": [],
    "filePath": "components/camel-test-blueprint/src/main/java/org/apache/camel/test/blueprint/CamelBlueprintTestSupport.java",
    "commit": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "repository": "https://github.com/apache/camel.git",
    "fileType": "test"
  },
  {
    "fileName": "JPQLSerializer.java",
    "refactorings": [],
    "filePath": "querydsl-jpa/src/main/java/com/querydsl/jpa/JPQLSerializer.java",
    "commit": "https://github.com/querydsl/querydsl/commit/e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "JPQLTemplates.java",
    "refactorings": [],
    "filePath": "querydsl-jpa/src/main/java/com/querydsl/jpa/JPQLTemplates.java",
    "commit": "https://github.com/querydsl/querydsl/commit/e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractJPATest.java",
    "refactorings": [],
    "filePath": "querydsl-jpa/src/test/java/com/querydsl/jpa/AbstractJPATest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "SchemaRecordCheck.java",
    "refactorings": [],
    "filePath": "community/consistency-check/src/main/java/org/neo4j/consistency/checking/SchemaRecordCheck.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaRuleContent.java",
    "refactorings": [],
    "filePath": "community/consistency-check/src/main/java/org/neo4j/consistency/checking/SchemaRuleContent.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MandatoryPropertyChecker.java",
    "refactorings": [],
    "filePath": "community/consistency-check/src/main/java/org/neo4j/consistency/checking/full/MandatoryPropertyChecker.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "KernelTransactionImplementation.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/KernelTransactionImplementation.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DiskLayer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/DiskLayer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaCache.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/SchemaCache.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaStorage.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/SchemaStorage.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MandatoryNodePropertyConstraintRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/MandatoryNodePropertyConstraintRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MandatoryRelationshipPropertyConstraintRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/MandatoryRelationshipPropertyConstraintRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NodePropertyConstraintRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/NodePropertyConstraintRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyConstraintRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/PropertyConstraintRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipPropertyConstraintRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/RelationshipPropertyConstraintRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/SchemaRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "UniquePropertyConstraintRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/UniquePropertyConstraintRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NeoStoreTransactionApplier.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/command/NeoStoreTransactionApplier.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IntegrityValidator.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/state/IntegrityValidator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchInserterImpl.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchInserterImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaRecordCheckTest.java",
    "refactorings": [],
    "filePath": "community/consistency-check/src/test/java/org/neo4j/consistency/checking/SchemaRecordCheckTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SchemaRuleContentTest.java",
    "refactorings": [],
    "filePath": "community/consistency-check/src/test/java/org/neo4j/consistency/checking/SchemaRuleContentTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "FullCheckIntegrationTest.java",
    "refactorings": [],
    "filePath": "community/consistency-check/src/test/java/org/neo4j/consistency/checking/full/FullCheckIntegrationTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ConstraintCreationIT.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/integrationtest/ConstraintCreationIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SchemaCacheTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/SchemaCacheTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SchemaStorageTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/SchemaStorageTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NeoTransactionStoreApplierTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/command/NeoTransactionStoreApplierTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "IntegrityValidatorTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/state/IntegrityValidatorTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NeoStoreTransactionTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/state/NeoStoreTransactionTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SchemaRuleCommandTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/state/SchemaRuleCommandTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BatchInsertTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/unsafe/batchinsert/BatchInsertTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PresentationModelInfoBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 190,
        "description": "Extract Method private removeItemPresentationModelFactoryMethod(dataSetProperties Collection<DataSetPropertyInfoImpl>) : void extracted from private processDataSetProperties() : void in class org.robobinding.codegen.presentationmodel.processor.PresentationModelInfoBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 191,
        "description": "Change Variable Type dataSetProperty : DataSetPropertyInfoImpl to dataSetProperty : DataSetPropertyInfo in method private removeItemPresentationModelFactoryMethod(dataSetProperties Collection<DataSetPropertyInfoImpl>) : void from class org.robobinding.codegen.presentationmodel.processor.PresentationModelInfoBuilder",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 186,
        "description": "Change Parameter Type dataSetProperty : DataSetPropertyInfoImpl to dataSetProperty : DataSetPropertyInfo in method private removeSetterOfDataSetProperty(dataSetProperty DataSetPropertyInfo) : void from class org.robobinding.codegen.presentationmodel.processor.PresentationModelInfoBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 196,
        "description": "Change Parameter Type dataSetProperty : DataSetPropertyInfoImpl to dataSetProperty : DataSetPropertyInfo in method private removeItemPresentationModelFactoryMethod(dataSetProperty DataSetPropertyInfo) : void from class org.robobinding.codegen.presentationmodel.processor.PresentationModelInfoBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "codegen/src/main/java/org/robobinding/codegen/presentationmodel/processor/PresentationModelInfoBuilder.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "main"
  },
  {
    "fileName": "Item.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/nestedIPM/Item.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "ItemPresentationModelExample.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/nestedIPM/ItemPresentationModelExample.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "PresentationModelExample.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/nestedIPM/PresentationModelExample.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "SubItem.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/nestedIPM/SubItem.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "SubItemPresentationModelExample.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/nestedIPM/SubItemPresentationModelExample.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "PresentationModelProcessorTest.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/processor/PresentationModelProcessorTest.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "Item.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/sharedfactorymethod/Item.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "MyItemPresentationModel.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/sharedfactorymethod/MyItemPresentationModel.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "SharedFacotryMethodPresentationModel.java",
    "refactorings": [],
    "filePath": "codegen/src/test/java/org/robobinding/codegen/presentationmodel/sharedfactorymethod/SharedFacotryMethodPresentationModel.java",
    "commit": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphiteReporter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 180,
        "description": "Extract Method private closeGraphiteConnection() : void extracted from public report(gauges SortedMap<String,Gauge>, counters SortedMap<String,Counter>, histograms SortedMap<String,Histogram>, meters SortedMap<String,Meter>, timers SortedMap<String,Timer>) : void in class com.codahale.metrics.graphite.GraphiteReporter",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 187,
        "description": "Rename Variable e1 : IOException to e : IOException in method private closeGraphiteConnection() : void from class com.codahale.metrics.graphite.GraphiteReporter",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 178,
        "description": "Change Variable Type e : IOException to t : Throwable in method public report(gauges SortedMap<String,Gauge>, counters SortedMap<String,Counter>, histograms SortedMap<String,Histogram>, meters SortedMap<String,Meter>, timers SortedMap<String,Timer>) : void from class com.codahale.metrics.graphite.GraphiteReporter",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 178,
        "description": "Rename Variable e : IOException to t : Throwable in method public report(gauges SortedMap<String,Gauge>, counters SortedMap<String,Counter>, histograms SortedMap<String,Histogram>, meters SortedMap<String,Meter>, timers SortedMap<String,Timer>) : void from class com.codahale.metrics.graphite.GraphiteReporter",
        "type": "Rename Variable"
      }
    ],
    "filePath": "metrics-graphite/src/main/java/com/codahale/metrics/graphite/GraphiteReporter.java",
    "commit": "https://github.com/dropwizard/metrics/commit/4c6ab3d77cc67c7a91155d884077520dcf1509c6",
    "repository": "https://github.com/dropwizard/metrics.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphiteReporterTest.java",
    "refactorings": [],
    "filePath": "metrics-graphite/src/test/java/com/codahale/metrics/graphite/GraphiteReporterTest.java",
    "commit": "https://github.com/dropwizard/metrics/commit/4c6ab3d77cc67c7a91155d884077520dcf1509c6",
    "repository": "https://github.com/dropwizard/metrics.git",
    "fileType": "test"
  },
  {
    "fileName": "AuditDependenciesCommand.java",
    "refactorings": [
      {
        "rightSideLineNumber": 174,
        "description": "Extract Method public getTargetsAndDependencies(params CommandRunnerParams, argumentsFormattedAsBuildTargets List<String>, showTransitive boolean, showTests boolean, enableProfiling boolean) : Multimap<BuildTarget,BuildTarget> extracted from public runWithoutHelp(params CommandRunnerParams) : int in class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 119,
        "description": "Change Variable Type targetsAndDependencies : TreeMultimap<BuildTarget,BuildTarget> to targetsAndDependencies : Multimap<BuildTarget,BuildTarget> in method public runWithoutHelp(params CommandRunnerParams) : int from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 198,
        "description": "Add Method Modifier static in method package getTransitiveDependencies(targets ImmutableSet<BuildTarget>, graph TargetGraph) : ImmutableSet<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 226,
        "description": "Add Method Modifier static in method package getImmediateDependencies(target BuildTarget, graph TargetGraph) : ImmutableSet<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Add Parameter showTransitive : boolean in method package getDependenciesWithOptions(params CommandRunnerParams, target BuildTarget, graph TargetGraph, showTransitive boolean, showTests boolean, enableProfiling boolean) : ImmutableSet<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Add Parameter showTests : boolean in method package getDependenciesWithOptions(params CommandRunnerParams, target BuildTarget, graph TargetGraph, showTransitive boolean, showTests boolean, enableProfiling boolean) : ImmutableSet<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Add Parameter enableProfiling : boolean in method package getDependenciesWithOptions(params CommandRunnerParams, target BuildTarget, graph TargetGraph, showTransitive boolean, showTests boolean, enableProfiling boolean) : ImmutableSet<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Add Method Modifier static in method package getDependenciesWithOptions(params CommandRunnerParams, target BuildTarget, graph TargetGraph, showTransitive boolean, showTests boolean, enableProfiling boolean) : ImmutableSet<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 231,
        "description": "Add Parameter showTransitive : boolean in method package getTestTargetDependencies(params CommandRunnerParams, target BuildTarget, graph TargetGraph, showTransitive boolean, enableProfiling boolean) : Collection<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 231,
        "description": "Add Parameter enableProfiling : boolean in method package getTestTargetDependencies(params CommandRunnerParams, target BuildTarget, graph TargetGraph, showTransitive boolean, enableProfiling boolean) : Collection<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 231,
        "description": "Add Method Modifier static in method package getTestTargetDependencies(params CommandRunnerParams, target BuildTarget, graph TargetGraph, showTransitive boolean, enableProfiling boolean) : Collection<BuildTarget> from class com.facebook.buck.cli.AuditDependenciesCommand",
        "type": "Add Method Modifier"
      }
    ],
    "filePath": "src/com/facebook/buck/cli/AuditDependenciesCommand.java",
    "commit": "https://github.com/facebook/buck/commit/db024f5ec3e9611ddf8103bdc4c3817c704f7b27",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AuditTestsCommand.java",
    "refactorings": [
      {
        "rightSideLineNumber": 121,
        "description": "Localize Parameter graph : TargetGraph to graph : TargetGraph in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Localize Parameter"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Remove Parameter Modifier final in parameter graph : TargetGraph in method package getTestsForTargets(targets ImmutableSet<BuildTarget>, graph TargetGraph) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Parameter params : CommandRunnerParams in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Parameter enableProfiling : boolean in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Thrown Exception Type IOException in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Thrown Exception Type InterruptedException in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Thrown Exception Type BuildFileParseException in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Thrown Exception Type BuildTargetException in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Change Method Access Modifier package to public in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Method Modifier static in method public getTestsForTargets(params CommandRunnerParams, targets ImmutableSet<BuildTarget>, enableProfiling boolean) : TreeMultimap<BuildTarget,BuildTarget> from class com.facebook.buck.cli.AuditTestsCommand",
        "type": "Add Method Modifier"
      }
    ],
    "filePath": "src/com/facebook/buck/cli/AuditTestsCommand.java",
    "commit": "https://github.com/facebook/buck/commit/db024f5ec3e9611ddf8103bdc4c3817c704f7b27",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AuditDependenciesCommandTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cli/AuditDependenciesCommandTest.java",
    "commit": "https://github.com/facebook/buck/commit/db024f5ec3e9611ddf8103bdc4c3817c704f7b27",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "TaskStatusEvent.java",
    "refactorings": [],
    "filePath": "helios-client/src/main/java/com/spotify/helios/common/descriptors/TaskStatusEvent.java",
    "commit": "https://github.com/spotify/helios/commit/687bda5a3ea1b5daae2764653843d318c77f4590",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "TaskHistoryWriter.java",
    "refactorings": [{
      "rightSideLineNumber": 64,
      "description": "Remove Parameter kafkaProvider : KafkaClientProvider in method public TaskHistoryWriter(hostname String, client ZooKeeperClient, kafkaProvider KafkaClientProvider, backingFile Path) from class com.spotify.helios.agent.TaskHistoryWriter",
      "type": "Remove Parameter"
    }],
    "filePath": "helios-services/src/main/java/com/spotify/helios/agent/TaskHistoryWriter.java",
    "commit": "https://github.com/spotify/helios/commit/687bda5a3ea1b5daae2764653843d318c77f4590",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "ZooKeeperAgentModel.java",
    "refactorings": [],
    "filePath": "helios-services/src/main/java/com/spotify/helios/agent/ZooKeeperAgentModel.java",
    "commit": "https://github.com/spotify/helios/commit/687bda5a3ea1b5daae2764653843d318c77f4590",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "DeploymentGroupHistoryWriter.java",
    "refactorings": [],
    "filePath": "helios-services/src/main/java/com/spotify/helios/rollingupdate/DeploymentGroupHistoryWriter.java",
    "commit": "https://github.com/spotify/helios/commit/687bda5a3ea1b5daae2764653843d318c77f4590",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "QueueingHistoryWriter.java",
    "refactorings": [{
      "rightSideLineNumber": 138,
      "description": "Remove Parameter kafkaProvider : KafkaClientProvider in method public QueueingHistoryWriter(client ZooKeeperClient, backingFile Path, kafkaProvider KafkaClientProvider) from class com.spotify.helios.servicescommon.QueueingHistoryWriter",
      "type": "Remove Parameter"
    }],
    "filePath": "helios-services/src/main/java/com/spotify/helios/servicescommon/QueueingHistoryWriter.java",
    "commit": "https://github.com/spotify/helios/commit/687bda5a3ea1b5daae2764653843d318c77f4590",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "TaskHistoryWriterTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 112,
        "description": "Add Parameter Modifier final in parameter client : ZooKeeperClient in method private makeWriter(client ZooKeeperClient) : void from class com.spotify.helios.agent.TaskHistoryWriterTest",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Remove Parameter kafkaProvider : KafkaClientProvider in method private makeWriter(client ZooKeeperClient, kafkaProvider KafkaClientProvider) : void from class com.spotify.helios.agent.TaskHistoryWriterTest",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "helios-services/src/test/java/com/spotify/helios/agent/TaskHistoryWriterTest.java",
    "commit": "https://github.com/spotify/helios/commit/687bda5a3ea1b5daae2764653843d318c77f4590",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractFilter.java",
    "refactorings": [],
    "filePath": "data-transform/src/main/java/com/linkedin/data/transform/filter/AbstractFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "DataSchemaParser.java",
    "refactorings": [
      {
        "rightSideLineNumber": 286,
        "description": "Rename Method public getSchemaAndNames() : Collection<CodeUtil.Pair<DataSchema,String>> renamed to public getSchemaAndLocations() : Collection<CodeUtil.Pair<DataSchema,DataSchemaLocation>> in class com.linkedin.pegasus.generator.DataSchemaParser.ParseResult",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 286,
        "description": "Change Return Type Collection<CodeUtil.Pair<DataSchema,String>> to Collection<CodeUtil.Pair<DataSchema,DataSchemaLocation>> in method public getSchemaAndLocations() : Collection<CodeUtil.Pair<DataSchema,DataSchemaLocation>> from class com.linkedin.pegasus.generator.DataSchemaParser.ParseResult",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 274,
        "description": "Rename Attribute _schemaAndNames : Collection<CodeUtil.Pair<DataSchema,String>> to _schemaAndLocations : Collection<CodeUtil.Pair<DataSchema,DataSchemaLocation>> in class com.linkedin.pegasus.generator.DataSchemaParser.ParseResult",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 274,
        "description": "Change Attribute Type _schemaAndNames : Collection<CodeUtil.Pair<DataSchema,String>> to _schemaAndLocations : Collection<CodeUtil.Pair<DataSchema,DataSchemaLocation>> in class com.linkedin.pegasus.generator.DataSchemaParser.ParseResult",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Extract Variable location : DataSchemaLocation in method public parseSources(sources String[]) : ParseResult from class com.linkedin.pegasus.generator.DataSchemaParser",
        "type": "Extract Variable"
      }
    ],
    "filePath": "generator/src/main/java/com/linkedin/pegasus/generator/DataSchemaParser.java",
    "commit": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "PegasusDataTemplateGenerator.java",
    "refactorings": [{
      "rightSideLineNumber": 132,
      "description": "Change Variable Type pair : CodeUtil.Pair<DataSchema,String> to pair : CodeUtil.Pair<DataSchema,DataSchemaLocation> in method public run(resolverPath String, defaultPackage String, generateImported boolean, targetDirectoryPath String, sources String[]) : GeneratorResult from class com.linkedin.pegasus.generator.PegasusDataTemplateGenerator",
      "type": "Change Variable Type"
    }],
    "filePath": "generator/src/main/java/com/linkedin/pegasus/generator/PegasusDataTemplateGenerator.java",
    "commit": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "TemplateSpecGenerator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 147,
        "description": "Inline Method public generate(schema DataSchema) : ClassTemplateSpec inlined to public generate(schema DataSchema, location DataSchemaLocation) : ClassTemplateSpec in class com.linkedin.pegasus.generator.TemplateSpecGenerator",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 729,
        "description": "Inline Method public generate(schema DataSchema) : ClassTemplateSpec inlined to private generateRecord(schema RecordDataSchema) : RecordTemplateSpec in class com.linkedin.pegasus.generator.TemplateSpecGenerator",
        "type": "Inline Method"
      }
    ],
    "filePath": "generator/src/main/java/com/linkedin/pegasus/generator/TemplateSpecGenerator.java",
    "commit": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "TestFilteredSchemaDataTranslation.java",
    "refactorings": [],
    "filePath": "data-avro/src/test/java/com/linkedin/data/avro/TestFilteredSchemaDataTranslation.java",
    "commit": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestUtil.java",
    "refactorings": [],
    "filePath": "data/src/test/java/com/linkedin/data/TestUtil.java",
    "commit": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestBadSchemas.java",
    "refactorings": [],
    "filePath": "generator-test/src/test/java/com/linkedin/pegasus/generator/test/TestBadSchemas.java",
    "commit": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "Ints.java",
    "refactorings": [
      {
        "rightSideLineNumber": 624,
        "description": "Add Method Annotation @Beta in method public tryParse(string String, radix int) : Integer from class com.google.common.primitives.Ints",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 624,
        "description": "Change Method Access Modifier package to public in method public tryParse(string String, radix int) : Integer from class com.google.common.primitives.Ints",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Ints.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "main"
  },
  {
    "fileName": "Ints.java",
    "refactorings": [
      {
        "rightSideLineNumber": 677,
        "description": "Add Method Annotation @Beta in method public tryParse(string String, radix int) : Integer from class com.google.common.primitives.Ints",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 677,
        "description": "Change Method Access Modifier package to public in method public tryParse(string String, radix int) : Integer from class com.google.common.primitives.Ints",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "guava/src/com/google/common/primitives/Ints.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "main"
  },
  {
    "fileName": "Longs.java",
    "refactorings": [
      {
        "rightSideLineNumber": 393,
        "description": "Extract Method public tryParse(string String, radix int) : Long extracted from public tryParse(string String) : Long in class com.google.common.primitives.Longs",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 412,
        "description": "Extract Variable cap : long in method public tryParse(string String, radix int) : Long from class com.google.common.primitives.Longs",
        "type": "Extract Variable"
      }
    ],
    "filePath": "guava/src/com/google/common/primitives/Longs.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "main"
  },
  {
    "fileName": "IntsTest.java",
    "refactorings": [],
    "filePath": "guava-gwt/test-super/com/google/common/primitives/super/com/google/common/primitives/IntsTest.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "test"
  },
  {
    "fileName": "LongsTest.java",
    "refactorings": [],
    "filePath": "guava-gwt/test-super/com/google/common/primitives/super/com/google/common/primitives/LongsTest.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "test"
  },
  {
    "fileName": "IntsTest_gwt.java",
    "refactorings": [],
    "filePath": "guava-gwt/test/com/google/common/primitives/IntsTest_gwt.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "test"
  },
  {
    "fileName": "LongsTest_gwt.java",
    "refactorings": [],
    "filePath": "guava-gwt/test/com/google/common/primitives/LongsTest_gwt.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "test"
  },
  {
    "fileName": "IntsTest.java",
    "refactorings": [],
    "filePath": "guava-tests/test/com/google/common/primitives/IntsTest.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "test"
  },
  {
    "fileName": "LongsTest.java",
    "refactorings": [],
    "filePath": "guava-tests/test/com/google/common/primitives/LongsTest.java",
    "commit": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "repository": "https://github.com/google/guava.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractTracingAwareExecutorService.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/concurrent/AbstractTracingAwareExecutorService.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "NamedThreadFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 52,
      "description": "Extract Method public NamedThreadFactory(id String, priority int, contextClassLoader ClassLoader, threadGroup ThreadGroup) extracted from public NamedThreadFactory(id String, priority int) in class org.apache.cassandra.concurrent.NamedThreadFactory",
      "type": "Extract Method"
    }],
    "filePath": "src/java/org/apache/cassandra/concurrent/NamedThreadFactory.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "Config.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/Config.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseDescriptor.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/DatabaseDescriptor.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaBasedUDFunction.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/JavaBasedUDFunction.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaUDF.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/JavaUDF.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ScriptBasedUDF.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/ScriptBasedUDF.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ScriptBasedUDFunction.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/ScriptBasedUDFunction.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "SecurityThreadGroup.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/SecurityThreadGroup.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ThreadAwareSecurityManager.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/ThreadAwareSecurityManager.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "UDAggregate.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/UDAggregate.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "UDFunction.java",
    "refactorings": [
      {
        "rightSideLineNumber": 357,
        "description": "Extract Method private executeAsync(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer extracted from public execute(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 476,
        "description": "Extract Method protected decompose(dataType DataType, protocolVersion int, value Object) : ByteBuffer extracted from protected decompose(protocolVersion int, value Object) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 203,
        "description": "Remove Thrown Exception Type InvalidRequestException in method public create(name FunctionName, argNames List<ColumnIdentifier>, argTypes List<AbstractType<?>>, returnType AbstractType<?>, calledOnNullInput boolean, language String, body String) : UDFunction from class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Remove Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 248,
        "description": "Remove Thrown Exception Type InvalidRequestException in method public executeUserDefined(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer from class org.apache.cassandra.cql3.functions.UDFunction.createBrokenFunction.new UDFunction",
        "type": "Remove Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 223,
        "description": "Remove Parameter Modifier final in parameter reason : InvalidRequestException in method public createBrokenFunction(name FunctionName, argNames List<ColumnIdentifier>, argTypes List<AbstractType<?>>, returnType AbstractType<?>, calledOnNullInput boolean, language String, body String, reason InvalidRequestException) : UDFunction from class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 258,
        "description": "Remove Thrown Exception Type InvalidRequestException in method public execute(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer from class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Remove Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 417,
        "description": "Remove Thrown Exception Type InvalidRequestException in method protected abstract executeUserDefined(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer from class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Remove Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 481,
        "description": "Parameterize Attribute returnDataType : DataType to dataType : DataType in method protected decompose(dataType DataType, protocolVersion int, value Object) : ByteBuffer from class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/UDFunction.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraDaemon.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/service/CassandraDaemon.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "JVMStabilityInspector.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/utils/JVMStabilityInspector.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaLoader.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/SchemaLoader.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "CQLTester.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/cql3/CQLTester.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "UFPureScriptTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTest.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "UFTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/cql3/validation/entities/UFTest.java",
    "commit": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "RowUpdateBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 208,
        "description": "Extract Method public deleteRowAt(metadata CFMetaData, timestamp long, localDeletionTime int, key Object, clusteringValues Object...) : Mutation extracted from public deleteRow(metadata CFMetaData, timestamp long, key Object, clusteringValues Object...) : Mutation in class org.apache.cassandra.db.RowUpdateBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 184,
        "description": "Add Parameter localDeletionTime : int in method private deleteRow(update PartitionUpdate, timestamp long, localDeletionTime int, clusteringValues Object...) : void from class org.apache.cassandra.db.RowUpdateBuilder",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/db/RowUpdateBuilder.java",
    "commit": "https://github.com/apache/cassandra/commit/2b0a8f6bdac621badabcb9921c077260f2470c26",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/db/PartitionTest.java",
    "commit": "https://github.com/apache/cassandra/commit/2b0a8f6bdac621badabcb9921c077260f2470c26",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "ColumnFamilyStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 2258,
        "description": "Add Parameter ephemeral : boolean in method public snapshotWithoutFlush(snapshotName String, predicate Predicate<SSTableReader>, ephemeral boolean) : void from class org.apache.cassandra.db.ColumnFamilyStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 2386,
        "description": "Add Parameter ephemeral : boolean in method public snapshot(snapshotName String, predicate Predicate<SSTableReader>, ephemeral boolean) : void from class org.apache.cassandra.db.ColumnFamilyStore",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/db/ColumnFamilyStore.java",
    "commit": "https://github.com/apache/cassandra/commit/b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "Directories.java",
    "refactorings": [
      {
        "rightSideLineNumber": 617,
        "description": "Extract Method private listSnapshots() : List<File> extracted from public getSnapshotDetails() : Map<String,Pair<Long,Long>> in class org.apache.cassandra.db.Directories",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 612,
        "description": "Rename Variable snapshots : File[] to snapshotDirs : File[] in method private listSnapshots() : List<File> from class org.apache.cassandra.db.Directories",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 569,
        "description": "Remove Variable Modifier final in variable snapshot : File in method public getSnapshotDetails() : Map<String,Pair<Long,Long>> from class org.apache.cassandra.db.Directories",
        "type": "Remove Variable Modifier"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/db/Directories.java",
    "commit": "https://github.com/apache/cassandra/commit/b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "RepairMessageVerbHandler.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java",
    "commit": "https://github.com/apache/cassandra/commit/b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraDaemon.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/service/CassandraDaemon.java",
    "commit": "https://github.com/apache/cassandra/commit/b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ColumnFamilyStoreTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java",
    "commit": "https://github.com/apache/cassandra/commit/b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "SCMBinder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 59,
        "description": "Change Class Access Modifier public to package in class org.jenkinsci.plugins.workflow.multibranch.SCMBinder",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Remove Class Annotation @Extension in class org.jenkinsci.plugins.workflow.multibranch.SCMBinder",
        "type": "Remove Class Annotation"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Move Method public configureShell(context CpsFlowExecution, shell GroovyShell) : void from class org.jenkinsci.plugins.workflow.multibranch.SCMBinder to public configureShell(context CpsFlowExecution, shell GroovyShell) : void from class org.jenkinsci.plugins.workflow.multibranch.SCMBinder.Decorator",
        "type": "Move Method"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Invert Condition if(context == null) to if(context != null) in method public configureShell(context CpsFlowExecution, shell GroovyShell) : void from class org.jenkinsci.plugins.workflow.multibranch.SCMBinder.Decorator",
        "type": "Invert Condition"
      },
      {
        "rightSideLineNumber": 114,
        "description": "Change Variable Type property : BranchJobProperty to scm : SCM in method public configureShell(context CpsFlowExecution, shell GroovyShell) : void from class org.jenkinsci.plugins.workflow.multibranch.SCMBinder.Decorator",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 114,
        "description": "Rename Variable property : BranchJobProperty to scm : SCM in method public configureShell(context CpsFlowExecution, shell GroovyShell) : void from class org.jenkinsci.plugins.workflow.multibranch.SCMBinder.Decorator",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Extract Class org.jenkinsci.plugins.workflow.multibranch.SCMBinder.Decorator from class org.jenkinsci.plugins.workflow.multibranch.SCMBinder",
        "type": "Extract Class"
      }
    ],
    "filePath": "multibranch/src/main/java/org/jenkinsci/plugins/workflow/multibranch/SCMBinder.java",
    "commit": "https://github.com/jenkinsci/workflow-plugin/commit/d0e374ce8ecb687b4dc046d1edea9e52da17706f",
    "repository": "https://github.com/jenkinsci/workflow-plugin.git",
    "fileType": "main"
  },
  {
    "fileName": "WorkflowBranchProjectFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 62,
        "description": "Inline Method private setBranch(property BranchJobProperty, branch Branch, project WorkflowJob) : void inlined to public setBranch(project WorkflowJob, branch Branch) : WorkflowJob in class org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 65,
        "description": "Inline Method private setBranch(property BranchJobProperty, branch Branch, project WorkflowJob) : void inlined to public setBranch(project WorkflowJob, branch Branch) : WorkflowJob in class org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory",
        "type": "Inline Method"
      }
    ],
    "filePath": "multibranch/src/main/java/org/jenkinsci/plugins/workflow/multibranch/WorkflowBranchProjectFactory.java",
    "commit": "https://github.com/jenkinsci/workflow-plugin/commit/d0e374ce8ecb687b4dc046d1edea9e52da17706f",
    "repository": "https://github.com/jenkinsci/workflow-plugin.git",
    "fileType": "main"
  },
  {
    "fileName": "WorkflowMultiBranchProject.java",
    "refactorings": [],
    "filePath": "multibranch/src/main/java/org/jenkinsci/plugins/workflow/multibranch/WorkflowMultiBranchProject.java",
    "commit": "https://github.com/jenkinsci/workflow-plugin/commit/d0e374ce8ecb687b4dc046d1edea9e52da17706f",
    "repository": "https://github.com/jenkinsci/workflow-plugin.git",
    "fileType": "main"
  },
  {
    "fileName": "SCMBinderTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 98,
        "description": "Extract Variable sa : ScriptApproval in method public evaluate() : void from class org.jenkinsci.plugins.workflow.multibranch.SCMBinderTest.exactRevision.addStep.new Statement",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Remove Method Annotation @Ignore(\"TODO currently will print `subsequent content` in b1\") in method public exactRevision() : void from class org.jenkinsci.plugins.workflow.multibranch.SCMBinderTest",
        "type": "Remove Method Annotation"
      }
    ],
    "filePath": "multibranch/src/test/java/org/jenkinsci/plugins/workflow/multibranch/SCMBinderTest.java",
    "commit": "https://github.com/jenkinsci/workflow-plugin/commit/d0e374ce8ecb687b4dc046d1edea9e52da17706f",
    "repository": "https://github.com/jenkinsci/workflow-plugin.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphRepositoryQuery.java",
    "refactorings": [{
      "rightSideLineNumber": 91,
      "description": "Extract Variable parameterValue : Object in method private resolveParams(parameters Object[]) : Map<String,Object> from class org.springframework.data.neo4j.repository.query.GraphRepositoryQuery",
      "type": "Extract Variable"
    }],
    "filePath": "spring-data-neo4j/src/main/java/org/springframework/data/neo4j/repository/query/GraphRepositoryQuery.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "FriendService.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/examples/friends/FriendService.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "FriendTest.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/examples/friends/FriendTest.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "FriendContext.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/examples/friends/context/FriendContext.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Friendship.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/examples/friends/domain/Friendship.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Person.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/examples/friends/domain/Person.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "FriendshipRepository.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/examples/friends/repo/FriendshipRepository.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "UserRepository.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/examples/movies/repo/UserRepository.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "QueryIntegrationTest.java",
    "refactorings": [],
    "filePath": "spring-data-neo4j/src/test/java/org/springframework/data/neo4j/queries/QueryIntegrationTest.java",
    "commit": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "HiveConf.java",
    "refactorings": [],
    "filePath": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java",
    "commit": "https://github.com/apache/hive/commit/c53c6f45988db869d56abe3b1d831ff775f4fa73",
    "repository": "https://github.com/apache/hive.git",
    "fileType": "main"
  },
  {
    "fileName": "BloomFilter.java",
    "refactorings": [],
    "filePath": "common/src/java/org/apache/hive/common/util/BloomFilter.java",
    "commit": "https://github.com/apache/hive/commit/c53c6f45988db869d56abe3b1d831ff775f4fa73",
    "repository": "https://github.com/apache/hive.git",
    "fileType": "main"
  },
  {
    "fileName": "JdbcMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 70,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, table ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 160,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 179,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.plugin.jdbc.JdbcMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/JdbcMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JdbcRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 41,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.plugin.jdbc.JdbcRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/JdbcRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JdbcRecordSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 38,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorOutputTableHandle) : RecordSink from class com.facebook.presto.plugin.jdbc.JdbcRecordSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorInsertTableHandle) : RecordSink from class com.facebook.presto.plugin.jdbc.JdbcRecordSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/JdbcRecordSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JdbcSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, tableHandle ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.plugin.jdbc.JdbcSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, tableHandle ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.plugin.jdbc.JdbcSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-base-jdbc/src/main/java/com/facebook/presto/plugin/jdbc/JdbcSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "BlackHoleMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 78,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 95,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 117,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 132,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 139,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 215,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayouts(session ConnectorSession, table ConnectorTableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<ConnectorTableLayoutResult> from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 224,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayout(session ConnectorSession, handle ConnectorTableLayoutHandle) : ConnectorTableLayout from class com.facebook.presto.plugin.blackhole.BlackHoleMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHoleMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "BlackHolePageSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 32,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, outputTableHandle ConnectorOutputTableHandle) : ConnectorPageSink from class com.facebook.presto.plugin.blackhole.BlackHolePageSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 38,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, insertTableHandle ConnectorInsertTableHandle) : ConnectorPageSink from class com.facebook.presto.plugin.blackhole.BlackHolePageSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHolePageSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "BlackHolePageSourceProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 31,
      "description": "Add Parameter session : ConnectorSession in method public createPageSource(session ConnectorSession, split ConnectorSplit, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.plugin.blackhole.BlackHolePageSourceProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHolePageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "BlackHoleSplitManager.java",
    "refactorings": [{
      "rightSideLineNumber": 27,
      "description": "Add Parameter session : ConnectorSession in method public getSplits(session ConnectorSession, layout ConnectorTableLayoutHandle) : ConnectorSplitSource from class com.facebook.presto.plugin.blackhole.BlackHoleSplitManager",
      "type": "Add Parameter"
    }],
    "filePath": "presto-blackhole/src/main/java/com/facebook/presto/plugin/blackhole/BlackHoleSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraConnectorRecordSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 38,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorOutputTableHandle) : RecordSink from class com.facebook.presto.cassandra.CassandraConnectorRecordSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorInsertTableHandle) : RecordSink from class com.facebook.presto.cassandra.CassandraConnectorRecordSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraConnectorRecordSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 108,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 116,
        "description": "Add Parameter session : ConnectorSession in method private getTableMetadata(session ConnectorSession, tableName SchemaTableName) : ConnectorTableMetadata from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 148,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 154,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 196,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 223,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 241,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 312,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.cassandra.CassandraMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 49,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.cassandra.CassandraRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 92,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, tableHandle ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.cassandra.CassandraSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 227,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, tableHandle ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.cassandra.CassandraSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ExampleMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 79,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, table ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.example.ExampleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.example.ExampleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 115,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.example.ExampleMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 172,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.example.ExampleMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-example-http/src/main/java/com/facebook/presto/example/ExampleMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ExampleRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 42,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.example.ExampleRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-example-http/src/main/java/com/facebook/presto/example/ExampleRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ExampleSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 53,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, tableHandle ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.example.ExampleSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 64,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, tableHandle ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.example.ExampleSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "HiveMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 175,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 224,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 248,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 292,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 363,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 374,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 453,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 717,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.hive.HiveMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "HivePageSourceProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 106,
      "description": "Parameterize Variable session : ConnectorSession to session : ConnectorSession in method public createPageSource(session ConnectorSession, split ConnectorSplit, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.hive.HivePageSourceProvider",
      "type": "Parameterize Variable"
    }],
    "filePath": "presto-hive/src/main/java/com/facebook/presto/hive/HivePageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "HiveRecordSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 41,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorOutputTableHandle) : RecordSink from class com.facebook.presto.hive.HiveRecordSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorInsertTableHandle) : RecordSink from class com.facebook.presto.hive.HiveRecordSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveRecordSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "HiveSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 185,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, tableHandle ConnectorTableHandle, effectivePredicate TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.hive.HiveSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 349,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, tableHandle ConnectorTableHandle, connectorPartitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.hive.HiveSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 102,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.connector.jmx.JmxMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 123,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.connector.jmx.JmxMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 129,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.connector.jmx.JmxMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.connector.jmx.JmxMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 56,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.connector.jmx.JmxRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JmxSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 52,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, table ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.connector.jmx.JmxSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, table ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.connector.jmx.JmxSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-jmx/src/main/java/com/facebook/presto/connector/jmx/JmxSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "KafkaMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 108,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.kafka.KafkaMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 128,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.kafka.KafkaMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 134,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.kafka.KafkaMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 194,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.kafka.KafkaMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-kafka/src/main/java/com/facebook/presto/kafka/KafkaMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "KafkaRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 54,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.kafka.KafkaRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-kafka/src/main/java/com/facebook/presto/kafka/KafkaRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "KafkaSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 80,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, tableHandle ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.kafka.KafkaSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 119,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, tableHandle ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.kafka.KafkaSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-kafka/src/main/java/com/facebook/presto/kafka/KafkaSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "InformationSchemaMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 146,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.connector.informationSchema.InformationSchemaMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.connector.informationSchema.InformationSchemaMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 169,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.connector.informationSchema.InformationSchemaMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 182,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.connector.informationSchema.InformationSchemaMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/connector/informationSchema/InformationSchemaMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "InformationSchemaPageSourceProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 84,
      "description": "Add Parameter session : ConnectorSession in method public createPageSource(session ConnectorSession, split ConnectorSplit, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.connector.informationSchema.InformationSchemaPageSourceProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/connector/informationSchema/InformationSchemaPageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "InformationSchemaSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 54,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, table ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.connector.informationSchema.InformationSchemaSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 68,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, table ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.connector.informationSchema.InformationSchemaSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/connector/informationSchema/InformationSchemaSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 50,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.connector.system.SystemRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/connector/system/SystemRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemSplitManager.java",
    "refactorings": [{
      "rightSideLineNumber": 48,
      "description": "Add Parameter session : ConnectorSession in method public getSplits(session ConnectorSession, layout ConnectorTableLayoutHandle) : ConnectorSplitSource from class com.facebook.presto.connector.system.SystemSplitManager",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/connector/system/SystemSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemTablesMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayouts(session ConnectorSession, table ConnectorTableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<ConnectorTableLayoutResult> from class com.facebook.presto.connector.system.SystemTablesMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayout(session ConnectorSession, handle ConnectorTableLayoutHandle) : ConnectorTableLayout from class com.facebook.presto.connector.system.SystemTablesMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.connector.system.SystemTablesMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.connector.system.SystemTablesMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.connector.system.SystemTablesMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.connector.system.SystemTablesMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/connector/system/SystemTablesMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "DropTableTask.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/execution/DropTableTask.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RenameColumnTask.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/execution/RenameColumnTask.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RenameTableTask.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/execution/RenameTableTask.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "SqlQueryExecution.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlQueryExecution.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 45,
        "description": "Add Parameter session : Session in method public resolveIndex(session Session, tableHandle TableHandle, indexableColumns Set<ColumnHandle>, outputColumns Set<ColumnHandle>, tupleDomain TupleDomain<ColumnHandle>) : Optional<ResolvedIndex> from class com.facebook.presto.index.IndexManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Add Parameter session : Session in method public getIndex(session Session, indexHandle IndexHandle, lookupSchema List<ColumnHandle>, outputSchema List<ColumnHandle>) : ConnectorIndex from class com.facebook.presto.index.IndexManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/index/IndexManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "Metadata.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/metadata/Metadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "MetadataManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 685,
        "description": "Add Parameter catalog : String in method private ConnectorMetadataEntry(connectorId String, catalog String, metadata ConnectorMetadata) from class com.facebook.presto.metadata.MetadataManager.ConnectorMetadataEntry",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 91,
        "description": "Change Attribute Type connectorsById : ConcurrentMap<String,ConnectorMetadata> to connectorsById : ConcurrentMap<String,ConnectorMetadataEntry> in class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 128,
        "description": "Extract Variable connectorMetadataEntry : ConnectorMetadataEntry in method public addConnectorMetadata(connectorId String, catalogName String, connectorMetadata ConnectorMetadata) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Extract Variable connectorMetadataEntry : ConnectorMetadataEntry in method public addInformationSchemaMetadata(connectorId String, catalogName String, metadata InformationSchemaMetadata) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 148,
        "description": "Extract Variable connectorMetadataEntry : ConnectorMetadataEntry in method public addSystemTablesMetadata(connectorId String, catalogName String, metadata ConnectorMetadata) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 461,
        "description": "Inline Variable connectorSession : ConnectorSession in method public beginInsert(session Session, tableHandle TableHandle) : InsertTableHandle from class com.facebook.presto.metadata.MetadataManager",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 652,
        "description": "Change Return Type ConnectorMetadata to ConnectorMetadataEntry in method private lookupConnectorFor(tableHandle TableHandle) : ConnectorMetadataEntry from class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 657,
        "description": "Change Return Type ConnectorMetadata to ConnectorMetadataEntry in method private lookupConnectorFor(tableHandle OutputTableHandle) : ConnectorMetadataEntry from class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 662,
        "description": "Change Return Type ConnectorMetadata to ConnectorMetadataEntry in method private lookupConnectorFor(tableHandle InsertTableHandle) : ConnectorMetadataEntry from class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 671,
        "description": "Change Variable Type result : ConnectorMetadata to result : ConnectorMetadataEntry in method private getConnectorMetadata(connectorId String) : ConnectorMetadataEntry from class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 667,
        "description": "Change Return Type ConnectorMetadata to ConnectorMetadataEntry in method private getConnectorMetadata(connectorId String) : ConnectorMetadataEntry from class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 272,
        "description": "Rename Variable entry : null to layout : null in method public getLayouts(session Session, table TableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<TableLayoutResult> from class com.facebook.presto.metadata.MetadataManager",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 248,
        "description": "Change Variable Type metadata : ConnectorMetadata to entry : ConnectorMetadataEntry in method public getLayouts(session Session, table TableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<TableLayoutResult> from class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 248,
        "description": "Rename Variable metadata : ConnectorMetadata to entry : ConnectorMetadataEntry in method public getLayouts(session Session, table TableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<TableLayoutResult> from class com.facebook.presto.metadata.MetadataManager",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 232,
        "description": "Add Parameter session : Session in method public getLayouts(session Session, table TableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<TableLayoutResult> from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 294,
        "description": "Change Variable Type metadata : ConnectorMetadata to entry : ConnectorMetadataEntry in method public getLayout(session Session, handle TableLayoutHandle) : TableLayout from class com.facebook.presto.metadata.MetadataManager",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 294,
        "description": "Rename Variable metadata : ConnectorMetadata to entry : ConnectorMetadataEntry in method public getLayout(session Session, handle TableLayoutHandle) : TableLayout from class com.facebook.presto.metadata.MetadataManager",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 276,
        "description": "Add Parameter session : Session in method public getLayout(session Session, handle TableLayoutHandle) : TableLayout from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 276,
        "description": "Add Method Annotation @Override in method public getLayout(session Session, handle TableLayoutHandle) : TableLayout from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Add Parameter session : Session in method public getTableMetadata(session Session, tableHandle TableHandle) : TableMetadata from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 306,
        "description": "Add Parameter session : Session in method public getColumnHandles(session Session, tableHandle TableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 313,
        "description": "Add Parameter session : Session in method public getColumnMetadata(session Session, tableHandle TableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 339,
        "description": "Add Parameter session : Session in method public getSampleWeightColumnHandle(session Session, tableHandle TableHandle) : Optional<ColumnHandle> from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 403,
        "description": "Add Parameter session : Session in method public renameTable(session Session, tableHandle TableHandle, newTableName QualifiedTableName) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 419,
        "description": "Add Parameter session : Session in method public renameColumn(session Session, tableHandle TableHandle, source ColumnHandle, target String) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 426,
        "description": "Add Parameter session : Session in method public dropTable(session Session, tableHandle TableHandle) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 443,
        "description": "Add Parameter session : Session in method public commitCreateTable(session Session, tableHandle OutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 450,
        "description": "Add Parameter session : Session in method public rollbackCreateTable(session Session, tableHandle OutputTableHandle) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 465,
        "description": "Add Parameter session : Session in method public commitInsert(session Session, tableHandle InsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 472,
        "description": "Add Parameter session : Session in method public rollbackInsert(session Session, tableHandle InsertTableHandle) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 479,
        "description": "Add Parameter session : Session in method public getUpdateRowIdColumnHandle(session Session, tableHandle TableHandle) : ColumnHandle from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 494,
        "description": "Add Parameter session : Session in method public commitDelete(session Session, tableHandle TableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 501,
        "description": "Add Parameter session : Session in method public rollbackDelete(session Session, tableHandle TableHandle) : void from class com.facebook.presto.metadata.MetadataManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/metadata/MetadataManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ScanFilterAndProjectOperator.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/ScanFilterAndProjectOperator.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TableScanOperator.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/TableScanOperator.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TableWriterOperator.java",
    "refactorings": [{
      "rightSideLineNumber": 56,
      "description": "Add Parameter session : Session in method public TableWriterOperatorFactory(operatorId int, pageSinkManager PageSinkManager, writerTarget WriterTarget, inputChannels List<Integer>, sampleWeightChannel Optional<Integer>, session Session) from class com.facebook.presto.operator.TableWriterOperator.TableWriterOperatorFactory",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/TableWriterOperator.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PageSinkManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 38,
        "description": "Add Parameter session : Session in method public createPageSink(session Session, tableHandle OutputTableHandle) : ConnectorPageSink from class com.facebook.presto.split.PageSinkManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Add Parameter session : Session in method public createPageSink(session Session, tableHandle InsertTableHandle) : ConnectorPageSink from class com.facebook.presto.split.PageSinkManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/split/PageSinkManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PageSinkProvider.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/split/PageSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PageSourceManager.java",
    "refactorings": [{
      "rightSideLineNumber": 40,
      "description": "Add Parameter session : Session in method public createPageSource(session Session, split Split, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.split.PageSourceManager",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/split/PageSourceManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PageSourceProvider.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/split/PageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RecordPageSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, outputTableHandle ConnectorOutputTableHandle) : ConnectorPageSink from class com.facebook.presto.split.RecordPageSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, insertTableHandle ConnectorInsertTableHandle) : ConnectorPageSink from class com.facebook.presto.split.RecordPageSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/split/RecordPageSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RecordPageSourceProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 38,
      "description": "Add Parameter session : ConnectorSession in method public createPageSource(session ConnectorSession, split ConnectorSplit, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.split.RecordPageSourceProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/split/RecordPageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "SplitManager.java",
    "refactorings": [{
      "rightSideLineNumber": 41,
      "description": "Add Parameter session : Session in method public getSplits(session Session, layout TableLayoutHandle) : SplitSource from class com.facebook.presto.split.SplitManager",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/split/SplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryExplainer.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/QueryExplainer.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "StatementAnalyzer.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TupleAnalyzer.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/TupleAnalyzer.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedExecutionPlanner.java",
    "refactorings": [{
      "rightSideLineNumber": 64,
      "description": "Add Parameter session : Session in method public plan(root SubPlan, session Session) : StageExecutionPlan from class com.facebook.presto.sql.planner.DistributedExecutionPlanner",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/DistributedExecutionPlanner.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "InputExtractor.java",
    "refactorings": [{
      "rightSideLineNumber": 44,
      "description": "Add Parameter session : Session in method public InputExtractor(metadata Metadata, session Session) from class com.facebook.presto.sql.planner.InputExtractor",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/InputExtractor.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalExecutionPlanner.java",
    "refactorings": [{
      "rightSideLineNumber": 1713,
      "description": "Add Parameter session : Session in method private createTableCommitter(session Session, node TableCommitNode, metadata Metadata) : TableCommitter from class com.facebook.presto.sql.planner.LocalExecutionPlanner",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/LocalExecutionPlanner.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "LogicalPlanner.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/LogicalPlanner.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PlanPrinter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 202,
        "description": "Add Parameter session : Session in method public Visitor(types Map<Symbol,Type>, session Session) from class com.facebook.presto.sql.planner.PlanPrinter.Visitor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 97,
        "description": "Add Parameter sesion : Session in method private PlanPrinter(plan PlanNode, types Map<Symbol,Type>, metadata Metadata, sesion Session) from class com.facebook.presto.sql.planner.PlanPrinter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 102,
        "description": "Add Parameter session : Session in method private PlanPrinter(plan PlanNode, types Map<Symbol,Type>, metadata Metadata, session Session, indent int) from class com.facebook.presto.sql.planner.PlanPrinter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Add Parameter session : Session in method public textLogicalPlan(plan PlanNode, types Map<Symbol,Type>, metadata Metadata, session Session) : String from class com.facebook.presto.sql.planner.PlanPrinter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Add Parameter session : Session in method public getJsonPlanSource(plan PlanNode, metadata Metadata, session Session) : String from class com.facebook.presto.sql.planner.PlanPrinter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 604,
        "description": "Move Method private printConstraint(indent int, table TableHandle, column ColumnHandle, constraint TupleDomain<ColumnHandle>) : void from class com.facebook.presto.sql.planner.PlanPrinter to private printConstraint(indent int, table TableHandle, column ColumnHandle, constraint TupleDomain<ColumnHandle>) : void from class com.facebook.presto.sql.planner.PlanPrinter.Visitor",
        "type": "Move Method"
      },
      {
        "rightSideLineNumber": 611,
        "description": "Move Method private formatDomain(table TableHandle, column ColumnHandle, domain Domain) : String from class com.facebook.presto.sql.planner.PlanPrinter to private formatDomain(table TableHandle, column ColumnHandle, domain Domain) : String from class com.facebook.presto.sql.planner.PlanPrinter.Visitor",
        "type": "Move Method"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/PlanPrinter.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryPlanner.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationPlanner.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/RelationPlanner.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "AddExchanges.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexJoinOptimizer.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/IndexJoinOptimizer.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "MetadataQueryOptimizer.java",
    "refactorings": [{
      "rightSideLineNumber": 87,
      "description": "Add Parameter session : Session in method private Optimizer(session Session, metadata Metadata, idAllocator PlanNodeIdAllocator) from class com.facebook.presto.sql.planner.optimizations.MetadataQueryOptimizer.Optimizer",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/MetadataQueryOptimizer.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PickLayout.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PickLayout.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyDerivations.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "JsonPlanPrinter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 87,
        "description": "Add Parameter session : Session in method public SourceVisitor(metadata Metadata, session Session) from class com.facebook.presto.util.JsonPlanPrinter.SourceVisitor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Add Parameter session : Session in method private JsonPlanPrinter(plan PlanNode, metadata Metadata, session Session) from class com.facebook.presto.util.JsonPlanPrinter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Add Parameter session : Session in method public getPlan(plan PlanNode, metadata Metadata, session Session) : String from class com.facebook.presto.util.JsonPlanPrinter",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/util/JsonPlanPrinter.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RaptorMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 154,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 189,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 201,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 241,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 267,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 278,
        "description": "Add Parameter session : ConnectorSession in method public renameColumn(session ConnectorSession, tableHandle ConnectorTableHandle, source ColumnHandle, target String) : void from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 314,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, outputTableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 370,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 381,
        "description": "Add Parameter session : ConnectorSession in method public getUpdateRowIdColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 387,
        "description": "Add Parameter session : ConnectorSession in method public beginDelete(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableHandle from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 393,
        "description": "Add Parameter session : ConnectorSession in method public commitDelete(session ConnectorSession, tableHandle ConnectorTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.raptor.RaptorMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RaptorPageSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 50,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, tableHandle ConnectorOutputTableHandle) : ConnectorPageSink from class com.facebook.presto.raptor.RaptorPageSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 65,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, tableHandle ConnectorInsertTableHandle) : ConnectorPageSink from class com.facebook.presto.raptor.RaptorPageSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RaptorPageSourceProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 45,
      "description": "Add Parameter session : ConnectorSession in method public createPageSource(session ConnectorSession, split ConnectorSplit, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.raptor.RaptorPageSourceProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorPageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "RaptorSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 86,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, tableHandle ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.raptor.RaptorSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, tableHandle ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.raptor.RaptorSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/RaptorSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorIndexResolver.java",
    "refactorings": [
      {
        "rightSideLineNumber": 25,
        "description": "Add Parameter session : ConnectorSession in method public resolveIndex(session ConnectorSession, tableHandle ConnectorTableHandle, indexableColumns Set<ColumnHandle>, outputColumns Set<ColumnHandle>, tupleDomain TupleDomain<ColumnHandle>) : ConnectorResolvedIndex from class com.facebook.presto.spi.ConnectorIndexResolver",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 22,
        "description": "Add Parameter session : ConnectorSession in method public resolveIndex(session ConnectorSession, tableHandle ConnectorTableHandle, indexableColumns Set<ColumnHandle>, tupleDomain TupleDomain<ColumnHandle>) : ConnectorResolvedIndex from class com.facebook.presto.spi.ConnectorIndexResolver",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ConnectorIndexResolver.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 38,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayouts(session ConnectorSession, table ConnectorTableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<ConnectorTableLayoutResult> from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayout(session ConnectorSession, handle ConnectorTableLayoutHandle) : ConnectorTableLayout from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 117,
        "description": "Add Parameter session : ConnectorSession in method public renameColumn(session ConnectorSession, tableHandle ConnectorTableHandle, source ColumnHandle, target String) : void from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 135,
        "description": "Add Parameter session : ConnectorSession in method public rollbackCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle) : void from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 152,
        "description": "Add Parameter session : ConnectorSession in method public rollbackInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle) : void from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 159,
        "description": "Add Parameter session : ConnectorSession in method public getUpdateRowIdColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 169,
        "description": "Add Parameter session : ConnectorSession in method public beginDelete(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableHandle from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Add Parameter session : ConnectorSession in method public commitDelete(session ConnectorSession, tableHandle ConnectorTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 187,
        "description": "Add Parameter session : ConnectorSession in method public rollbackDelete(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.spi.ConnectorMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ConnectorMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorPageSinkProvider.java",
    "refactorings": [],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ConnectorPageSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorPageSourceProvider.java",
    "refactorings": [],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ConnectorPageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorRecordSetProvider.java",
    "refactorings": [],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ConnectorRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorRecordSinkProvider.java",
    "refactorings": [],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ConnectorRecordSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectorSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 20,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, table ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.spi.ConnectorSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, table ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.spi.ConnectorSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Add Parameter session : ConnectorSession in method public getSplits(session ConnectorSession, layout ConnectorTableLayoutHandle) : ConnectorSplitSource from class com.facebook.presto.spi.ConnectorSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ConnectorSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ReadOnlyConnectorMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 35,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.spi.ReadOnlyConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 41,
        "description": "Add Parameter session : ConnectorSession in method public renameColumn(session ConnectorSession, tableHandle ConnectorTableHandle, source ColumnHandle, target String) : void from class com.facebook.presto.spi.ReadOnlyConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.spi.ReadOnlyConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 65,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.spi.ReadOnlyConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 77,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.spi.ReadOnlyConnectorMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/ReadOnlyConnectorMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoaderSafeConnectorIndexResolver.java",
    "refactorings": [
      {
        "rightSideLineNumber": 42,
        "description": "Add Parameter session : ConnectorSession in method public resolveIndex(session ConnectorSession, tableHandle ConnectorTableHandle, indexableColumns Set<ColumnHandle>, outputColumns Set<ColumnHandle>, tupleDomain TupleDomain<ColumnHandle>) : ConnectorResolvedIndex from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorIndexResolver",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Add Parameter session : ConnectorSession in method public resolveIndex(session ConnectorSession, tableHandle ConnectorTableHandle, indexableColumns Set<ColumnHandle>, tupleDomain TupleDomain<ColumnHandle>) : ConnectorResolvedIndex from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorIndexResolver",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Add Parameter session : ConnectorSession in method public getIndex(session ConnectorSession, indexHandle ConnectorIndexHandle, lookupSchema List<ColumnHandle>, outputSchema List<ColumnHandle>) : ConnectorIndex from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorIndexResolver",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/classloader/ClassLoaderSafeConnectorIndexResolver.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoaderSafeConnectorMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 52,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayouts(session ConnectorSession, table ConnectorTableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<ConnectorTableLayoutResult> from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 64,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayout(session ConnectorSession, handle ConnectorTableLayoutHandle) : ConnectorTableLayout from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, table ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 104,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 128,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 152,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 160,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 176,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 192,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/classloader/ClassLoaderSafeConnectorMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoaderSafeConnectorPageSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, outputTableHandle ConnectorOutputTableHandle) : ConnectorPageSink from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorPageSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Add Parameter session : ConnectorSession in method public createPageSink(session ConnectorSession, insertTableHandle ConnectorInsertTableHandle) : ConnectorPageSink from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorPageSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/classloader/ClassLoaderSafeConnectorPageSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoaderSafeConnectorPageSourceProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 38,
      "description": "Add Parameter session : ConnectorSession in method public createPageSource(session ConnectorSession, split ConnectorSplit, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorPageSourceProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/classloader/ClassLoaderSafeConnectorPageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoaderSafeConnectorRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 38,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/classloader/ClassLoaderSafeConnectorRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoaderSafeConnectorRecordSinkProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 36,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorOutputTableHandle) : RecordSink from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorRecordSinkProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Add Parameter session : ConnectorSession in method public getRecordSink(session ConnectorSession, tableHandle ConnectorInsertTableHandle) : RecordSink from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorRecordSinkProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/classloader/ClassLoaderSafeConnectorRecordSinkProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassLoaderSafeConnectorSplitManager.java",
    "refactorings": [
      {
        "rightSideLineNumber": 42,
        "description": "Add Parameter session : ConnectorSession in method public getPartitions(session ConnectorSession, table ConnectorTableHandle, tupleDomain TupleDomain<ColumnHandle>) : ConnectorPartitionResult from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 50,
        "description": "Add Parameter session : ConnectorSession in method public getPartitionSplits(session ConnectorSession, table ConnectorTableHandle, partitions List<ConnectorPartition>) : ConnectorSplitSource from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorSplitManager",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 58,
        "description": "Add Parameter session : ConnectorSession in method public getSplits(session ConnectorSession, layout ConnectorTableLayoutHandle) : ConnectorSplitSource from class com.facebook.presto.spi.classloader.ClassLoaderSafeConnectorSplitManager",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-spi/src/main/java/com/facebook/presto/spi/classloader/ClassLoaderSafeConnectorSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TpchMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 99,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayouts(session ConnectorSession, table ConnectorTableHandle, constraint Constraint<ColumnHandle>, desiredColumns Optional<Set<ColumnHandle>>) : List<ConnectorTableLayoutResult> from class com.facebook.presto.tpch.TpchMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 133,
        "description": "Add Parameter session : ConnectorSession in method public getTableLayout(session ConnectorSession, handle ConnectorTableLayoutHandle) : ConnectorTableLayout from class com.facebook.presto.tpch.TpchMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.tpch.TpchMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.tpch.TpchMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.tpch.TpchMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 198,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.tpch.TpchMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TpchRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.tpch.TpchRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TpchSplitManager.java",
    "refactorings": [{
      "rightSideLineNumber": 47,
      "description": "Add Parameter session : ConnectorSession in method public getSplits(session ConnectorSession, layout ConnectorTableLayoutHandle) : ConnectorSplitSource from class com.facebook.presto.tpch.TpchSplitManager",
      "type": "Add Parameter"
    }],
    "filePath": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "TestJdbcMetadata.java",
    "refactorings": [],
    "filePath": "presto-base-jdbc/src/test/java/com/facebook/presto/plugin/jdbc/TestJdbcMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestJdbcRecordSetProvider.java",
    "refactorings": [],
    "filePath": "presto-base-jdbc/src/test/java/com/facebook/presto/plugin/jdbc/TestJdbcRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "BlackHoleMetadataTest.java",
    "refactorings": [],
    "filePath": "presto-blackhole/src/test/java/com/facebook/presto/plugin/blackhole/BlackHoleMetadataTest.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestCassandraConnector.java",
    "refactorings": [],
    "filePath": "presto-cassandra/src/test/java/com/facebook/presto/cassandra/TestCassandraConnector.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestExampleMetadata.java",
    "refactorings": [],
    "filePath": "presto-example-http/src/test/java/com/facebook/presto/example/TestExampleMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestExampleRecordSetProvider.java",
    "refactorings": [],
    "filePath": "presto-example-http/src/test/java/com/facebook/presto/example/TestExampleRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractTestHiveClient.java",
    "refactorings": [],
    "filePath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClient.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractTestHiveClientS3.java",
    "refactorings": [],
    "filePath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveClientS3.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestJmxSplitManager.java",
    "refactorings": [],
    "filePath": "presto-jmx/src/test/java/com/facebook/presto/connector/jmx/TestJmxSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "LocalQueryRunner.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/testing/LocalQueryRunner.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestingPageSourceProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 33,
      "description": "Add Parameter session : ConnectorSession in method public createPageSource(session ConnectorSession, split ConnectorSplit, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.execution.TestingPageSourceProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/test/java/com/facebook/presto/execution/TestingPageSourceProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestingMetadata.java",
    "refactorings": [
      {
        "rightSideLineNumber": 74,
        "description": "Add Parameter session : ConnectorSession in method public getTableMetadata(session ConnectorSession, tableHandle ConnectorTableHandle) : ConnectorTableMetadata from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 84,
        "description": "Add Parameter session : ConnectorSession in method public getColumnHandles(session ConnectorSession, tableHandle ConnectorTableHandle) : Map<String,ColumnHandle> from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 96,
        "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 124,
        "description": "Add Parameter session : ConnectorSession in method public getColumnMetadata(session ConnectorSession, tableHandle ConnectorTableHandle, columnHandle ColumnHandle) : ColumnMetadata from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Add Parameter session : ConnectorSession in method public renameTable(session ConnectorSession, tableHandle ConnectorTableHandle, newTableName SchemaTableName) : void from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 162,
        "description": "Add Parameter session : ConnectorSession in method public dropTable(session ConnectorSession, tableHandle ConnectorTableHandle) : void from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 174,
        "description": "Add Parameter session : ConnectorSession in method public commitCreateTable(session ConnectorSession, tableHandle ConnectorOutputTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 186,
        "description": "Add Parameter session : ConnectorSession in method public commitInsert(session ConnectorSession, insertHandle ConnectorInsertTableHandle, fragments Collection<Slice>) : void from class com.facebook.presto.metadata.TestingMetadata",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/test/java/com/facebook/presto/metadata/TestingMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestDriver.java",
    "refactorings": [
      {
        "rightSideLineNumber": 142,
        "description": "Add Parameter session : Session in method public createPageSource(session Session, split Split, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.operator.TestDriver.testAddSourceFinish.source.new TableScanOperator.new PageSourceProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 246,
        "description": "Add Parameter session : Session in method public createPageSource(session Session, split Split, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.operator.TestDriver.testBrokenOperatorAddSource.source.new NotBlockedTableScanOperator.new PageSourceProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/test/java/com/facebook/presto/operator/TestDriver.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestScanFilterAndProjectOperator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 66,
        "description": "Add Parameter session : Session in method public createPageSource(session Session, split Split, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.operator.TestScanFilterAndProjectOperator.testPageSource.factory.new ScanFilterAndProjectOperator.ScanFilterAndProjectOperatorFactory.new PageSourceProvider",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Add Parameter session : Session in method public createPageSource(session Session, split Split, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.operator.TestScanFilterAndProjectOperator.testRecordCursorSource.factory.new ScanFilterAndProjectOperator.ScanFilterAndProjectOperatorFactory.new PageSourceProvider",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-main/src/test/java/com/facebook/presto/operator/TestScanFilterAndProjectOperator.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "FunctionAssertions.java",
    "refactorings": [{
      "rightSideLineNumber": 632,
      "description": "Add Parameter session : Session in method public createPageSource(session Session, split Split, columns List<ColumnHandle>) : ConnectorPageSource from class com.facebook.presto.operator.scalar.FunctionAssertions.TestPageSourceProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-main/src/test/java/com/facebook/presto/operator/scalar/FunctionAssertions.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRaptorMetadata.java",
    "refactorings": [],
    "filePath": "presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestRaptorMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRaptorSplitManager.java",
    "refactorings": [],
    "filePath": "presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestRaptorSplitManager.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "H2QueryRunner.java",
    "refactorings": [],
    "filePath": "presto-tests/src/main/java/com/facebook/presto/tests/H2QueryRunner.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TpchIndexResolver.java",
    "refactorings": [
      {
        "rightSideLineNumber": 61,
        "description": "Add Parameter session : ConnectorSession in method public resolveIndex(session ConnectorSession, tableHandle ConnectorTableHandle, indexableColumns Set<ColumnHandle>, tupleDomain TupleDomain<ColumnHandle>) : ConnectorResolvedIndex from class com.facebook.presto.tests.tpch.TpchIndexResolver",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Add Parameter session : ConnectorSession in method public getIndex(session ConnectorSession, indexHandle ConnectorIndexHandle, lookupSchema List<ColumnHandle>, outputSchema List<ColumnHandle>) : ConnectorIndex from class com.facebook.presto.tests.tpch.TpchIndexResolver",
        "type": "Add Parameter"
      }
    ],
    "filePath": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexResolver.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "TpchIndexedData.java",
    "refactorings": [],
    "filePath": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "SampledTpchMetadata.java",
    "refactorings": [{
      "rightSideLineNumber": 34,
      "description": "Add Parameter session : ConnectorSession in method public getSampleWeightColumnHandle(session ConnectorSession, tableHandle ConnectorTableHandle) : ColumnHandle from class com.facebook.presto.tpch.testing.SampledTpchMetadata",
      "type": "Add Parameter"
    }],
    "filePath": "presto-tpch/src/main/java/com/facebook/presto/tpch/testing/SampledTpchMetadata.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "SampledTpchRecordSetProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 48,
      "description": "Add Parameter session : ConnectorSession in method public getRecordSet(session ConnectorSession, split ConnectorSplit, columns List<? extends ColumnHandle>) : RecordSet from class com.facebook.presto.tpch.testing.SampledTpchRecordSetProvider",
      "type": "Add Parameter"
    }],
    "filePath": "presto-tpch/src/main/java/com/facebook/presto/tpch/testing/SampledTpchRecordSetProvider.java",
    "commit": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "DegreeItem.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/cursor/DegreeItem.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityItem.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/cursor/EntityItem.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelItem.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/cursor/LabelItem.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeItem.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/cursor/NodeItem.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RelationshipItem.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/cursor/RelationshipItem.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ConstraintEnforcingEntityOperations.java",
    "refactorings": [
      {
        "rightSideLineNumber": 195,
        "description": "Change Parameter Type startNodeId : long to startNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 195,
        "description": "Change Parameter Type endNodeId : long to endNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/ConstraintEnforcingEntityOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GuardingStatementOperations.java",
    "refactorings": [
      {
        "rightSideLineNumber": 67,
        "description": "Change Parameter Type startNodeId : long to startNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.GuardingStatementOperations",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Change Parameter Type endNodeId : long to endNodeId : NodeItem in method public relationshipCreate(statement KernelStatement, relationshipTypeId int, startNodeId NodeItem, endNodeId NodeItem) : long from class org.neo4j.kernel.impl.api.GuardingStatementOperations",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/GuardingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "KernelTransactionImplementation.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1048,
        "description": "Change Parameter Type outgoing : int to outgoing : long in method private updateRelationshipsCountsFromDegrees(type int, label int, outgoing long, incoming long) : void from class org.neo4j.kernel.impl.api.KernelTransactionImplementation",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 1049,
        "description": "Change Parameter Type incoming : int to incoming : long in method private updateRelationshipsCountsFromDegrees(type int, label int, outgoing long, incoming long) : void from class org.neo4j.kernel.impl.api.KernelTransactionImplementation",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/KernelTransactionImplementation.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockingStatementOperations.java",
    "refactorings": [
      {
        "rightSideLineNumber": 288,
        "description": "Change Parameter Type startNodeId : long to startNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 288,
        "description": "Change Parameter Type endNodeId : long to endNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 288,
        "description": "Rename Parameter startNodeId : long to startNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 288,
        "description": "Rename Parameter endNodeId : long to endNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/LockingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LookupFilter.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/LookupFilter.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MandatoryPropertyEnforcer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/MandatoryPropertyEnforcer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationsFacade.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/OperationsFacade.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StateHandlingStatementOperations.java",
    "refactorings": [
      {
        "rightSideLineNumber": 295,
        "description": "Add Parameter startNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 295,
        "description": "Add Parameter endNode : NodeItem in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNode NodeItem, endNode NodeItem) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 295,
        "description": "Remove Parameter startNodeId : long in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNodeId long, endNodeId long) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 295,
        "description": "Remove Parameter endNodeId : long in method public relationshipCreate(state KernelStatement, relationshipTypeId int, startNodeId long, endNodeId long) : long from class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/StateHandlingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TxAbstractNodeCursor.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/cursor/TxAbstractNodeCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TxAbstractRelationshipCursor.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/cursor/TxAbstractRelationshipCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityReadOperations.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/EntityReadOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityWriteOperations.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/EntityWriteOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheLayer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/CacheLayer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DiskLayer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/DiskLayer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreAbstractNodeCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 65,
        "description": "Change Parameter Type nodeStore : NodeStore to neoStore : NeoStore in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Add Parameter Modifier final in parameter neoStore : NeoStore in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Add Parameter Modifier final in parameter storeStatement : StoreStatement in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 65,
        "description": "Rename Parameter nodeStore : NodeStore to neoStore : NeoStore in method public StoreAbstractNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 51,
        "description": "Rename Attribute nodeStore : NodeStore to neoStore : NeoStore in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 51,
        "description": "Change Attribute Type nodeStore : NodeStore to neoStore : NeoStore in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreAbstractNodeCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreAbstractRelationshipCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 51,
        "description": "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreAbstractRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 51,
        "description": "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreAbstractRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Add Parameter Modifier final in parameter neoStore : NeoStore in method public StoreAbstractRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement) from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "type": "Add Parameter Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreAbstractRelationshipCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreIteratorNodeCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 42,
        "description": "Change Parameter Type nodeStore : NodeStore to neoStore : NeoStore in method public StoreIteratorNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreIteratorNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorNodeCursor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Rename Parameter nodeStore : NodeStore to neoStore : NeoStore in method public StoreIteratorNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreIteratorNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorNodeCursor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreIteratorNodeCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreIteratorRelationshipCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 42,
        "description": "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreIteratorRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreIteratorRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreIteratorRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreIteratorRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreIteratorRelationshipCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreNodeRelationshipCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 56,
        "description": "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, groupRecord RelationshipGroupRecord, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, groupRecord RelationshipGroupRecord, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 50,
        "description": "Remove Parameter groupStore : RelationshipGroupStore in method public StoreNodeRelationshipCursor(relationshipRecord RelationshipRecord, relationshipStore RelationshipStore, groupRecord RelationshipGroupRecord, groupStore RelationshipGroupStore, storeStatement StoreStatement, instanceCache Consumer<StoreNodeRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreNodeRelationshipCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreReadLayer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreReadLayer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreSingleNodeCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 40,
        "description": "Change Parameter Type nodeStore : NodeStore to neoStore : NeoStore in method public StoreSingleNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreSingleNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleNodeCursor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 40,
        "description": "Rename Parameter nodeStore : NodeStore to neoStore : NeoStore in method public StoreSingleNodeCursor(nodeRecord NodeRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache Consumer<StoreSingleNodeCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleNodeCursor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreSingleNodeCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreSingleRelationshipCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 39,
        "description": "Change Parameter Type relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreSingleRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreSingleRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 39,
        "description": "Rename Parameter relationshipStore : RelationshipStore to neoStore : NeoStore in method public StoreSingleRelationshipCursor(relationshipRecord RelationshipRecord, neoStore NeoStore, storeStatement StoreStatement, instanceCache InstanceCache<StoreSingleRelationshipCursor>) from class org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreSingleRelationshipCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreStatement.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreStatement.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Cursors.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/Cursors.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchRelationshipIterable.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchRelationshipIterable.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GenericCursor.java",
    "refactorings": [],
    "filePath": "community/primitive-collections/src/main/java/org/neo4j/cursor/GenericCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphDatabaseShutdownTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/graphdb/GraphDatabaseShutdownTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGuard.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/TestGuard.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LockingStatementOperationsTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 95,
        "description": "Extract Variable node1 : NodeItem in method public shouldAcquireEntityWriteLockCreatingRelationship() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 95,
        "description": "Extract Variable node2 : NodeItem in method public shouldAcquireEntityWriteLockCreatingRelationship() : void from class org.neo4j.kernel.impl.api.LockingStatementOperationsTest",
        "type": "Extract Variable"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/LockingStatementOperationsTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LabelTransactionStateTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/LabelTransactionStateTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SchemaTransactionStateTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/SchemaTransactionStateTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StubCursors.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/StubCursors.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "DiskLayerLabelTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/DiskLayerLabelTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TxStateTransactionDataViewTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/coreapi/TxStateTransactionDataViewTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestNeoStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 804,
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel1(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel1(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 804,
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 425,
        "description": "Change Variable Type relationships : PrimitiveLongIterator to relationships : Cursor<RelationshipItem> in method private validateNodeRel1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, rel1 long, rel2 long, relType1 int, relType2 int) : void from class org.neo4j.kernel.impl.store.TestNeoStore",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 514,
        "description": "Change Variable Type relationships : PrimitiveLongIterator to relationships : Cursor<RelationshipItem> in method private validateNodeRel2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, rel1 long, rel2 long, relType1 int, relType2 int) : void from class org.neo4j.kernel.impl.store.TestNeoStore",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/TestNeoStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "EigenvectorCentrality.java",
    "refactorings": [],
    "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/centrality/EigenvectorCentrality.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4712de476aabe69cd762233c9641dd3cf9f8361b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EigenvectorCentralityArnoldi.java",
    "refactorings": [
      {
        "rightSideLineNumber": 63,
        "description": "Rename Method protected runInternalArnoldi(iterations int) : int renamed to protected runInternalIteration() : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 146,
        "description": "Localize Parameter iterations : int to iterations : int in method protected runInternalIteration() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
        "type": "Localize Parameter"
      },
      {
        "rightSideLineNumber": 63,
        "description": "Add Method Annotation @Override in method protected runInternalIteration() : int from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/centrality/EigenvectorCentralityArnoldi.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4712de476aabe69cd762233c9641dd3cf9f8361b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EigenvectorCentralityBase.java",
    "refactorings": [],
    "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/centrality/EigenvectorCentralityBase.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4712de476aabe69cd762233c9641dd3cf9f8361b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EigenvectorCentralityPower.java",
    "refactorings": [],
    "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/centrality/EigenvectorCentralityPower.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4712de476aabe69cd762233c9641dd3cf9f8361b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EigenvectorCentralityTest.java",
    "refactorings": [],
    "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/centrality/EigenvectorCentralityTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/4712de476aabe69cd762233c9641dd3cf9f8361b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "JavadocTagInfo.java",
    "refactorings": [{
      "rightSideLineNumber": 428,
      "description": "Change Method Access Modifier private to package in method package JavadocTagInfo(text String, name String, type Type) from class com.puppycrawl.tools.checkstyle.api.JavadocTagInfo",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfo.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/2f7481ee4e20ae785298c31ec2f979752dd7eb03",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "LineSeparatorOption.java",
    "refactorings": [{
      "rightSideLineNumber": 50,
      "description": "Change Method Access Modifier private to package in method package LineSeparatorOption(sep String) from class com.puppycrawl.tools.checkstyle.checks.LineSeparatorOption",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/LineSeparatorOption.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/2f7481ee4e20ae785298c31ec2f979752dd7eb03",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RedundantModifierCheck.java",
    "refactorings": [
      {
        "rightSideLineNumber": 84,
        "description": "Extract Method private checkInterfaceModifiers(ast DetailAST) : void extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Extract Method private checkEnumConstructorModifiers(ast DetailAST) : void extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/2f7481ee4e20ae785298c31ec2f979752dd7eb03",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RedundantModifierTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/2f7481ee4e20ae785298c31ec2f979752dd7eb03",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "InputRedundantConstructorModifier.java",
    "refactorings": [],
    "filePath": "src/test/resources/com/puppycrawl/tools/checkstyle/InputRedundantConstructorModifier.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/2f7481ee4e20ae785298c31ec2f979752dd7eb03",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "IncomingTcpConnection.java",
    "refactorings": [{
      "rightSideLineNumber": 168,
      "description": "Extract Variable crossNodeTimestamp : long in method private receiveMessage(input DataInputStream, version int) : InetAddress from class org.apache.cassandra.net.IncomingTcpConnection",
      "type": "Extract Variable"
    }],
    "filePath": "src/java/org/apache/cassandra/net/IncomingTcpConnection.java",
    "commit": "https://github.com/apache/cassandra/commit/573a1d115b86abbe3fb53ff930464d7d8fd95600",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageDeliveryTask.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Add Parameter isCrossNodeTimestamp : boolean in method public MessageDeliveryTask(message MessageIn, id int, timestamp long, isCrossNodeTimestamp boolean) from class org.apache.cassandra.net.MessageDeliveryTask",
      "type": "Add Parameter"
    }],
    "filePath": "src/java/org/apache/cassandra/net/MessageDeliveryTask.java",
    "commit": "https://github.com/apache/cassandra/commit/573a1d115b86abbe3fb53ff930464d7d8fd95600",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MessagingService.java",
    "refactorings": [
      {
        "rightSideLineNumber": 902,
        "description": "Extract Method private incrementDroppedMessages(droppedMessages DroppedMessages, isCrossNodeTimeout boolean) : void extracted from public incrementDroppedMessages(verb Verb) : void in class org.apache.cassandra.net.MessagingService",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 882,
        "description": "Extract Method public incrementDroppedMessages(verb Verb, isCrossNodeTimeout boolean) : void extracted from public incrementDroppedMessages(verb Verb) : void in class org.apache.cassandra.net.MessagingService",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 902,
        "description": "Extract Method private incrementDroppedMessages(droppedMessages DroppedMessages, isCrossNodeTimeout boolean) : void extracted from private incrementRejectedMessages(verb Verb) : void in class org.apache.cassandra.net.MessagingService",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 929,
        "description": "Extract Method package getDroppedMessagesLogs() : List<String> extracted from private logDroppedMessages() : void in class org.apache.cassandra.net.MessagingService",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 924,
        "description": "Change Variable Type entry : Map.Entry<Verb,DroppedMessageMetrics> to entry : Map.Entry<Verb,DroppedMessages> in method package getDroppedMessagesLogs() : List<String> from class org.apache.cassandra.net.MessagingService",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 891,
        "description": "Change Variable Type metrics : DroppedMessageMetrics to droppedMessages : DroppedMessages in method private incrementRejectedMessages(verb Verb) : void from class org.apache.cassandra.net.MessagingService",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 891,
        "description": "Rename Variable metrics : DroppedMessageMetrics to droppedMessages : DroppedMessages in method private incrementRejectedMessages(verb Verb) : void from class org.apache.cassandra.net.MessagingService",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 1070,
        "description": "Change Variable Type entry : Map.Entry<Verb,DroppedMessageMetrics> to entry : Map.Entry<Verb,DroppedMessages> in method public getDroppedMessages() : Map<String,Integer> from class org.apache.cassandra.net.MessagingService",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1078,
        "description": "Change Variable Type entry : Map.Entry<Verb,DroppedMessageMetrics> to entry : Map.Entry<Verb,DroppedMessages> in method public getRecentlyDroppedMessages() : Map<String,Integer> from class org.apache.cassandra.net.MessagingService",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 338,
        "description": "Replace Generic With Diamond EnumMap<Verb,IVerbHandler> with EnumMap<> in method private MessagingService(testOnly boolean) from class org.apache.cassandra.net.MessagingService",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 338,
        "description": "Replace Generic With Diamond ExpiringMap<Integer,CallbackInfo> with ExpiringMap<> in method private MessagingService(testOnly boolean) from class org.apache.cassandra.net.MessagingService",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 338,
        "description": "Add Parameter testOnly : boolean in method private MessagingService(testOnly boolean) from class org.apache.cassandra.net.MessagingService",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 750,
        "description": "Add Parameter isCrossNodeTimestamp : boolean in method public receive(message MessageIn, id int, timestamp long, isCrossNodeTimestamp boolean) : void from class org.apache.cassandra.net.MessagingService",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 311,
        "description": "Rename Attribute droppedMessages : Map<Verb,DroppedMessageMetrics> to droppedMessagesMap : Map<Verb,DroppedMessages> in class org.apache.cassandra.net.MessagingService",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 311,
        "description": "Change Attribute Type droppedMessages : Map<Verb,DroppedMessageMetrics> to droppedMessagesMap : Map<Verb,DroppedMessages> in class org.apache.cassandra.net.MessagingService",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 311,
        "description": "Replace Generic With Diamond EnumMap<Verb,DroppedMessageMetrics> with EnumMap<> in attribute private droppedMessagesMap : Map<Verb,DroppedMessages> from class org.apache.cassandra.net.MessagingService",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/net/MessagingService.java",
    "commit": "https://github.com/apache/cassandra/commit/573a1d115b86abbe3fb53ff930464d7d8fd95600",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MessagingServiceTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/net/MessagingServiceTest.java",
    "commit": "https://github.com/apache/cassandra/commit/573a1d115b86abbe3fb53ff930464d7d8fd95600",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "TestAdhocCreateDropIndex.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Extract Method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testBasicCreateIndex() : void in class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Extract Method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testCreateDropIndexonView() : void in class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 254,
        "description": "Inline Variable pathToCatalog : String in method public testBasicCreateIndex() : void from class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 257,
        "description": "Inline Variable pathToDeployment : String in method public testBasicCreateIndex() : void from class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 254,
        "description": "Inline Variable pathToCatalog : String in method public testCreateDropIndexonView() : void from class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 257,
        "description": "Inline Variable pathToDeployment : String in method public testCreateDropIndexonView() : void from class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 252,
        "description": "Extract Variable ddl : String in method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void from class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 252,
        "description": "Extract Variable ddl : String in method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void from class org.voltdb.TestAdhocCreateDropIndex",
        "type": "Extract Variable"
      }
    ],
    "filePath": "tests/frontend/org/voltdb/TestAdhocCreateDropIndex.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/c1359c843bd03a694f846c8140e24ed646bbb913",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "DateTimeTypeTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 133,
        "description": "Extract Method private initTimeMap() : Map<String,Integer> extracted from public parameters() : Collection<Object[]> in class org.openhab.core.library.types.DateTimeTypeTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 165,
        "description": "Inline Attribute private dateFormatter : SimpleDateFormat in class org.openhab.core.library.types.DateTimeTypeTest",
        "type": "Inline Attribute"
      }
    ],
    "filePath": "bundles/core/org.openhab.core.library.test/src/test/java/org/openhab/core/library/types/DateTimeTypeTest.java",
    "commit": "https://github.com/openhab/openhab/commit/f25fa3ae35e4a60a2b7f79a88f14d46ce6cebf55",
    "repository": "https://github.com/openhab/openhab.git",
    "fileType": "test"
  },
  {
    "fileName": "Predicates.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/Predicates.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "SqlPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/SqlPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/AbstractPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AndPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/AndPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AttributeUtils.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/AttributeUtils.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "BetweenPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/BetweenPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "EqualPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/EqualPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "GreaterLessPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/GreaterLessPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ILikePredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/ILikePredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/InPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InstanceOfPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/InstanceOfPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "LikePredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/LikePredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "NotEqualPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/NotEqualPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "NotPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/NotPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "OrPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/OrPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "RegexPredicate.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/query/impl/predicates/RegexPredicate.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "PredicatesTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/query/PredicatesTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "IndexTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/query/impl/IndexTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultFileSystemAbstraction.java",
    "refactorings": [],
    "filePath": "community/io/src/main/java/org/neo4j/io/fs/DefaultFileSystemAbstraction.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DelegateFileSystemAbstraction.java",
    "refactorings": [],
    "filePath": "community/io/src/main/java/org/neo4j/io/fs/DelegateFileSystemAbstraction.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "FileLock.java",
    "refactorings": [],
    "filePath": "community/io/src/main/java/org/neo4j/io/fs/FileLock.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "FileSystemAbstraction.java",
    "refactorings": [],
    "filePath": "community/io/src/main/java/org/neo4j/io/fs/FileSystemAbstraction.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "FileLockException.java",
    "refactorings": [],
    "filePath": "community/io/src/main/java/org/neo4j/io/pagecache/impl/FileLockException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SingleFilePageSwapper.java",
    "refactorings": [{
      "rightSideLineNumber": 440,
      "description": "Extract Method private closeAndCollectExceptions(channelIndex int, exception IOException) : void extracted from public close() : void in class org.neo4j.io.pagecache.impl.SingleFilePageSwapper",
      "type": "Extract Method"
    }],
    "filePath": "community/io/src/main/java/org/neo4j/io/pagecache/impl/SingleFilePageSwapper.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreLocker.java",
    "refactorings": [
      {
        "rightSideLineNumber": 91,
        "description": "Extract Method private storeLockException(message String, e Exception) : StoreLockException extracted from public checkLock(storeDir File) : void in class org.neo4j.kernel.StoreLocker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 91,
        "description": "Extract Method private storeLockException(message String, e Exception) : StoreLockException extracted from public checkLock(storeDir File) : void in class org.neo4j.kernel.StoreLocker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 93,
        "description": "Extract Variable help : String in method private storeLockException(message String, e Exception) : StoreLockException from class org.neo4j.kernel.StoreLocker",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 93,
        "description": "Extract Variable message : String in method private storeLockException(message String, e Exception) : StoreLockException from class org.neo4j.kernel.StoreLocker",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 93,
        "description": "Extract Variable message : String in method private storeLockException(message String, e Exception) : StoreLockException from class org.neo4j.kernel.StoreLocker",
        "type": "Extract Variable"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/StoreLocker.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CommonAbstractStore.java",
    "refactorings": [{
      "rightSideLineNumber": 731,
      "description": "Rename Method protected releaseFileLockAndCloseFileChannel() : void renamed to protected closeFileChannel() : void in class org.neo4j.kernel.impl.store.CommonAbstractStore",
      "type": "Rename Method"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/CommonAbstractStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StandardStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/standard/StandardStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreOpenCloseCycle.java",
    "refactorings": [{
      "rightSideLineNumber": 110,
      "description": "Remove Parameter fs : FileSystemAbstraction in method public StoreOpenCloseCycle(log Log, dbFileName File, format StoreFormat<?,?>, fs FileSystemAbstraction) from class org.neo4j.kernel.impl.store.standard.StoreOpenCloseCycle",
      "type": "Remove Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/standard/StoreOpenCloseCycle.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AdversarialFileSystemAbstraction.java",
    "refactorings": [],
    "filePath": "community/io/src/test/java/org/neo4j/adversaries/fs/AdversarialFileSystemAbstraction.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "DelegatingFileSystemAbstraction.java",
    "refactorings": [],
    "filePath": "community/io/src/test/java/org/neo4j/graphdb/mockfs/DelegatingFileSystemAbstraction.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "EphemeralFileSystemAbstraction.java",
    "refactorings": [],
    "filePath": "community/io/src/test/java/org/neo4j/graphdb/mockfs/EphemeralFileSystemAbstraction.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "FileSystemAbstractionInterruptionTest.java",
    "refactorings": [{
      "rightSideLineNumber": 82,
      "description": "Add Parameter Annotation @SuppressWarnings(\"UnusedParameters\") in parameter name : String in method public FileSystemAbstractionInterruptionTest(name String, factory Factory<FileSystemAbstraction>) from class org.neo4j.io.fs.FileSystemAbstractionInterruptionTest",
      "type": "Add Parameter Annotation"
    }],
    "filePath": "community/io/src/test/java/org/neo4j/io/fs/FileSystemAbstractionInterruptionTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LockThisFileProgram.java",
    "refactorings": [],
    "filePath": "community/io/src/test/java/org/neo4j/io/pagecache/impl/LockThisFileProgram.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SingleFilePageSwapperTest.java",
    "refactorings": [],
    "filePath": "community/io/src/test/java/org/neo4j/io/pagecache/impl/SingleFilePageSwapperTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreLockerTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/StoreLockerTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestOsSpecificLocks.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/TestOsSpecificLocks.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreOpenCloseCycleTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/impl/StoreOpenCloseCycleTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "UniqueIndexRecoveryTests.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/index/recovery/UniqueIndexRecoveryTests.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BackupServiceIT.java",
    "refactorings": [
      {
        "rightSideLineNumber": 520,
        "description": "Extract Variable resolver : DependencyResolver in method public shouldContainTransactionsThatHappenDuringBackupProcess() : void from class org.neo4j.backup.BackupServiceIT",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 538,
        "description": "Extract Variable resolver : DependencyResolver in method public run() : void from class org.neo4j.backup.BackupServiceIT.shouldContainTransactionsThatHappenDuringBackupProcess.execute.new Runnable",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 671,
        "description": "Add Parameter txIdFromOrigin : long in method private checkLastCommittedTxIdInLogAndNeoStore(txId long, txIdFromOrigin long) : void from class org.neo4j.backup.BackupServiceIT",
        "type": "Add Parameter"
      }
    ],
    "filePath": "enterprise/backup/src/test/java/org/neo4j/backup/BackupServiceIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreCopyClientTest.java",
    "refactorings": [],
    "filePath": "enterprise/com/src/test/java/org/neo4j/com/storecopy/StoreCopyClientTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CentralizedServiceWorker.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/bsp/CentralizedServiceWorker.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "ServerData.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/comm/ServerData.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "LongAbstractListMessageStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 91,
        "description": "Extract Variable vertexId : LongWritable in method private populateMap() : void from class org.apache.giraph.comm.messages.primitives.long_id.LongAbstractListMessageStore",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Change Variable Type vertex : Vertex<LongWritable,?,?> to obj : Object in method private populateMap() : void from class org.apache.giraph.comm.messages.primitives.long_id.LongAbstractListMessageStore",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Change Variable Type partition : Partition<LongWritable,?,?> to partition : Partition in method private populateMap() : void from class org.apache.giraph.comm.messages.primitives.long_id.LongAbstractListMessageStore",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Rename Variable vertex : Vertex<LongWritable,?,?> to obj : Object in method private populateMap() : void from class org.apache.giraph.comm.messages.primitives.long_id.LongAbstractListMessageStore",
        "type": "Rename Variable"
      }
    ],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/comm/messages/primitives/long_id/LongAbstractListMessageStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "SendWorkerEdgesRequest.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/comm/requests/SendWorkerEdgesRequest.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "SendWorkerVerticesRequest.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/comm/requests/SendWorkerVerticesRequest.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "GiraphConfiguration.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/conf/GiraphConfiguration.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "GiraphConstants.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/conf/GiraphConstants.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractEdgeStore.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/edge/AbstractEdgeStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "EdgeStore.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/edge/EdgeStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleEdgeStore.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/edge/SimpleEdgeStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "IntEdgeStore.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/edge/primitives/IntEdgeStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "LongEdgeStore.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/edge/primitives/LongEdgeStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "ComputeCallable.java",
    "refactorings": [
      {
        "rightSideLineNumber": 182,
        "description": "Extract Variable partitionStore : PartitionStore<I,V,E> in method public call() : Collection<PartitionStats> from class org.apache.giraph.graph.ComputeCallable",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 104,
        "description": "Remove Parameter partitionIdQueue : BlockingQueue<Integer> in method public ComputeCallable(context Mapper<?,?,?,?>.Context, graphState GraphState, messageStore MessageStore<I,M1>, partitionIdQueue BlockingQueue<Integer>, configuration ImmutableClassesGiraphConfiguration<I,V,E>, serviceWorker CentralizedServiceWorker<I,V,E>) from class org.apache.giraph.graph.ComputeCallable",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/graph/ComputeCallable.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphTaskManager.java",
    "refactorings": [{
      "rightSideLineNumber": 718,
      "description": "Remove Parameter numPartitions : int in method private processGraphPartitions(context Mapper<?,?,?,?>.Context, partitionStatsList List<PartitionStats>, graphState GraphState, messageStore MessageStore<I,Writable>, numPartitions int, numThreads int) : void from class org.apache.giraph.graph.GraphTaskManager",
      "type": "Remove Parameter"
    }],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/graph/GraphTaskManager.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "AdaptiveOutOfCoreEngine.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/AdaptiveOutOfCoreEngine.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckMemoryCallable.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/CheckMemoryCallable.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "DiskBackedPartitionStore.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/DiskBackedPartitionStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "JVMMemoryEstimator.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/JVMMemoryEstimator.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "MemoryEstimator.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/MemoryEstimator.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "OutOfCoreEngine.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/OutOfCoreEngine.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "OutOfCoreProcessorCallable.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/OutOfCoreProcessorCallable.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/ooc/package-info.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "DiskBackedPartitionStore.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/partition/DiskBackedPartitionStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionStore.java",
    "refactorings": [{
      "rightSideLineNumber": 37,
      "description": "Change Return Type void to boolean in method public abstract addPartition(partition Partition<I,V,E>) : boolean from class org.apache.giraph.partition.PartitionStore",
      "type": "Change Return Type"
    }],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/partition/PartitionStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "SimplePartitionStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 77,
        "description": "Inline Variable oldPartition : Partition<I,V,E> in method public addPartition(partition Partition<I,V,E>) : void from class org.apache.giraph.partition.SimplePartitionStore",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Change Return Type void to boolean in method public addPartition(partition Partition<I,V,E>) : boolean from class org.apache.giraph.partition.SimplePartitionStore",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Remove Method Annotation @Override in method public getOrCreatePartition(partitionId Integer) : Partition<I,V,E> from class org.apache.giraph.partition.SimplePartitionStore",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Change Method Access Modifier public to private in method private getOrCreatePartition(partitionId Integer) : Partition<I,V,E> from class org.apache.giraph.partition.SimplePartitionStore",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Add Parameter serviceWorker : CentralizedServiceWorker<I,V,E> in method public SimplePartitionStore(conf ImmutableClassesGiraphConfiguration<I,V,E>, context Mapper<?,?,?,?>.Context, serviceWorker CentralizedServiceWorker<I,V,E>) from class org.apache.giraph.partition.SimplePartitionStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 102,
        "description": "Change Parameter Type partitionId : int to partitionId : Integer in method public getPartitionVertexCount(partitionId Integer) : long from class org.apache.giraph.partition.SimplePartitionStore",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Change Parameter Type partitionId : int to partitionId : Integer in method public getPartitionEdgeCount(partitionId Integer) : long from class org.apache.giraph.partition.SimplePartitionStore",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/partition/SimplePartitionStore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "BspServiceWorker.java",
    "refactorings": [],
    "filePath": "giraph-core/src/main/java/org/apache/giraph/worker/BspServiceWorker.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestTest.java",
    "refactorings": [],
    "filePath": "giraph-core/src/test/java/org/apache/giraph/comm/RequestTest.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "test"
  },
  {
    "fileName": "TestIntFloatPrimitiveMessageStores.java",
    "refactorings": [],
    "filePath": "giraph-core/src/test/java/org/apache/giraph/comm/messages/TestIntFloatPrimitiveMessageStores.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "test"
  },
  {
    "fileName": "TestLongDoublePrimitiveMessageStores.java",
    "refactorings": [],
    "filePath": "giraph-core/src/test/java/org/apache/giraph/comm/messages/TestLongDoublePrimitiveMessageStores.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "test"
  },
  {
    "fileName": "TestPartitionStores.java",
    "refactorings": [
      {
        "rightSideLineNumber": 538,
        "description": "Change Parameter Type partitionId : int to partitionIds : List<Integer> in method public Worker(vertexCounter AtomicInteger, partitionStore PartitionStore<IntWritable,IntWritable,NullWritable>, partitionIds List<Integer>, conf ImmutableClassesGiraphConfiguration<IntWritable,IntWritable,NullWritable>) from class org.apache.giraph.partition.TestPartitionStores.Worker",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 538,
        "description": "Rename Parameter partitionId : int to partitionIds : List<Integer> in method public Worker(vertexCounter AtomicInteger, partitionStore PartitionStore<IntWritable,IntWritable,NullWritable>, partitionIds List<Integer>, conf ImmutableClassesGiraphConfiguration<IntWritable,IntWritable,NullWritable>) from class org.apache.giraph.partition.TestPartitionStores.Worker",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 74,
        "description": "Rename Attribute NUM_OF_VERTEXES_PER_THREAD : int to NUM_OF_VERTEXES_PER_PARTITION : int in class org.apache.giraph.partition.TestPartitionStores",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 526,
        "description": "Rename Attribute partitionId : int to partitionIds : List<Integer> in class org.apache.giraph.partition.TestPartitionStores.Worker",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 526,
        "description": "Change Attribute Type partitionId : int to partitionIds : List<Integer> in class org.apache.giraph.partition.TestPartitionStores.Worker",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 313,
        "description": "Change Variable Type partitionId : int to partitionIds : List<Integer> in method private testMultiThreaded() : void from class org.apache.giraph.partition.TestPartitionStores",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 313,
        "description": "Rename Variable partitionId : int to partitionIds : List<Integer> in method private testMultiThreaded() : void from class org.apache.giraph.partition.TestPartitionStores",
        "type": "Rename Variable"
      }
    ],
    "filePath": "giraph-core/src/test/java/org/apache/giraph/partition/TestPartitionStores.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "test"
  },
  {
    "fileName": "TestOutOfCore.java",
    "refactorings": [],
    "filePath": "giraph-examples/src/test/java/org/apache/giraph/TestOutOfCore.java",
    "commit": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "repository": "https://github.com/apache/giraph.git",
    "fileType": "test"
  },
  {
    "fileName": "ArrowType.java",
    "refactorings": [
      {
        "rightSideLineNumber": 80,
        "description": "Extract Method protected isSubtype(other JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(other JSType) : boolean in class com.google.javascript.rhino.jstype.ArrowType",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Rename Parameter other : JSType to that : JSType in method public isSubtype(that JSType) : boolean from class com.google.javascript.rhino.jstype.ArrowType",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "src/com/google/javascript/rhino/jstype/ArrowType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "EnumElementType.java",
    "refactorings": [{
      "rightSideLineNumber": 164,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumElementType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/EnumElementType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "EnumType.java",
    "refactorings": [{
      "rightSideLineNumber": 138,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/EnumType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "FunctionType.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1400,
        "description": "Rename Method public usesImplicitMatch() : boolean renamed to public isStructuralInterface() : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 123,
        "description": "Rename Attribute usesImplicitMatch : boolean to isStructuralInterface : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 1095,
        "description": "Extract Method protected treatThisTypesAsCovariant(other FunctionType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1095,
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/com/google/javascript/rhino/jstype/FunctionType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "JSType.java",
    "refactorings": [{
      "rightSideLineNumber": 1281,
      "description": "Add Parameter implicitImplCache : ImplCache in method package isSubtypeHelper(thisType JSType, thatType JSType, implicitImplCache ImplCache) : boolean from class com.google.javascript.rhino.jstype.JSType",
      "type": "Add Parameter"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/JSType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "NoObjectType.java",
    "refactorings": [{
      "rightSideLineNumber": 76,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoObjectType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/NoObjectType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "NoResolvedType.java",
    "refactorings": [{
      "rightSideLineNumber": 78,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoResolvedType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/NoResolvedType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "NoType.java",
    "refactorings": [{
      "rightSideLineNumber": 86,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/NoType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "ObjectType.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/rhino/jstype/ObjectType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "PrototypeObjectType.java",
    "refactorings": [{
      "rightSideLineNumber": 377,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.PrototypeObjectType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "ProxyObjectType.java",
    "refactorings": [{
      "rightSideLineNumber": 235,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.ProxyObjectType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/ProxyObjectType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "RecordType.java",
    "refactorings": [
      {
        "rightSideLineNumber": 213,
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.RecordType",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 241,
        "description": "Extract Method package isSubtype(typeA ObjectType, typeB RecordType, implicitImplCache ImplCache) : boolean extracted from package isSubtype(typeA ObjectType, typeB RecordType) : boolean in class com.google.javascript.rhino.jstype.RecordType",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/com/google/javascript/rhino/jstype/RecordType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "TemplatizedType.java",
    "refactorings": [{
      "rightSideLineNumber": 122,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.TemplatizedType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/TemplatizedType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "UnionType.java",
    "refactorings": [{
      "rightSideLineNumber": 467,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnionType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/UnionType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "UnknownType.java",
    "refactorings": [{
      "rightSideLineNumber": 103,
      "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnknownType",
      "type": "Extract Method"
    }],
    "filePath": "src/com/google/javascript/rhino/jstype/UnknownType.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "TypeCheckTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/TypeCheckTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "TypedScopeCreatorTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/TypedScopeCreatorTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "JSTypeTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/rhino/jstype/JSTypeTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "Codec.java",
    "refactorings": [],
    "filePath": "hazelcast-code-generator/src/main/java/com/hazelcast/annotation/Codec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "CodeGenerationUtils.java",
    "refactorings": [
      {
        "rightSideLineNumber": 44,
        "description": "Rename Method public getTypeInsideData(type String) : String renamed to public getArrayType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Rename Method public getTypeInsideCollection(type String) : String renamed to public getGenericType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Rename Method public getKeyTypeInsideMap(type String) : String renamed to public getFirstGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 61,
        "description": "Rename Method public getValueTypeInsideMap(type String) : String renamed to public getSecondGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 23,
        "description": "Change Attribute Access Modifier private to public in attribute public BYTE_BIT_COUNT : int from class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "type": "Change Attribute Access Modifier"
      }
    ],
    "filePath": "hazelcast-code-generator/src/main/java/com/hazelcast/client/protocol/generator/CodeGenerationUtils.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "CodecCodeGenerator.java",
    "refactorings": [{
      "rightSideLineNumber": 177,
      "description": "Extract Method private createCodecModel(methodElement ExecutableElement, lang Lang) : CodecModel extracted from public generateCodec(methodElement ExecutableElement, lang Lang) : void in class com.hazelcast.client.protocol.generator.CodecCodeGenerator",
      "type": "Extract Method"
    }],
    "filePath": "hazelcast-code-generator/src/main/java/com/hazelcast/client/protocol/generator/CodecCodeGenerator.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "CodecModel.java",
    "refactorings": [],
    "filePath": "hazelcast-code-generator/src/main/java/com/hazelcast/client/protocol/generator/CodecModel.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Lang.java",
    "refactorings": [],
    "filePath": "hazelcast-code-generator/src/main/java/com/hazelcast/client/protocol/generator/Lang.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AddressCodec.java",
    "refactorings": [{
      "rightSideLineNumber": 27,
      "description": "Add Class Annotation @Codec(Address.class) in class com.hazelcast.client.impl.protocol.codec.AddressCodec",
      "type": "Add Class Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/AddressCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheEventDataCodec.java",
    "refactorings": [{
      "rightSideLineNumber": 28,
      "description": "Add Class Annotation @Codec(CacheEventData.class) in class com.hazelcast.client.impl.protocol.codec.CacheEventDataCodec",
      "type": "Add Class Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/CacheEventDataCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedObjectInfoCodec.java",
    "refactorings": [{
      "rightSideLineNumber": 24,
      "description": "Add Class Annotation @Codec(DistributedObjectInfo.class) in class com.hazelcast.client.impl.protocol.codec.DistributedObjectInfoCodec",
      "type": "Add Class Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/DistributedObjectInfoCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "EntryViewCodec.java",
    "refactorings": [
      {
        "rightSideLineNumber": 26,
        "description": "Add Class Annotation @Codec(SimpleEntryView.class) in class com.hazelcast.client.impl.protocol.codec.EntryViewCodec",
        "type": "Add Class Annotation"
      },
      {
        "rightSideLineNumber": 32,
        "description": "Change Return Type SimpleEntryView to SimpleEntryView<Data,Data> in method public decode(clientMessage ClientMessage) : SimpleEntryView<Data,Data> from class com.hazelcast.client.impl.protocol.codec.EntryViewCodec",
        "type": "Change Return Type"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/EntryViewCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "JobPartitionStateCodec.java",
    "refactorings": [{
      "rightSideLineNumber": 26,
      "description": "Add Class Annotation @Codec(JobPartitionState.class) in class com.hazelcast.client.impl.protocol.codec.JobPartitionStateCodec",
      "type": "Add Class Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/JobPartitionStateCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MemberAttributeChangeCodec.java",
    "refactorings": [{
      "rightSideLineNumber": 28,
      "description": "Add Class Annotation @Codec(MemberAttributeChange.class) in class com.hazelcast.client.impl.protocol.codec.MemberAttributeChangeCodec",
      "type": "Add Class Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/MemberAttributeChangeCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MemberCodec.java",
    "refactorings": [{
      "rightSideLineNumber": 30,
      "description": "Add Class Annotation @Codec(Member.class) in class com.hazelcast.client.impl.protocol.codec.MemberCodec",
      "type": "Add Class Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/MemberCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "XIDCodec.java",
    "refactorings": [{
      "rightSideLineNumber": 27,
      "description": "Add Class Annotation @Codec(Xid.class) in class com.hazelcast.client.impl.protocol.codec.XIDCodec",
      "type": "Add Class Annotation"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/codec/XIDCodec.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ExceptionResultParameters.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ExceptionResultParameters.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ParameterUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 28,
        "description": "Rename Method public calculateStringDataSize(string String) : int renamed to public calculateDataSize(string String) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 36,
        "description": "Rename Method public calculateByteArrayDataSize(bytes byte[]) : int renamed to public calculateDataSize(bytes byte[]) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Rename Parameter key : Data to data : Data in method public calculateDataSize(data Data) : int from class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/util/ParameterUtil.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "GeneratorTest.java",
    "refactorings": [],
    "filePath": "hazelcast-code-generator/src/test/java/com/hazelcast/codegenerator/GeneratorTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "ClientMessageTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/client/protocol/ClientMessageTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractJoiner.java",
    "refactorings": [
      {
        "rightSideLineNumber": 176,
        "description": "Extract Variable clusterService : ClusterServiceImpl in method package shouldMerge(joinMessage JoinMessage) : boolean from class com.hazelcast.cluster.impl.AbstractJoiner",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 188,
        "description": "Rename Parameter joinRequest : JoinMessage to joinMessage : JoinMessage in method package shouldMerge(joinMessage JoinMessage) : boolean from class com.hazelcast.cluster.impl.AbstractJoiner",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/AbstractJoiner.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusterServiceImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 778,
        "description": "Rename Method private isJoinRequestFromAnExistingMember(joinRequest JoinRequest, connection Connection) : boolean renamed to private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 380,
        "description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterMaster(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 429,
        "description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterSlave(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 1139,
        "description": "Extract Method public onHeartbeat(member MemberImpl) : void extracted from public connectionAdded(connection Connection) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 515,
        "description": "Extract Variable now : long in method private resetMemberMasterConfirmations() : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 511,
        "description": "Remove Variable Modifier final in variable memberList : Collection<MemberImpl> in method private resetMemberMasterConfirmations() : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 910,
        "description": "Add Parameter Modifier final in parameter newTargetAddress : Address in method public merge(newTargetAddress Address) : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 490,
        "description": "Change Method Access Modifier private to public in method public sendMasterConfirmation() : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 627,
        "description": "Add Parameter connection : Connection in method public answerMasterQuestion(joinMessage JoinMessage, connection Connection) : void from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 785,
        "description": "Change Parameter Type joinRequest : JoinRequest to joinMessage : JoinMessage in method private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 785,
        "description": "Rename Parameter joinRequest : JoinRequest to joinMessage : JoinMessage in method private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean from class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/ClusterServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "JoinMessage.java",
    "refactorings": [
      {
        "rightSideLineNumber": 113,
        "description": "Replace Attribute With Variable memberCount : int to memberCount : int in method public writeData(out ObjectDataOutput) : void from class com.hazelcast.cluster.impl.JoinMessage",
        "type": "Replace Attribute With Variable"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Change Parameter Type memberCount : int to memberAddresses : Collection<Address> in method public JoinMessage(packetVersion byte, buildNumber int, address Address, uuid String, configCheck ConfigCheck, memberAddresses Collection<Address>) from class com.hazelcast.cluster.impl.JoinMessage",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Rename Parameter memberCount : int to memberAddresses : Collection<Address> in method public JoinMessage(packetVersion byte, buildNumber int, address Address, uuid String, configCheck ConfigCheck, memberAddresses Collection<Address>) from class com.hazelcast.cluster.impl.JoinMessage",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 36,
        "description": "Rename Attribute memberCount : int to memberAddresses : Collection<Address> in class com.hazelcast.cluster.impl.JoinMessage",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 36,
        "description": "Change Attribute Type memberCount : int to memberAddresses : Collection<Address> in class com.hazelcast.cluster.impl.JoinMessage",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/JoinMessage.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "JoinRequest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 38,
        "description": "Remove Parameter memberCount : int in method public JoinRequest(packetVersion byte, buildNumber int, address Address, uuid String, config ConfigCheck, credentials Credentials, memberCount int, tryCount int, attributes Map<String,Object>) from class com.hazelcast.cluster.impl.JoinRequest",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 38,
        "description": "Remove Parameter tryCount : int in method public JoinRequest(packetVersion byte, buildNumber int, address Address, uuid String, config ConfigCheck, credentials Credentials, memberCount int, tryCount int, attributes Map<String,Object>) from class com.hazelcast.cluster.impl.JoinRequest",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/JoinRequest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MulticastJoiner.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/MulticastJoiner.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeMulticastListener.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/NodeMulticastListener.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpIpJoiner.java",
    "refactorings": [
      {
        "rightSideLineNumber": 509,
        "description": "Change Variable Type response : JoinRequest to response : JoinMessage in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 492,
        "description": "Remove Variable Modifier final in variable response : JoinRequest in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 507,
        "description": "Rename Variable colPossibleAddresses : Collection<Address> to possibleAddresses : Collection<Address> in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 507,
        "description": "Rename Variable possibleAddress : Address to address : Address in method public searchForOtherClusters() : void from class com.hazelcast.cluster.impl.TcpIpJoiner",
        "type": "Rename Variable"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/TcpIpJoiner.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "HeartbeatOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/operations/HeartbeatOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "JoinCheckOperation.java",
    "refactorings": [
      {
        "rightSideLineNumber": 34,
        "description": "Change Attribute Type response : JoinRequest to response : JoinMessage in class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Remove Variable Modifier final in variable service : ClusterServiceImpl in method public run() : void from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Remove Variable Modifier final in variable nodeEngine : NodeEngineImpl in method public run() : void from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Remove Variable Modifier final in variable node : Node in method public run() : void from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Change Parameter Type joinRequest : JoinRequest to request : JoinMessage in method public JoinCheckOperation(request JoinMessage) from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 41,
        "description": "Remove Parameter Modifier final in parameter joinRequest : JoinRequest in method public JoinCheckOperation(joinRequest JoinRequest) from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Rename Parameter joinRequest : JoinRequest to request : JoinMessage in method public JoinCheckOperation(request JoinMessage) from class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Rename Attribute joinRequest : JoinRequest to request : JoinMessage in class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Change Attribute Type joinRequest : JoinRequest to request : JoinMessage in class com.hazelcast.cluster.impl.operations.JoinCheckOperation",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/operations/JoinCheckOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MasterConfirmationOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/operations/MasterConfirmationOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MasterDiscoveryOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/operations/MasterDiscoveryOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MemberRemoveOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/operations/MemberRemoveOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MergeClustersOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/operations/MergeClustersOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "PrepareMergeOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cluster/impl/operations/PrepareMergeOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "GroupProperties.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/instance/GroupProperties.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MemberImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/instance/MemberImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Node.java",
    "refactorings": [{
      "rightSideLineNumber": 95,
      "description": "Change Attribute Type partitionService : InternalPartitionService to partitionService : InternalPartitionServiceImpl in class com.hazelcast.instance.Node",
      "type": "Change Attribute Type"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/instance/Node.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeIOService.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/nio/NodeIOService.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "PacketTransceiverImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/packettransceiver/impl/PacketTransceiverImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "TestClientRegistry.java",
    "refactorings": [],
    "filePath": "hazelcast-client-new/src/test/java/com/hazelcast/client/test/TestClientRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestClientRegistry.java",
    "refactorings": [],
    "filePath": "hazelcast-client/src/test/java/com/hazelcast/client/test/TestClientRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "SplitBrainHandlerTest.java",
    "refactorings": [{
      "rightSideLineNumber": 83,
      "description": "Rename Method public testTcpIp__ClusterMerge() : void renamed to public testTcpIp_ClusterMerge() : void in class com.hazelcast.cluster.SplitBrainHandlerTest",
      "type": "Rename Method"
    }],
    "filePath": "hazelcast/src/test/java/com/hazelcast/cluster/SplitBrainHandlerTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "InvocationNetworkSplitTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 189,
        "description": "Extract Method private createConfig() : Config extracted from private testWaitingInvocations_whenNodeSplitFromCluster(splitAction SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 189,
        "description": "Extract Method private createConfig() : Config extracted from private testWaitNotifyService_whenNodeSplitFromCluster(action SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/InvocationNetworkSplitTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "TestNodeRegistry.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/test/TestNodeRegistry.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "MethodPermissionsMergingProcessor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 146,
        "description": "Extract Method private handleMethodPermissions(componentDescription EJBComponentDescription, methodPermissions MethodPermissionsMetaData) : void extracted from protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class<?>, componentDescription EJBComponentDescription) : void in class org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 134,
        "description": "Extract Method private handleExcludeMethods(componentDescription EJBComponentDescription, excludeList ExcludeListMetaData) : void extracted from protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class<?>, componentDescription EJBComponentDescription) : void in class org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor",
        "type": "Extract Method"
      }
    ],
    "filePath": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/merging/MethodPermissionsMergingProcessor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/d7675fb0b19d3d22978e79954f441eeefd74a3b2",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BeanOne.java",
    "refactorings": [],
    "filePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/descriptor/ejbnamewildcard/BeanOne.java",
    "commit": "https://github.com/wildfly/wildfly/commit/d7675fb0b19d3d22978e79954f441eeefd74a3b2",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "BeanTwo.java",
    "refactorings": [],
    "filePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/descriptor/ejbnamewildcard/BeanTwo.java",
    "commit": "https://github.com/wildfly/wildfly/commit/d7675fb0b19d3d22978e79954f441eeefd74a3b2",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "EJBNameWildcardTestCase.java",
    "refactorings": [],
    "filePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/descriptor/ejbnamewildcard/EJBNameWildcardTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/d7675fb0b19d3d22978e79954f441eeefd74a3b2",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "FavoritesListFragment.java",
    "refactorings": [{
      "rightSideLineNumber": 135,
      "description": "Extract Method public showItemPopupOptionsMenu(point FavouritePoint, activity Activity, view View) : void extracted from public onListItemClick(l ListView, v View, position int, id long) : void in class net.osmand.plus.activities.FavoritesListFragment",
      "type": "Extract Method"
    }],
    "filePath": "OsmAnd/src/net/osmand/plus/activities/FavoritesListFragment.java",
    "commit": "https://github.com/osmandapp/Osmand/commit/e95aa8ab32a0334b9c941799060fd601297d05e4",
    "repository": "https://github.com/osmandapp/Osmand.git",
    "fileType": "main"
  },
  {
    "fileName": "FavoriteDialogs.java",
    "refactorings": [],
    "filePath": "OsmAnd/src/net/osmand/plus/dialogs/FavoriteDialogs.java",
    "commit": "https://github.com/osmandapp/Osmand/commit/e95aa8ab32a0334b9c941799060fd601297d05e4",
    "repository": "https://github.com/osmandapp/Osmand.git",
    "fileType": "main"
  },
  {
    "fileName": "MapRouteInfoControl.java",
    "refactorings": [],
    "filePath": "OsmAnd/src/net/osmand/plus/views/controls/MapRouteInfoControl.java",
    "commit": "https://github.com/osmandapp/Osmand/commit/e95aa8ab32a0334b9c941799060fd601297d05e4",
    "repository": "https://github.com/osmandapp/Osmand.git",
    "fileType": "main"
  },
  {
    "fileName": "FavoritesTreeFragment.java",
    "refactorings": [
      {
        "rightSideLineNumber": 186,
        "description": "Extract Method public showItemPopupOptionsMenu(point FavouritePoint, view View) : void extracted from public onChildClick(parent ExpandableListView, v View, groupPosition int, childPosition int, id long) : boolean in class net.osmand.plus.activities.FavoritesTreeFragment",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 878,
        "description": "Add Parameter Modifier final in parameter view : View in method public showItemPopupOptionsMenu(point FavouritePoint, view View) : void from class net.osmand.plus.activities.FavoritesTreeFragment",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 881,
        "description": "Rename Parameter v : View to view : View in method public showItemPopupOptionsMenu(point FavouritePoint, view View) : void from class net.osmand.plus.activities.FavoritesTreeFragment",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "OsmAnd/src/net/osmand/plus/activities/FavoritesTreeFragment.java",
    "commit": "https://github.com/osmandapp/Osmand/commit/e95aa8ab32a0334b9c941799060fd601297d05e4",
    "repository": "https://github.com/osmandapp/Osmand.git",
    "fileType": "test"
  },
  {
    "fileName": "OdpsOutputVisitor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 695,
        "description": "Extract Method protected printJoinType(joinType JoinType) : void extracted from public visit(x SQLJoinTableSource) : boolean in class com.alibaba.druid.sql.dialect.odps.visitor.OdpsOutputVisitor",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 284,
        "description": "Extract Variable preSelectItem : SQLSelectItem in method protected printSelectList(selectList List<SQLSelectItem>) : void from class com.alibaba.druid.sql.dialect.odps.visitor.OdpsOutputVisitor",
        "type": "Extract Variable"
      }
    ],
    "filePath": "src/main/java/com/alibaba/druid/sql/dialect/odps/visitor/OdpsOutputVisitor.java",
    "commit": "https://github.com/alibaba/druid/commit/87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "repository": "https://github.com/alibaba/druid.git",
    "fileType": "main"
  },
  {
    "fileName": "SQLASTOutputVisitor.java",
    "refactorings": [{
      "rightSideLineNumber": 1286,
      "description": "Extract Method protected printJoinType(joinType JoinType) : void extracted from public visit(x SQLJoinTableSource) : boolean in class com.alibaba.druid.sql.visitor.SQLASTOutputVisitor",
      "type": "Extract Method"
    }],
    "filePath": "src/main/java/com/alibaba/druid/sql/visitor/SQLASTOutputVisitor.java",
    "commit": "https://github.com/alibaba/druid/commit/87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "repository": "https://github.com/alibaba/druid.git",
    "fileType": "main"
  },
  {
    "fileName": "OdpsFormatCommentTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/alibaba/druid/bvt/sql/odps/OdpsFormatCommentTest.java",
    "commit": "https://github.com/alibaba/druid/commit/87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "repository": "https://github.com/alibaba/druid.git",
    "fileType": "test"
  },
  {
    "fileName": "OdpsFormatCommentTest20.java",
    "refactorings": [],
    "filePath": "src/test/java/com/alibaba/druid/bvt/sql/odps/OdpsFormatCommentTest20.java",
    "commit": "https://github.com/alibaba/druid/commit/87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "repository": "https://github.com/alibaba/druid.git",
    "fileType": "test"
  },
  {
    "fileName": "OdpsFormatCommentTest4.java",
    "refactorings": [],
    "filePath": "src/test/java/com/alibaba/druid/bvt/sql/odps/OdpsFormatCommentTest4.java",
    "commit": "https://github.com/alibaba/druid/commit/87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "repository": "https://github.com/alibaba/druid.git",
    "fileType": "test"
  },
  {
    "fileName": "OdpsSelectTest_mapjoin.java",
    "refactorings": [],
    "filePath": "src/test/java/com/alibaba/druid/bvt/sql/odps/OdpsSelectTest_mapjoin.java",
    "commit": "https://github.com/alibaba/druid/commit/87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "repository": "https://github.com/alibaba/druid.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxLink.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cxx/CxxLink.java",
    "commit": "https://github.com/facebook/buck/commit/6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxPreprocessAndCompile.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cxx/CxxPreprocessAndCompile.java",
    "commit": "https://github.com/facebook/buck/commit/6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxPreprocessAndCompileStep.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cxx/CxxPreprocessAndCompileStep.java",
    "commit": "https://github.com/facebook/buck/commit/6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "DebugPathSanitizer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 137,
        "description": "Inline Method public sanitize(workingDir Optional<Path>, contents String, expandPaths boolean) : String inlined to public sanitize(workingDir Optional<Path>, contents String) : String in class com.facebook.buck.cxx.DebugPathSanitizer",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Remove Parameter expandPaths : boolean in method public sanitize(workingDir Optional<Path>, expandPaths boolean) : Function<String,String> from class com.facebook.buck.cxx.DebugPathSanitizer",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "src/com/facebook/buck/cxx/DebugPathSanitizer.java",
    "commit": "https://github.com/facebook/buck/commit/6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "DebugPathSanitizerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Rename Method public sanitizeWithoutAnyMatchesWithExpandPaths() : void renamed to public sanitizeWithoutAnyMatches() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 58,
        "description": "Rename Method public sanitizeProjectRootWithoutExpandPaths() : void renamed to public sanitizeProjectRoot() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Rename Method public sanitizeOtherDirectoriesWithoutExpandPaths() : void renamed to public sanitizeOtherDirectories() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 76,
        "description": "Rename Method public sanitizeDirectoriesThatArePrefixOfOtherDirectoriesWithoutExpandPaths() : void renamed to public sanitizeDirectoriesThatArePrefixOfOtherDirectories() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "type": "Rename Method"
      }
    ],
    "filePath": "test/com/facebook/buck/cxx/DebugPathSanitizerTest.java",
    "commit": "https://github.com/facebook/buck/commit/6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AddressMessage.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Inline Method public getMessageSize() : int inlined to protected parse() : void in class org.bitcoinj.core.AddressMessage",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.AddressMessage",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/AddressMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "AlertMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 64,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.AlertMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/AlertMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "BitcoinSerializer.java",
    "refactorings": [{
      "rightSideLineNumber": 76,
      "description": "Remove Parameter parseLazy : boolean in method public BitcoinSerializer(params NetworkParameters, parseLazy boolean, parseRetain boolean) from class org.bitcoinj.core.BitcoinSerializer",
      "type": "Remove Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/BitcoinSerializer.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Block.java",
    "refactorings": [
      {
        "rightSideLineNumber": 236,
        "description": "Inline Method protected parseHeader() : void inlined to protected parse() : void in class org.bitcoinj.core.Block",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 239,
        "description": "Inline Method protected parseTransactions() : void inlined to protected parse() : void in class org.bitcoinj.core.Block",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 225,
        "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.Block",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/Block.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "BloomFilter.java",
    "refactorings": [{
      "rightSideLineNumber": 133,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.BloomFilter",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/BloomFilter.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "DummySerializer.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/DummySerializer.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 47,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.EmptyMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/EmptyMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "FilteredBlock.java",
    "refactorings": [{
      "rightSideLineNumber": 60,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.FilteredBlock",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/FilteredBlock.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "GetBlocksMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 46,
      "description": "Change Method Access Modifier public to protected in method protected parse() : void from class org.bitcoinj.core.GetBlocksMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/GetBlocksMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "GetUTXOsMessage.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/GetUTXOsMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "HeadersMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 65,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.HeadersMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/HeadersMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "ListMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 70,
      "description": "Change Method Access Modifier public to protected in method protected parse() : void from class org.bitcoinj.core.ListMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/ListMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "MemoryPoolMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 31,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.MemoryPoolMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/MemoryPoolMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Message.java",
    "refactorings": [
      {
        "rightSideLineNumber": 277,
        "description": "Add Method Modifier final in method public getMessageSize() : int from class org.bitcoinj.core.Message",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Change Method Access Modifier package to protected in method protected Message(params NetworkParameters) from class org.bitcoinj.core.Message",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Change Method Access Modifier package to protected in method protected Message(params NetworkParameters, payload byte[], offset int, protocolVersion int) from class org.bitcoinj.core.Message",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Change Method Access Modifier package to protected in method protected Message(params NetworkParameters, payload byte[], offset int, protocolVersion int, serializer MessageSerializer, length int) from class org.bitcoinj.core.Message",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Change Method Access Modifier package to protected in method protected abstract parse() : void from class org.bitcoinj.core.Message",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/Message.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageSerializer.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/MessageSerializer.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "NetworkParameters.java",
    "refactorings": [{
      "rightSideLineNumber": 449,
      "description": "Remove Parameter parseLazy : boolean in method public abstract getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer from class org.bitcoinj.core.NetworkParameters",
      "type": "Remove Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/NetworkParameters.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "PartialMerkleTree.java",
    "refactorings": [{
      "rightSideLineNumber": 112,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.PartialMerkleTree",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/PartialMerkleTree.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "PeerAddress.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/PeerAddress.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Ping.java",
    "refactorings": [{
      "rightSideLineNumber": 54,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.Ping",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/Ping.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Pong.java",
    "refactorings": [{
      "rightSideLineNumber": 41,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.Pong",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/Pong.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "RejectMessage.java",
    "refactorings": [
      {
        "rightSideLineNumber": 90,
        "description": "Inline Method protected parseLite() : void inlined to protected parse() : void in class org.bitcoinj.core.RejectMessage",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Change Method Access Modifier public to protected in method protected parse() : void from class org.bitcoinj.core.RejectMessage",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/RejectMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Transaction.java",
    "refactorings": [{
      "rightSideLineNumber": 513,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.Transaction",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/Transaction.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionInput.java",
    "refactorings": [{
      "rightSideLineNumber": 127,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.TransactionInput",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/TransactionInput.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionOutPoint.java",
    "refactorings": [{
      "rightSideLineNumber": 91,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.TransactionOutPoint",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/TransactionOutPoint.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionOutput.java",
    "refactorings": [{
      "rightSideLineNumber": 155,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.TransactionOutput",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/TransactionOutput.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "UTXOsMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 93,
      "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.UTXOsMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/UTXOsMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "VersionMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 116,
      "description": "Change Method Access Modifier public to protected in method protected parse() : void from class org.bitcoinj.core.VersionMessage",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/VersionMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractBitcoinNetParams.java",
    "refactorings": [{
      "rightSideLineNumber": 139,
      "description": "Remove Parameter parseLazy : boolean in method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer from class org.bitcoinj.params.AbstractBitcoinNetParams",
      "type": "Remove Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/params/AbstractBitcoinNetParams.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "BitcoinSerializerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 269,
        "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.BitcoinSerializerTest.UnknownMessage",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 80,
        "description": "Inline Method private testCachedParsing(lazy boolean) : void inlined to public testCachedParsing() : void in class org.bitcoinj.core.BitcoinSerializerTest",
        "type": "Inline Method"
      }
    ],
    "filePath": "core/src/test/java/org/bitcoinj/core/BitcoinSerializerTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "FullBlockTestGenerator.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/FullBlockTestGenerator.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "MessageTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 39,
        "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.MessageTest.VarStrMessage",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 59,
        "description": "Change Method Access Modifier package to protected in method protected parse() : void from class org.bitcoinj.core.MessageTest.VarBytesMessage",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "core/src/test/java/org/bitcoinj/core/MessageTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "ParseByteCacheTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/ParseByteCacheTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractBlockChain.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/AbstractBlockChain.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "AddressMessage.java",
    "refactorings": [
      {
        "rightSideLineNumber": 19,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method package AddressMessage(params NetworkParameters, payload byte[], offset int, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.AddressMessage",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 35,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method package AddressMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.AddressMessage",
        "type": "Merge Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/AddressMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "BitcoinSerializer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 258,
        "description": "Encapsulate Attribute private params : NetworkParameters from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Add Attribute Modifier final in attribute private params : NetworkParameters from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Add Attribute Modifier final in attribute private parseLazy : boolean from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 50,
        "description": "Add Attribute Modifier final in attribute private parseRetain : boolean from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Add Attribute Modifier final in attribute private names : Map<Class<? extends Message>,String> from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 228,
        "description": "Extract Method public makeAddressMessage(payloadBytes byte[], length int) : AddressMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 238,
        "description": "Extract Method public makeAlertMessage(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 216,
        "description": "Extract Method public makeBlock(payloadBytes byte[], length int) : Block extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 240,
        "description": "Extract Method public makeBloomFilter(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 218,
        "description": "Extract Method public makeFilteredBlock(payloadBytes byte[]) : FilteredBlock extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Extract Method public makeInventoryMessage(payloadBytes byte[], length int) : InventoryMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 226,
        "description": "Extract Method public makeTransaction(payloadBytes byte[], offset int, length int, hash byte[]) : Transaction extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Method Annotation @Override in method public serialize(name String, message byte[], out OutputStream) : void from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Method Annotation @Override in method public serialize(message Message, out OutputStream) : void from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 143,
        "description": "Add Method Annotation @Override in method public deserialize(in ByteBuffer) : Message from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 168,
        "description": "Add Method Annotation @Override in method public deserializeHeader(in ByteBuffer) : BitcoinPacketHeader from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Add Method Annotation @Override in method public deserializePayload(header BitcoinPacketHeader, in ByteBuffer) : Message from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 351,
        "description": "Add Method Annotation @Override in method public seekPastMagicBytes(in ByteBuffer) : void from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 373,
        "description": "Add Method Annotation @Override in method public isParseLazyMode() : boolean from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 381,
        "description": "Add Method Annotation @Override in method public isParseRetainMode() : boolean from class org.bitcoinj.core.BitcoinSerializer",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/BitcoinSerializer.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Block.java",
    "refactorings": [
      {
        "rightSideLineNumber": 90,
        "description": "Change Attribute Access Modifier private to protected in attribute protected headerParsed : boolean from class org.bitcoinj.core.Block",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 91,
        "description": "Change Attribute Access Modifier private to protected in attribute protected transactionsParsed : boolean from class org.bitcoinj.core.Block",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 93,
        "description": "Change Attribute Access Modifier private to protected in attribute protected headerBytesValid : boolean from class org.bitcoinj.core.Block",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Change Attribute Access Modifier private to protected in attribute protected transactionBytesValid : boolean from class org.bitcoinj.core.Block",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Change Attribute Access Modifier private to protected in attribute protected optimalEncodingMessageSize : int from class org.bitcoinj.core.Block",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 211,
        "description": "Extract Method protected parseTransactions(transactionsOffset int) : void extracted from protected parseTransactions() : void in class org.bitcoinj.core.Block",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 113,
        "description": "Add Method Annotation @Deprecated in method public Block(params NetworkParameters, payloadBytes byte[]) from class org.bitcoinj.core.Block",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public Block(params NetworkParameters, payloadBytes byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.Block",
        "type": "Merge Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/Block.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "ChildMessage.java",
    "refactorings": [
      {
        "rightSideLineNumber": 28,
        "description": "Add Method Annotation @Deprecated in method protected ChildMessage() from class org.bitcoinj.core.ChildMessage",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public ChildMessage(params NetworkParameters, payload byte[], offset int, protocolVersion int, parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.ChildMessage",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public ChildMessage(params NetworkParameters, payload byte[], offset int, parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.ChildMessage",
        "type": "Merge Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/ChildMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "DummySerializer.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/DummySerializer.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "FilteredBlock.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/FilteredBlock.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "GetDataMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 29,
      "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public GetDataMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.GetDataMessage",
      "type": "Merge Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/GetDataMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "HeadersMessage.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/HeadersMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "InventoryMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public InventoryMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.InventoryMessage",
      "type": "Merge Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/InventoryMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "ListMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 40,
      "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public ListMessage(params NetworkParameters, payload byte[], serializer MessageSerializer, length int) from class org.bitcoinj.core.ListMessage",
      "type": "Merge Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/ListMessage.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Message.java",
    "refactorings": [
      {
        "rightSideLineNumber": 78,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method package Message(params NetworkParameters, payload byte[], offset int, protocolVersion int, serializer MessageSerializer, length int) from class org.bitcoinj.core.Message",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 135,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method package Message(params NetworkParameters, payload byte[], offset int, serializer MessageSerializer, length int) from class org.bitcoinj.core.Message",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Merge Attribute [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in class org.bitcoinj.core.Message",
        "type": "Merge Attribute"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/Message.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageSerializer.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/MessageSerializer.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "NetworkParameters.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/NetworkParameters.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "PeerAddress.java",
    "refactorings": [{
      "rightSideLineNumber": 55,
      "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public PeerAddress(params NetworkParameters, payload byte[], offset int, protocolVersion int, parent Message, serializer MessageSerializer) from class org.bitcoinj.core.PeerAddress",
      "type": "Merge Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/PeerAddress.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "PeerSocketHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 45,
      "description": "Change Attribute Type serializer : BitcoinSerializer to serializer : MessageSerializer in class org.bitcoinj.core.PeerSocketHandler",
      "type": "Change Attribute Type"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/PeerSocketHandler.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "StoredBlock.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/core/StoredBlock.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Transaction.java",
    "refactorings": [
      {
        "rightSideLineNumber": 199,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public Transaction(params NetworkParameters, payload byte[], offset int, parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.Transaction",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 217,
        "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to setSerializer : MessageSerializer in method public Transaction(params NetworkParameters, payload byte[], parent Message, setSerializer MessageSerializer, length int) from class org.bitcoinj.core.Transaction",
        "type": "Merge Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/bitcoinj/core/Transaction.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionInput.java",
    "refactorings": [{
      "rightSideLineNumber": 114,
      "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public TransactionInput(params NetworkParameters, parentTransaction Transaction, payload byte[], offset int, serializer MessageSerializer) from class org.bitcoinj.core.TransactionInput",
      "type": "Merge Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/TransactionInput.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionOutPoint.java",
    "refactorings": [{
      "rightSideLineNumber": 79,
      "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public TransactionOutPoint(params NetworkParameters, payload byte[], offset int, parent Message, serializer MessageSerializer) from class org.bitcoinj.core.TransactionOutPoint",
      "type": "Merge Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/TransactionOutPoint.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionOutput.java",
    "refactorings": [{
      "rightSideLineNumber": 66,
      "description": "Merge Parameter [parseLazy : boolean, parseRetain : boolean] to serializer : MessageSerializer in method public TransactionOutput(params NetworkParameters, parent Transaction, payload byte[], offset int, serializer MessageSerializer) from class org.bitcoinj.core.TransactionOutput",
      "type": "Merge Parameter"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/core/TransactionOutput.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractBitcoinNetParams.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/params/AbstractBitcoinNetParams.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "PaymentChannelClient.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/protocols/channels/PaymentChannelClient.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "PaymentChannelServer.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/protocols/channels/PaymentChannelServer.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "StoredPaymentChannelClientStates.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/protocols/channels/StoredPaymentChannelClientStates.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "StoredPaymentChannelServerStates.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/protocols/channels/StoredPaymentChannelServerStates.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "PaymentProtocol.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/protocols/payments/PaymentProtocol.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "Script.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/script/Script.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseFullPrunedBlockStore.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/store/DatabaseFullPrunedBlockStore.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "BlockFileLoader.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/bitcoinj/utils/BlockFileLoader.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "main"
  },
  {
    "fileName": "FakeTxBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 122,
      "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public roundTripTransaction(params NetworkParameters, tx Transaction) : Transaction from class org.bitcoinj.testing.FakeTxBuilder",
      "type": "Change Variable Type"
    }],
    "filePath": "core/src/main/java/org/bitcoinj/testing/FakeTxBuilder.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "BitcoinSerializerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 66,
        "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testAddr() : void from class org.bitcoinj.core.BitcoinSerializerTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 90,
        "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testLazyParsing() : void from class org.bitcoinj.core.BitcoinSerializerTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method private testCachedParsing(lazy boolean) : void from class org.bitcoinj.core.BitcoinSerializerTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 185,
        "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testHeaders1() : void from class org.bitcoinj.core.BitcoinSerializerTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 240,
        "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testHeaders2() : void from class org.bitcoinj.core.BitcoinSerializerTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 286,
        "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public testSerializeUnknownMessage() : void from class org.bitcoinj.core.BitcoinSerializerTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "core/src/test/java/org/bitcoinj/core/BitcoinSerializerTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "BlockTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/BlockTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "ChainSplitTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/ChainSplitTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "CoinbaseBlockTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/CoinbaseBlockTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "FilteredBlockAndPartialMerkleTreeTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/FilteredBlockAndPartialMerkleTreeTests.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "FullBlockTestGenerator.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/FullBlockTestGenerator.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "LazyParseByteCacheTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 119,
        "description": "Change Variable Type bs : BitcoinSerializer to bs : MessageSerializer in method public setUp() : void from class org.bitcoinj.core.LazyParseByteCacheTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 404,
        "description": "Change Variable Type bsRef : BitcoinSerializer to bsRef : MessageSerializer in method public testBlock(blockBytes byte[], isChild boolean, lazy boolean, retain boolean) : void from class org.bitcoinj.core.LazyParseByteCacheTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 474,
        "description": "Change Variable Type bsRef : BitcoinSerializer to bsRef : MessageSerializer in method public testTransaction(params NetworkParameters, txBytes byte[], isChild boolean, lazy boolean, retain boolean) : void from class org.bitcoinj.core.LazyParseByteCacheTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 492,
        "description": "Change Parameter Type bs : BitcoinSerializer to bs : MessageSerializer in method private serDeser(bs MessageSerializer, message Message, sourceBytes byte[], containedBytes byte[], containingBytes byte[]) : void from class org.bitcoinj.core.LazyParseByteCacheTest",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "core/src/test/java/org/bitcoinj/core/LazyParseByteCacheTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "PeerTest.java",
    "refactorings": [{
      "rightSideLineNumber": 869,
      "description": "Change Variable Type serializer : BitcoinSerializer to serializer : MessageSerializer in method public badMessage() : void from class org.bitcoinj.core.PeerTest",
      "type": "Change Variable Type"
    }],
    "filePath": "core/src/test/java/org/bitcoinj/core/PeerTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "TxConfidenceTableTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/TxConfidenceTableTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "WalletTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/core/WalletTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "ScriptTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/script/ScriptTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "WalletProtobufSerializerTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/bitcoinj/store/WalletProtobufSerializerTest.java",
    "commit": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "fileType": "test"
  },
  {
    "fileName": "DeploymentOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/DeploymentOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/VertxOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "DatagramSocketOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/datagram/DatagramSocketOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "DeliveryOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/eventbus/DeliveryOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "OpenOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/file/OpenOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpClientOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/http/HttpClientOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpServerOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/http/HttpServerOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricsOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/metrics/MetricsOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientOptionsBaseHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/ClientOptionsBaseHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "JksOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/JksOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "KeyCertOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/KeyCertOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "NetClientOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/NetClientOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "NetServerOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/NetServerOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "NetworkOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/NetworkOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "PemKeyCertOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/PemKeyCertOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "PemTrustOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/PemTrustOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "PfxOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/PfxOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "TCPSSLOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/TCPSSLOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "TrustOptionsHelper.java",
    "refactorings": [],
    "filePath": "src/main/generated/io/vertx/core/net/TrustOptionsHelper.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "DeploymentOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/DeploymentOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/VertxOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "DatagramSocketOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/datagram/DatagramSocketOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "OpenOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 265,
        "description": "Rename Method public isDSync() : boolean renamed to public isDsync() : boolean in class io.vertx.core.file.OpenOptions",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 274,
        "description": "Rename Method public setDSync(dsync boolean) : OpenOptions renamed to public setDsync(dsync boolean) : OpenOptions in class io.vertx.core.file.OpenOptions",
        "type": "Rename Method"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/file/OpenOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "AsyncFileImpl.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/file/impl/AsyncFileImpl.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/file/package-info.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpClientOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 91,
        "description": "Extract Method private init() : void extracted from public HttpClientOptions() in class io.vertx.core.http.HttpClientOptions",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 118,
        "description": "Extract Method private init() : void extracted from public HttpClientOptions(json JsonObject) in class io.vertx.core.http.HttpClientOptions",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/http/HttpClientOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpServerOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 258,
        "description": "Rename Method public setWebsocketSubProtocol(subProtocols String) : HttpServerOptions renamed to public setWebsocketSubProtocols(subProtocols String) : HttpServerOptions in class io.vertx.core.http.HttpServerOptions",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Extract Method private init() : void extracted from public HttpServerOptions() in class io.vertx.core.http.HttpServerOptions",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 86,
        "description": "Extract Method private init() : void extracted from public HttpServerOptions(json JsonObject) in class io.vertx.core.http.HttpServerOptions",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/http/HttpServerOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "Json.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/json/Json.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricsOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/metrics/MetricsOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientOptionsBase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 22,
        "description": "Add Class Annotation @DataObject in class io.vertx.core.net.ClientOptionsBase",
        "type": "Add Class Annotation"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Extract Method private init() : void extracted from public ClientOptionsBase() in class io.vertx.core.net.ClientOptionsBase",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Extract Method private init() : void extracted from public ClientOptionsBase(json JsonObject) in class io.vertx.core.net.ClientOptionsBase",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/net/ClientOptionsBase.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "JksOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/JksOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "NetClientOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Extract Method private init() : void extracted from public NetClientOptions() in class io.vertx.core.net.NetClientOptions",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Extract Method private init() : void extracted from public NetClientOptions(json JsonObject) in class io.vertx.core.net.NetClientOptions",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/net/NetClientOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "NetServerOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 63,
        "description": "Extract Method private init() : void extracted from public NetServerOptions() in class io.vertx.core.net.NetServerOptions",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 86,
        "description": "Extract Method private init() : void extracted from public NetServerOptions(json JsonObject) in class io.vertx.core.net.NetServerOptions",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/net/NetServerOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "NetworkOptions.java",
    "refactorings": [{
      "rightSideLineNumber": 25,
      "description": "Add Class Annotation @DataObject in class io.vertx.core.net.NetworkOptions",
      "type": "Add Class Annotation"
    }],
    "filePath": "src/main/java/io/vertx/core/net/NetworkOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "PemKeyCertOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/PemKeyCertOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "PemTrustOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/PemTrustOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "PfxOptions.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/PfxOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "TCPSSLOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 30,
        "description": "Add Class Annotation @DataObject in class io.vertx.core.net.TCPSSLOptions",
        "type": "Add Class Annotation"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Extract Method private init() : void extracted from public TCPSSLOptions() in class io.vertx.core.net.TCPSSLOptions",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 115,
        "description": "Extract Method private init() : void extracted from public TCPSSLOptions(json JsonObject) in class io.vertx.core.net.TCPSSLOptions",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/net/TCPSSLOptions.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "AggregatedDataObject.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/codegen/AggregatedDataObject.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "TestDataObject.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/codegen/TestDataObject.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/codegen/package-info.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "DataObjectTest.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/core/DataObjectTest.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "FileSystemTest.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/core/FileSystemTest.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "HttpTest.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/core/HttpTest.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "NetTest.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/core/NetTest.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "TestUtils.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/core/TestUtils.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "WebsocketTest.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/core/WebsocketTest.java",
    "commit": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "CallbacksTest.java",
    "refactorings": [],
    "filePath": "hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/callbacks/CallbacksTest.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractExecutable.java",
    "refactorings": [],
    "filePath": "hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/instrument/cases/AbstractExecutable.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "Executable.java",
    "refactorings": [],
    "filePath": "hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/instrument/cases/Executable.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "TestLazyPropertyOnPreUpdateExecutable.java",
    "refactorings": [],
    "filePath": "hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/instrument/cases/TestLazyPropertyOnPreUpdateExecutable.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "EntityWithLazyProperty.java",
    "refactorings": [],
    "filePath": "hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/instrument/domain/EntityWithLazyProperty.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractTransformingClassLoaderInstrumentTestCase.java",
    "refactorings": [],
    "filePath": "hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/instrument/runtime/AbstractTransformingClassLoaderInstrumentTestCase.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "JavassistInstrumentationTest.java",
    "refactorings": [],
    "filePath": "hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/instrument/runtime/JavassistInstrumentationTest.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "JobTaskMoveAssignment.java",
    "refactorings": [{
      "rightSideLineNumber": 31,
      "description": "Add Parameter Annotation @Nullable in parameter targetUUID : String in method public JobTaskMoveAssignment(jobKey JobKey, sourceUUID String, targetUUID String, fromReplica boolean, delete boolean) from class com.addthis.hydra.job.JobTaskMoveAssignment",
      "type": "Add Parameter Annotation"
    }],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/JobTaskMoveAssignment.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "HostState.java",
    "refactorings": [{
      "rightSideLineNumber": 98,
      "description": "Add Parameter Annotation @Nullable in parameter jobKey : JobKey in method public hasLive(jobKey JobKey) : boolean from class com.addthis.hydra.job.mq.HostState",
      "type": "Add Parameter Annotation"
    }],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/mq/HostState.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "HostManager.java",
    "refactorings": [{
      "rightSideLineNumber": 91,
      "description": "Add Parameter Annotation @Nullable in parameter minionType : String in method public getLiveHosts(minionType String) : List<HostState> from class com.addthis.hydra.job.spawn.HostManager",
      "type": "Add Parameter Annotation"
    }],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/HostManager.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "Spawn.java",
    "refactorings": [
      {
        "rightSideLineNumber": 984,
        "description": "Add Parameter Annotation @Nullable in parameter assignments : List<JobTaskMoveAssignment> in method public executeReallocationAssignments(assignments List<JobTaskMoveAssignment>, limitToAvailableSlots boolean) : List<JobTaskMoveAssignment> from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 419,
        "description": "Change Method Access Modifier protected to public in method public loadSpawnQueue() : void from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 431,
        "description": "Add Method Annotation @VisibleForTesting in method public writeSpawnQueue() : void from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 431,
        "description": "Change Method Access Modifier protected to public in method public writeSpawnQueue() : void from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 1449,
        "description": "Change Method Access Modifier protected to public in method public replicateTask(task JobTask, targetHosts List<String>) : List<JobTaskReplica> from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 2911,
        "description": "Change Method Access Modifier protected to public in method public isNewTask(task JobTask) : boolean from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 2510,
        "description": "Change Parameter Type type : SpawnBalancer.RebalanceType to type : RebalanceType in method protected autobalance(type RebalanceType, weight RebalanceWeight) : void from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 2510,
        "description": "Change Parameter Type weight : SpawnBalancer.RebalanceWeight to weight : RebalanceWeight in method protected autobalance(type RebalanceType, weight RebalanceWeight) : void from class com.addthis.hydra.job.spawn.Spawn",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/Spawn.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "AutobalanceTask.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/AutobalanceTask.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "HostAndScore.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/HostAndScore.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "HostScore.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/HostScore.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "JobTaskItem.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/JobTaskItem.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "JobTaskItemByHostMap.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/JobTaskItemByHostMap.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "MoveAssignmentList.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/MoveAssignmentList.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "RebalanceType.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/RebalanceType.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "RebalanceWeight.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/RebalanceWeight.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "SpawnBalancer.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/SpawnBalancer.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "SpawnBalancerConfig.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/SpawnBalancerConfig.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "SpawnBalancerTaskSizer.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/SpawnBalancerTaskSizer.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemResource.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/web/resources/SystemResource.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "AggregateStatUpdaterTask.java",
    "refactorings": [],
    "filePath": "hydra-main/src/main/java/com/addthis/hydra/job/spawn/balancer/AggregateStatUpdaterTask.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "SpawnBalancerTest.java",
    "refactorings": [],
    "filePath": "hydra-main/src/test/java/com/addthis/hydra/job/spawn/balancer/SpawnBalancerTest.java",
    "commit": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractProxyServlet.java",
    "refactorings": [],
    "filePath": "jetty-proxy/src/main/java/org/eclipse/jetty/proxy/AbstractProxyServlet.java",
    "commit": "https://github.com/eclipse/jetty.project/commit/837d1a74bb7d694220644a2539c4440ce55462cf",
    "repository": "https://github.com/eclipse/jetty.project.git",
    "fileType": "main"
  },
  {
    "fileName": "ProxyServletTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 687,
        "description": "Extract Method private testTransparentProxyWithQuery(proxyToContext String, prefix String, target String) : void extracted from public testTransparentProxyWithQuery() : void in class org.eclipse.jetty.proxy.ProxyServletTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 689,
        "description": "Extract Variable expectedURI : String in method protected doGet(req HttpServletRequest, resp HttpServletResponse) : void from class org.eclipse.jetty.proxy.ProxyServletTest.testTransparentProxyWithQuery.startServer.new HttpServlet",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 675,
        "description": "Parameterize Variable target : String to target : String in method private testTransparentProxyWithQuery(proxyToContext String, prefix String, target String) : void from class org.eclipse.jetty.proxy.ProxyServletTest",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 675,
        "description": "Parameterize Variable prefix : String to prefix : String in method private testTransparentProxyWithQuery(proxyToContext String, prefix String, target String) : void from class org.eclipse.jetty.proxy.ProxyServletTest",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/ProxyServletTest.java",
    "commit": "https://github.com/eclipse/jetty.project/commit/837d1a74bb7d694220644a2539c4440ce55462cf",
    "repository": "https://github.com/eclipse/jetty.project.git",
    "fileType": "test"
  },
  {
    "fileName": "AddStepHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 70,
        "description": "Change Variable Type attribute : Attribute to attribute : AttributeDefinition in method public register(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.controller.AddStepHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Change Parameter Type resolver : ResourceDescriptionResolver to descriptor : AddStepHandlerDescriptor in method public AddStepHandler(descriptor AddStepHandlerDescriptor, handler ResourceServiceHandler) from class org.jboss.as.clustering.controller.AddStepHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Rename Parameter resolver : ResourceDescriptionResolver to descriptor : AddStepHandlerDescriptor in method public AddStepHandler(descriptor AddStepHandlerDescriptor, handler ResourceServiceHandler) from class org.jboss.as.clustering.controller.AddStepHandler",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Merge Attribute [resolver : ResourceDescriptionResolver, attributes : List<Attribute>] to descriptor : AddStepHandlerDescriptor in class org.jboss.as.clustering.controller.AddStepHandler",
        "type": "Merge Attribute"
      }
    ],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/AddStepHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "AddStepHandlerDescriptor.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/AddStepHandlerDescriptor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BoottimeAddStepHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 80,
        "description": "Change Variable Type attribute : Attribute to attribute : AttributeDefinition in method public register(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.controller.BoottimeAddStepHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Change Parameter Type resolver : ResourceDescriptionResolver to descriptor : AddStepHandlerDescriptor in method public BoottimeAddStepHandler(descriptor AddStepHandlerDescriptor, handler ResourceServiceHandler) from class org.jboss.as.clustering.controller.BoottimeAddStepHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Rename Parameter resolver : ResourceDescriptionResolver to descriptor : AddStepHandlerDescriptor in method public BoottimeAddStepHandler(descriptor AddStepHandlerDescriptor, handler ResourceServiceHandler) from class org.jboss.as.clustering.controller.BoottimeAddStepHandler",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Merge Attribute [resolver : ResourceDescriptionResolver, attributes : List<Attribute>] to descriptor : AddStepHandlerDescriptor in class org.jboss.as.clustering.controller.BoottimeAddStepHandler",
        "type": "Merge Attribute"
      }
    ],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/BoottimeAddStepHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "Capability.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/Capability.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CapabilityDependency.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/CapabilityDependency.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CapabilityReference.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/CapabilityReference.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "Metric.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/Metric.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "Registration.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/Registration.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ReloadRequiredAddStepHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 31,
      "description": "Add Class Annotation @Deprecated in class org.jboss.as.clustering.controller.ReloadRequiredAddStepHandler",
      "type": "Add Class Annotation"
    }],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/ReloadRequiredAddStepHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoveStepHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 46,
        "description": "Change Parameter Type resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in method public RemoveStepHandler(descriptor RemoveStepHandlerDescriptor, handler ResourceServiceHandler) from class org.jboss.as.clustering.controller.RemoveStepHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Rename Parameter resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in method public RemoveStepHandler(descriptor RemoveStepHandlerDescriptor, handler ResourceServiceHandler) from class org.jboss.as.clustering.controller.RemoveStepHandler",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Rename Attribute resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in class org.jboss.as.clustering.controller.RemoveStepHandler",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Change Attribute Type resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in class org.jboss.as.clustering.controller.RemoveStepHandler",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/RemoveStepHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoveStepHandlerDescriptor.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/RemoveStepHandlerDescriptor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RequiredCapability.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/RequiredCapability.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "Requirement.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/Requirement.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ResourceDescriptor.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/ResourceDescriptor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ResourceServiceBuilder.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/ResourceServiceBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RestartParentAddHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 71,
        "description": "Change Variable Type attribute : Attribute to attribute : AttributeDefinition in method protected populateModel(operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.controller.RestartParentAddHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Change Variable Type attribute : Attribute to attribute : AttributeDefinition in method public register(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.controller.RestartParentAddHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Change Parameter Type resolver : ResourceDescriptionResolver to descriptor : AddStepHandlerDescriptor in method public RestartParentAddHandler(descriptor AddStepHandlerDescriptor, builderFactory ResourceServiceBuilderFactory<T>) from class org.jboss.as.clustering.controller.RestartParentAddHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Rename Parameter resolver : ResourceDescriptionResolver to descriptor : AddStepHandlerDescriptor in method public RestartParentAddHandler(descriptor AddStepHandlerDescriptor, builderFactory ResourceServiceBuilderFactory<T>) from class org.jboss.as.clustering.controller.RestartParentAddHandler",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Merge Attribute [resolver : ResourceDescriptionResolver, attributes : List<Attribute>] to descriptor : AddStepHandlerDescriptor in class org.jboss.as.clustering.controller.RestartParentAddHandler",
        "type": "Merge Attribute"
      }
    ],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/RestartParentAddHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RestartParentRemoveHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 50,
        "description": "Change Parameter Type resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in method public RestartParentRemoveHandler(descriptor RemoveStepHandlerDescriptor, builderFactory ResourceServiceBuilderFactory<T>) from class org.jboss.as.clustering.controller.RestartParentRemoveHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 50,
        "description": "Rename Parameter resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in method public RestartParentRemoveHandler(descriptor RemoveStepHandlerDescriptor, builderFactory ResourceServiceBuilderFactory<T>) from class org.jboss.as.clustering.controller.RestartParentRemoveHandler",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Rename Attribute resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in class org.jboss.as.clustering.controller.RestartParentRemoveHandler",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Change Attribute Type resolver : ResourceDescriptionResolver to descriptor : RemoveStepHandlerDescriptor in class org.jboss.as.clustering.controller.RestartParentRemoveHandler",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/RestartParentRemoveHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ModuleIdentifierValidator.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/validation/ModuleIdentifierValidator.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ParameterValidatorBuilder.java",
    "refactorings": [],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/controller/validation/ParameterValidatorBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceContainerHelper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 112,
        "description": "Change Parameter Type controller : ServiceController<?> to controller : ServiceController<T> in method public start(controller ServiceController<T>) : void from class org.jboss.as.clustering.msc.ServiceContainerHelper",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Change Parameter Type controller : ServiceController<?> to controller : ServiceController<T> in method public stop(controller ServiceController<T>) : void from class org.jboss.as.clustering.msc.ServiceContainerHelper",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 134,
        "description": "Change Parameter Type controller : ServiceController<?> to controller : ServiceController<T> in method public remove(controller ServiceController<T>) : void from class org.jboss.as.clustering.msc.ServiceContainerHelper",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Remove Variable Modifier final in variable monitor : StabilityMonitor in method private transition(targetController ServiceController<?>, targetState State) : void from class org.jboss.as.clustering.msc.ServiceContainerHelper",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 143,
        "description": "Change Parameter Type targetController : ServiceController<?> to targetController : ServiceController<T> in method private transition(targetController ServiceController<T>, targetState State) : void from class org.jboss.as.clustering.msc.ServiceContainerHelper",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Add Parameter Modifier final in parameter targetState : State in method private transition(targetController ServiceController<T>, targetState State) : void from class org.jboss.as.clustering.msc.ServiceContainerHelper",
        "type": "Add Parameter Modifier"
      }
    ],
    "filePath": "clustering/common/src/main/java/org/jboss/as/clustering/msc/ServiceContainerHelper.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "InfinispanBeanManagerFactoryBuilderFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 64,
      "description": "Add Method Annotation @Override in method public run() : ThreadFactory from class org.wildfly.clustering.ejb.infinispan.InfinispanBeanManagerFactoryBuilderFactory.createThreadFactory.doPrivileged.new PrivilegedAction<ThreadFactory>",
      "type": "Add Method Annotation"
    }],
    "filePath": "clustering/ejb/infinispan/src/main/java/org/wildfly/clustering/ejb/infinispan/InfinispanBeanManagerFactoryBuilderFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultCacheContainer.java",
    "refactorings": [],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/DefaultCacheContainer.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BackupForBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 53,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<BackupForConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.BackupForBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<BackupForConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.BackupForBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/BackupForBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BackupForResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 95,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.BackupForResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/BackupForResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BackupResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 111,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.BackupResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/BackupResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BackupsBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 80,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<SitesConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.BackupsBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 80,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<SitesConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.BackupsBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/BackupsBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BackupsResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 76,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.BackupsResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/BackupsResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryKeyedJDBCStoreResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 109,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.BinaryKeyedJDBCStoreResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/BinaryKeyedJDBCStoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryTableResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 82,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.BinaryTableResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/BinaryTableResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheComponent.java",
    "refactorings": [],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheComponent.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheConfigurationBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 103,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<Configuration> from class org.jboss.as.clustering.infinispan.subsystem.CacheConfigurationBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<Configuration> from class org.jboss.as.clustering.infinispan.subsystem.CacheConfigurationBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheConfigurationBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheContainerBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 79,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<CacheContainer> from class org.jboss.as.clustering.infinispan.subsystem.CacheContainerBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<CacheContainer> from class org.jboss.as.clustering.infinispan.subsystem.CacheContainerBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheContainerBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheContainerComponent.java",
    "refactorings": [],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheContainerComponent.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheContainerResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 218,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.CacheContainerResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheContainerResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheContainerServiceHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 98,
        "description": "Change Variable Type nameFactory : CacheServiceNameFactory to nameFactory : SubGroupServiceNameFactory in method public installServices(context OperationContext, model ModelNode) : void from class org.jboss.as.clustering.infinispan.subsystem.CacheContainerServiceHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Change Variable Type nameFactory : CacheServiceNameFactory to nameFactory : SubGroupServiceNameFactory in method public removeServices(context OperationContext, model ModelNode) : void from class org.jboss.as.clustering.infinispan.subsystem.CacheContainerServiceHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 133,
        "description": "Change Variable Type factory : CacheContainerServiceNameFactory to factory : GroupServiceNameFactory in method public removeServices(context OperationContext, model ModelNode) : void from class org.jboss.as.clustering.infinispan.subsystem.CacheContainerServiceHandler",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheContainerServiceHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheServiceHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 105,
      "description": "Change Variable Type factory : CacheServiceNameFactory to factory : SubGroupServiceNameFactory in method public removeServices(context OperationContext, model ModelNode) : void from class org.jboss.as.clustering.infinispan.subsystem.CacheServiceHandler",
      "type": "Change Variable Type"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheServiceHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusteredCacheBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 75,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<Configuration> from class org.jboss.as.clustering.infinispan.subsystem.ClusteredCacheBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<Configuration> from class org.jboss.as.clustering.infinispan.subsystem.ClusteredCacheBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ClusteredCacheBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomStoreResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 90,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.CustomStoreResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CustomStoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedCacheBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 72,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<Configuration> from class org.jboss.as.clustering.infinispan.subsystem.DistributedCacheBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 72,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<Configuration> from class org.jboss.as.clustering.infinispan.subsystem.DistributedCacheBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/DistributedCacheBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedCacheResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 118,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.DistributedCacheResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/DistributedCacheResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "EvictionBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 54,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<EvictionConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.EvictionBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 54,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<EvictionConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.EvictionBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/EvictionBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "EvictionResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 96,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.EvictionResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/EvictionResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ExpirationBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 53,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<ExpirationConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.ExpirationBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<ExpirationConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.ExpirationBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ExpirationBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ExpirationResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 91,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.ExpirationResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ExpirationResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "FileStoreResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 100,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.FileStoreResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/FileStoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "GlobalConfigurationBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<GlobalConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.GlobalConfigurationBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<GlobalConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.GlobalConfigurationBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/GlobalConfigurationBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexingBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 53,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<IndexingConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.IndexingBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<IndexingConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.IndexingBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/IndexingBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexingResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 179,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.IndexingResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/IndexingResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "InfinispanSubsystemResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 72,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.InfinispanSubsystemResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "InvalidationCacheResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 62,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.InvalidationCacheResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InvalidationCacheResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsTransportBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 70,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<TransportConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.JGroupsTransportBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<TransportConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.JGroupsTransportBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/JGroupsTransportBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsTransportResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 207,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.JGroupsTransportResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/JGroupsTransportResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsTransportServiceHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 93,
      "description": "Change Variable Type factory : CacheContainerServiceNameFactory to factory : CacheContainerComponent in method public removeServices(context OperationContext, model ModelNode) : void from class org.jboss.as.clustering.infinispan.subsystem.JGroupsTransportServiceHandler",
      "type": "Change Variable Type"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/JGroupsTransportServiceHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "KeyAffinityServiceFactoryBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 92,
      "description": "Add Method Annotation @Override in method public run() : JBossThreadFactory from class org.jboss.as.clustering.infinispan.subsystem.KeyAffinityServiceFactoryBuilder.start.threadFactory.doPrivileged.new PrivilegedAction<JBossThreadFactory>",
      "type": "Add Method Annotation"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/KeyAffinityServiceFactoryBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalCacheResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 62,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.LocalCacheResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LocalCacheResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "LockingBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 62,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<LockingConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.LockingBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<LockingConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.LockingBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LockingBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "LockingResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 103,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.LockingResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LockingResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "MixedKeyedJDBCStoreResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 113,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.MixedKeyedJDBCStoreResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/MixedKeyedJDBCStoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "NoStoreBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<PersistenceConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.NoStoreBuilder",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<PersistenceConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.NoStoreBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "NoStoreResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 61,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.NoStoreResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoStoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "NoTransportResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 53,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.NoTransportResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoTransportResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "NoTransportServiceHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 68,
      "description": "Change Variable Type factory : CacheContainerServiceNameFactory to factory : CacheContainerComponent in method public removeServices(context OperationContext, model ModelNode) : void from class org.jboss.as.clustering.infinispan.subsystem.NoTransportServiceHandler",
      "type": "Change Variable Type"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/NoTransportServiceHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ReplicatedCacheResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 62,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.ReplicatedCacheResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ReplicatedCacheResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StateTransferBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 55,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<StateTransferConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StateTransferBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<StateTransferConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StateTransferBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StateTransferBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StateTransferResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 99,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.StateTransferResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StateTransferResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 75,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<PersistenceConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StoreBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<PersistenceConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StoreBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreResourceDefinition.java",
    "refactorings": [
      {
        "rightSideLineNumber": 99,
        "description": "Add Method Annotation @SuppressWarnings(\"deprecation\") in method package buildTransformation(version ModelVersion, builder ResourceTransformationDescriptionBuilder) : void from class org.jboss.as.clustering.infinispan.subsystem.StoreResourceDefinition",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 157,
        "description": "Add Method Annotation @SuppressWarnings(\"deprecation\") in method public registerChildren(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.StoreResourceDefinition",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreWriteBehindBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 57,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<AsyncStoreConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StoreWriteBehindBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<AsyncStoreConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StoreWriteBehindBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteBehindBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreWriteBehindResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 101,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.StoreWriteBehindResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteBehindResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreWriteThroughBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<AsyncStoreConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StoreWriteThroughBuilder",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<AsyncStoreConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.StoreWriteThroughBuilder",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteThroughBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreWriteThroughResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 55,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.StoreWriteThroughResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteThroughResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StringKeyedJDBCStoreResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 131,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.StringKeyedJDBCStoreResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StringKeyedJDBCStoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "StringTableResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 118,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.StringTableResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StringTableResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "TableBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 55,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<TableManipulationConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.TableBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<TableManipulationConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.TableBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/TableBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 91,
        "description": "Change Parameter Type resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<TransactionConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.TransactionBuilder",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 91,
        "description": "Rename Parameter resolver : ExpressionResolver to context : OperationContext in method public configure(context OperationContext, model ModelNode) : Builder<TransactionConfiguration> from class org.jboss.as.clustering.infinispan.subsystem.TransactionBuilder",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/TransactionBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 235,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.TransactionResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/TransactionResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheContainerServiceName.java",
    "refactorings": [],
    "filePath": "clustering/infinispan/spi/src/main/java/org/wildfly/clustering/infinispan/spi/service/CacheContainerServiceName.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheServiceName.java",
    "refactorings": [],
    "filePath": "clustering/infinispan/spi/src/main/java/org/wildfly/clustering/infinispan/spi/service/CacheServiceName.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkAddHandler.java",
    "refactorings": [],
    "filePath": "clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/ForkAddHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelServiceNameFactory.java",
    "refactorings": [],
    "filePath": "clustering/jgroups/spi/src/main/java/org/wildfly/clustering/jgroups/spi/service/ChannelServiceNameFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "HashableMarshalledValue.java",
    "refactorings": [],
    "filePath": "clustering/marshalling/src/main/java/org/wildfly/clustering/marshalling/HashableMarshalledValue.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheServiceNameProvider.java",
    "refactorings": [
      {
        "rightSideLineNumber": 37,
        "description": "Change Attribute Type factory : CacheGroupServiceNameFactory to factory : SubGroupServiceNameFactory in class org.wildfly.clustering.server.CacheServiceNameProvider",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 40,
        "description": "Change Parameter Type factory : CacheGroupServiceNameFactory to factory : SubGroupServiceNameFactory in method public CacheServiceNameProvider(factory SubGroupServiceNameFactory, containerName String, cacheName String) from class org.wildfly.clustering.server.CacheServiceNameProvider",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/CacheServiceNameProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "GroupServiceNameProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/GroupServiceNameProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelCommandDispatcher.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/ChannelCommandDispatcher.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CommandDispatcherFactoryAliasBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/CommandDispatcherFactoryAliasBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CommandDispatcherFactoryBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/CommandDispatcherFactoryBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "GroupAliasBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/group/GroupAliasBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "GroupBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/group/GroupBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceProviderRegistrationFactoryAliasBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/provider/ServiceProviderRegistrationFactoryAliasBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceProviderRegistrationFactoryBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/provider/ServiceProviderRegistrationFactoryBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RegistryFactoryAliasBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/registry/RegistryFactoryAliasBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RegistryFactoryBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/registry/RegistryFactoryBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheSingletonServiceBuilder.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/singleton/CacheSingletonServiceBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheSingletonServiceBuilderFactory.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/singleton/CacheSingletonServiceBuilderFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalSingletonServiceBuilder.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/singleton/LocalSingletonServiceBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalSingletonServiceBuilderFactory.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/singleton/LocalSingletonServiceBuilderFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonClassTableContributor.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/singleton/SingletonClassTableContributor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonServiceBuilderFactoryAliasBuilderProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/singleton/SingletonServiceBuilderFactoryAliasBuilderProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonServiceBuilderFactoryServiceNameProvider.java",
    "refactorings": [],
    "filePath": "clustering/server/src/main/java/org/wildfly/clustering/server/singleton/SingletonServiceBuilderFactoryServiceNameProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "GroupServiceNameFactory.java",
    "refactorings": [],
    "filePath": "clustering/service/src/main/java/org/wildfly/clustering/service/GroupServiceNameFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SubGroupServiceNameFactory.java",
    "refactorings": [],
    "filePath": "clustering/service/src/main/java/org/wildfly/clustering/service/SubGroupServiceNameFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "Singleton.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/Singleton.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonElectionPolicy.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/SingletonElectionPolicy.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonServiceBuilder.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/SingletonServiceBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonServiceBuilderFactory.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/SingletonServiceBuilderFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonServiceName.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/SingletonServiceName.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "NamePreference.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/election/NamePreference.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "Preference.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/election/Preference.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "PreferredSingletonElectionPolicy.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/election/PreferredSingletonElectionPolicy.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RandomSingletonElectionPolicy.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/election/RandomSingletonElectionPolicy.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleSingletonElectionPolicy.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/election/SimpleSingletonElectionPolicy.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SocketAddressPreference.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/main/java/org/wildfly/clustering/singleton/election/SocketAddressPreference.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DeploymentPolicy.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/DeploymentPolicy.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DeploymentPolicyBuilder.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/DeploymentPolicyBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DeploymentPolicyBuilderFactory.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/DeploymentPolicyBuilderFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DeploymentPolicyResourceDefinition.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/DeploymentPolicyResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "DeploymentPolicyServiceNameProvider.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/DeploymentPolicyServiceNameProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ElectionPolicyBuilder.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/ElectionPolicyBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ElectionPolicyResourceDefinition.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/ElectionPolicyResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "ElectionPolicyServiceNameProvider.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/ElectionPolicyServiceNameProvider.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RandomElectionPolicyBuilder.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/RandomElectionPolicyBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RandomElectionPolicyBuilderFactory.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/RandomElectionPolicyBuilderFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RandomElectionPolicyResourceDefinition.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/RandomElectionPolicyResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleElectionPolicyBuilder.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SimpleElectionPolicyBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleElectionPolicyBuilderFactory.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SimpleElectionPolicyBuilderFactory.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleElectionPolicyResourceDefinition.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SimpleElectionPolicyResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerExtension.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerExtension.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerModel.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerModel.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerResourceDefinition.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerResourceDescriptionResolver.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerResourceDescriptionResolver.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerSchema.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerSchema.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerServiceHandler.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerServiceHandler.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerXMLReader.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerXMLReader.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeployerXMLWriter.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonDeployerXMLWriter.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "XMLAttribute.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/XMLAttribute.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "XMLElement.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/XMLElement.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "MutableSingletonDeploymentConfiguration.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/MutableSingletonDeploymentConfiguration.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeploymentConfiguration.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/SingletonDeploymentConfiguration.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeploymentDependencyProcessor.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/SingletonDeploymentDependencyProcessor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeploymentParsingProcessor.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/SingletonDeploymentParsingProcessor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeploymentProcessor.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/SingletonDeploymentProcessor.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeploymentSchema.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/SingletonDeploymentSchema.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeploymentUnitPhaseBuilder.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/SingletonDeploymentUnitPhaseBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonDeploymentXMLReader.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/deployment/SingletonDeploymentXMLReader.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "OutboundSocketBindingPreference.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/election/OutboundSocketBindingPreference.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheGroupServiceName.java",
    "refactorings": [],
    "filePath": "clustering/spi/src/main/java/org/wildfly/clustering/spi/CacheGroupServiceName.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "GroupServiceName.java",
    "refactorings": [],
    "filePath": "clustering/spi/src/main/java/org/wildfly/clustering/spi/GroupServiceName.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "InfinispanSessionManagerFactoryBuilder.java",
    "refactorings": [],
    "filePath": "clustering/web/infinispan/src/main/java/org/wildfly/clustering/web/infinispan/session/InfinispanSessionManagerFactoryBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "InfinispanSSOManagerFactoryBuilder.java",
    "refactorings": [],
    "filePath": "clustering/web/infinispan/src/main/java/org/wildfly/clustering/web/infinispan/sso/InfinispanSSOManagerFactoryBuilder.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "EJB3RemoteServiceAdd.java",
    "refactorings": [],
    "filePath": "ejb3/src/main/java/org/jboss/as/ejb3/subsystem/EJB3RemoteServiceAdd.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "main"
  },
  {
    "fileName": "RemoteStoreResourceDefinition.java",
    "refactorings": [{
      "rightSideLineNumber": 103,
      "description": "Extract Variable descriptor : ResourceDescriptor in method public registerOperations(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.infinispan.subsystem.RemoteStoreResourceDefinition",
      "type": "Extract Variable"
    }],
    "filePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/RemoteStoreResourceDefinition.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultCacheContainerTest.java",
    "refactorings": [],
    "filePath": "clustering/infinispan/extension/src/test/java/org/jboss/as/clustering/infinispan/DefaultCacheContainerTest.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SimpleMarshalledValueFactoryTestCase.java",
    "refactorings": [{
      "rightSideLineNumber": 164,
      "description": "Try With Resources try(ObjectInputStream ois=new ObjectInputStream(bais)) in method private unmarshall(bytes byte[]) : Object from class org.wildfly.clustering.marshalling.SimpleMarshalledValueFactoryTestCase",
      "type": "Try With Resources"
    }],
    "filePath": "clustering/marshalling/src/test/java/org/wildfly/clustering/marshalling/SimpleMarshalledValueFactoryTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "NamePreferenceTestCase.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/test/java/org/wildfly/clustering/server/singleton/election/NamePreferenceTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "PreferredSingletonElectionPolicyTestCase.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/test/java/org/wildfly/clustering/server/singleton/election/PreferredSingletonElectionPolicyTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SimpleSingletonElectionPolicyTestCase.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/test/java/org/wildfly/clustering/server/singleton/election/SimpleSingletonElectionPolicyTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SocketAddressPreferenceTestCase.java",
    "refactorings": [],
    "filePath": "clustering/singleton/api/src/test/java/org/wildfly/clustering/server/singleton/election/SocketAddressPreferenceTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SubsystemParsingTestCase.java",
    "refactorings": [],
    "filePath": "clustering/singleton/extension/src/test/java/org/wildfly/extension/clustering/singleton/SubsystemParsingTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SingletonDeploymentDescriptorTestCase.java",
    "refactorings": [],
    "filePath": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/SingletonDeploymentDescriptorTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SingletonDeploymentJBossAllTestCase.java",
    "refactorings": [],
    "filePath": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/SingletonDeploymentJBossAllTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SingletonDeploymentTestCase.java",
    "refactorings": [],
    "filePath": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/SingletonDeploymentTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "SingletonServiceTestCase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 78,
        "description": "Modify Parameter Annotation @ArquillianResource to @ArquillianResource(MyServiceServlet.class) in parameter baseURL1 : URL in method public testSingletonService(baseURL1 URL, baseURL2 URL) : void from class org.jboss.as.test.clustering.cluster.singleton.SingletonServiceTestCase",
        "type": "Modify Parameter Annotation"
      },
      {
        "rightSideLineNumber": 78,
        "description": "Modify Parameter Annotation @ArquillianResource to @ArquillianResource(MyServiceServlet.class) in parameter baseURL2 : URL in method public testSingletonService(baseURL1 URL, baseURL2 URL) : void from class org.jboss.as.test.clustering.cluster.singleton.SingletonServiceTestCase",
        "type": "Modify Parameter Annotation"
      }
    ],
    "filePath": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/SingletonServiceTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "MyServiceActivator.java",
    "refactorings": [],
    "filePath": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/service/MyServiceActivator.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "TraceServlet.java",
    "refactorings": [],
    "filePath": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/cluster/singleton/servlet/TraceServlet.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "DomainAdjuster630.java",
    "refactorings": [],
    "filePath": "testsuite/mixed-domain/src/test/java/org/jboss/as/test/integration/domain/mixed/eap630/DomainAdjuster630.java",
    "commit": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "MethodReference.java",
    "refactorings": [],
    "filePath": "translator/src/main/java/com/google/devtools/j2objc/ast/MethodReference.java",
    "commit": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "repository": "https://github.com/google/j2objc.git",
    "fileType": "main"
  },
  {
    "fileName": "StatementGenerator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 731,
        "description": "Extract Method public printLambdaCallWithoutBlocks(functionalInterface IMethodBinding, functionalClassName String, newClassName String, methodBinding IMethodBinding, isCapturing boolean) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 763,
        "description": "Extract Method public printLambdaCallBlocks(functionalInterface IMethodBinding, parameters List<VariableDeclaration>, isCapturing boolean) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 703,
        "description": "Extract Method public printBlockCallWrapper(binding IMethodBinding) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 733,
        "description": "Extract Method public printLambdaCall(functionalInterface IMethodBinding, functionalTypeBinding ITypeBinding, methodBinding IMethodBinding, parameters List<VariableDeclaration>, isCapturing boolean) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 752,
        "description": "Extract Variable createdClassName : String in method public printLambdaCallWithoutBlocks(functionalInterface IMethodBinding, functionalClassName String, newClassName String, methodBinding IMethodBinding, isCapturing boolean) : void from class com.google.devtools.j2objc.gen.StatementGenerator",
        "type": "Extract Variable"
      }
    ],
    "filePath": "translator/src/main/java/com/google/devtools/j2objc/gen/StatementGenerator.java",
    "commit": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "repository": "https://github.com/google/j2objc.git",
    "fileType": "main"
  },
  {
    "fileName": "CreationReferenceTest.java",
    "refactorings": [],
    "filePath": "jre_emul/Tests/com/google/j2objc/java8/CreationReferenceTest.java",
    "commit": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "repository": "https://github.com/google/j2objc.git",
    "fileType": "test"
  },
  {
    "fileName": "SmallTests.java",
    "refactorings": [],
    "filePath": "jre_emul/Tests/com/google/j2objc/java8/SmallTests.java",
    "commit": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "repository": "https://github.com/google/j2objc.git",
    "fileType": "test"
  },
  {
    "fileName": "SmallTests.java",
    "refactorings": [],
    "filePath": "translator/src/test/java/com/google/devtools/j2objc/SmallTests.java",
    "commit": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "repository": "https://github.com/google/j2objc.git",
    "fileType": "test"
  },
  {
    "fileName": "LambdaExpressionTest.java",
    "refactorings": [],
    "filePath": "translator/src/test/java/com/google/devtools/j2objc/ast/LambdaExpressionTest.java",
    "commit": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "repository": "https://github.com/google/j2objc.git",
    "fileType": "test"
  },
  {
    "fileName": "MethodReferenceTest.java",
    "refactorings": [],
    "filePath": "translator/src/test/java/com/google/devtools/j2objc/ast/MethodReferenceTest.java",
    "commit": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "repository": "https://github.com/google/j2objc.git",
    "fileType": "test"
  },
  {
    "fileName": "Stage.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/concurrent/Stage.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "StageManager.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/concurrent/StageManager.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CFMetaData.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1403,
        "description": "Add Parameter isMaterializedView : boolean in method private Builder(keyspace String, table String, isDense boolean, isCompound boolean, isSuper boolean, isCounter boolean, isMaterializedView boolean) from class org.apache.cassandra.config.CFMetaData.Builder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 252,
        "description": "Add Parameter isMaterializedView : boolean in method private CFMetaData(keyspace String, name String, cfId UUID, isSuper boolean, isCounter boolean, isDense boolean, isCompound boolean, isMaterializedView boolean, partitionKeyColumns List<ColumnDefinition>, clusteringColumns List<ColumnDefinition>, partitionColumns PartitionColumns) from class org.apache.cassandra.config.CFMetaData",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 324,
        "description": "Add Parameter isMaterializedView : boolean in method public create(ksName String, name String, cfId UUID, isDense boolean, isCompound boolean, isSuper boolean, isCounter boolean, isMaterializedView boolean, columns List<ColumnDefinition>) : CFMetaData from class org.apache.cassandra.config.CFMetaData",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/config/CFMetaData.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "Config.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/Config.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseDescriptor.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/DatabaseDescriptor.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MaterializedViewDefinition.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/MaterializedViewDefinition.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "AlterMaterializedViewStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/AlterMaterializedViewStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "AlterTableStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/AlterTableStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CFProperties.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/CFProperties.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateMaterializedViewStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/CreateMaterializedViewStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateTableStatement.java",
    "refactorings": [
      {
        "rightSideLineNumber": 191,
        "description": "Change Attribute Type properties : CFPropDefs to properties : CFProperties in class org.apache.cassandra.cql3.statements.CreateTableStatement.RawStatement",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 290,
        "description": "Replace Attribute With Variable useCompactStorage : boolean to useCompactStorage : boolean in method public prepare() : ParsedStatement.Prepared from class org.apache.cassandra.cql3.statements.CreateTableStatement.RawStatement",
        "type": "Replace Attribute With Variable"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/CreateTableStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateTriggerStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/CreateTriggerStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "DropMaterializedViewStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/DropMaterializedViewStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "DropTableStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/DropTableStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ModificationStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/ModificationStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "SelectStatement.java",
    "refactorings": [
      {
        "rightSideLineNumber": 688,
        "description": "Change Attribute Access Modifier private to public in attribute public parameters : Parameters from class org.apache.cassandra.cql3.statements.SelectStatement.RawStatement",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 689,
        "description": "Change Attribute Access Modifier private to public in attribute public selectClause : List<RawSelector> from class org.apache.cassandra.cql3.statements.SelectStatement.RawStatement",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 690,
        "description": "Change Attribute Access Modifier private to public in attribute public whereClause : List<Relation> from class org.apache.cassandra.cql3.statements.SelectStatement.RawStatement",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 691,
        "description": "Change Attribute Access Modifier private to public in attribute public limit : Term.Raw from class org.apache.cassandra.cql3.statements.SelectStatement.RawStatement",
        "type": "Change Attribute Access Modifier"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/SelectStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractReadCommandBuilder.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/AbstractReadCommandBuilder.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ColumnFamilyStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 580,
        "description": "Rename Method public initRowCache() : void renamed to public init() : void in class org.apache.cassandra.db.ColumnFamilyStore",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 1852,
        "description": "Extract Method public dumpMemtable() : void extracted from public truncateBlocking() : void in class org.apache.cassandra.db.ColumnFamilyStore",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1941,
        "description": "Rename Variable selfWithIndexes : Iterable<ColumnFamilyStore> to selfWithAuxiliaryCfs : Iterable<ColumnFamilyStore> in method public runWithCompactionsDisabled(callable Callable<V>, interruptValidation boolean, interruptViews boolean) : V from class org.apache.cassandra.db.ColumnFamilyStore",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 1898,
        "description": "Add Parameter interruptViews : boolean in method public runWithCompactionsDisabled(callable Callable<V>, interruptValidation boolean, interruptViews boolean) : V from class org.apache.cassandra.db.ColumnFamilyStore",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/db/ColumnFamilyStore.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "Keyspace.java",
    "refactorings": [
      {
        "rightSideLineNumber": 81,
        "description": "Add Attribute Modifier static in attribute public writeOrder : OpOrder from class org.apache.cassandra.db.Keyspace",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 365,
        "description": "Extract Variable newCfs : ColumnFamilyStore in method public initCf(cfId UUID, cfName String, loadSSTables boolean) : void from class org.apache.cassandra.db.Keyspace",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 387,
        "description": "Add Parameter Modifier final in parameter mutation : Mutation in method public apply(mutation Mutation, writeCommitLog boolean, updateIndexes boolean) : void from class org.apache.cassandra.db.Keyspace",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 387,
        "description": "Add Parameter Modifier final in parameter writeCommitLog : boolean in method public apply(mutation Mutation, writeCommitLog boolean, updateIndexes boolean) : void from class org.apache.cassandra.db.Keyspace",
        "type": "Add Parameter Modifier"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/db/Keyspace.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "Mutation.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/Mutation.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MutationVerbHandler.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/MutationVerbHandler.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemKeyspace.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/SystemKeyspace.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "WriteType.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/WriteType.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CompactionManager.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/compaction/CompactionManager.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CompactionStrategyManager.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationType.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/compaction/OperationType.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MaterializedView.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/view/MaterializedView.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MaterializedViewBuilder.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/view/MaterializedViewBuilder.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MaterializedViewManager.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/view/MaterializedViewManager.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MaterializedViewUtils.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/view/MaterializedViewUtils.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "TemporalRow.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/view/TemporalRow.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "KeyspaceMetrics.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/metrics/KeyspaceMetrics.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MVWriteMetrics.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/metrics/MVWriteMetrics.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MessagingService.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/net/MessagingService.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "LegacySchemaMigrator.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/schema/LegacySchemaMigrator.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "MaterializedViews.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/schema/MaterializedViews.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaKeyspace.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/schema/SchemaKeyspace.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractReadExecutor.java",
    "refactorings": [{
      "rightSideLineNumber": 199,
      "description": "Change Class Access Modifier private to public in class org.apache.cassandra.service.AbstractReadExecutor.NeverSpeculatingReadExecutor",
      "type": "Change Class Access Modifier"
    }],
    "filePath": "src/java/org/apache/cassandra/service/AbstractReadExecutor.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractWriteResponseHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 50,
      "description": "Change Attribute Access Modifier private to protected in attribute protected writeType : WriteType from class org.apache.cassandra.service.AbstractWriteResponseHandler",
      "type": "Change Attribute Access Modifier"
    }],
    "filePath": "src/java/org/apache/cassandra/service/AbstractWriteResponseHandler.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchlogResponseHandler.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/service/BatchlogResponseHandler.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraDaemon.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/service/CassandraDaemon.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "StorageProxy.java",
    "refactorings": [
      {
        "rightSideLineNumber": 988,
        "description": "Change Attribute Type handler : AbstractWriteResponseHandler<IMutation> to handler : BatchlogResponseHandler<IMutation> in class org.apache.cassandra.service.StorageProxy.WriteResponseHandlerWrapper",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 993,
        "description": "Change Parameter Type handler : AbstractWriteResponseHandler<IMutation> to handler : BatchlogResponseHandler<IMutation> in method package WriteResponseHandlerWrapper(handler BatchlogResponseHandler<IMutation>, mutation Mutation) from class org.apache.cassandra.service.StorageProxy.WriteResponseHandlerWrapper",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 947,
        "description": "Rename Method private wrapResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, writeType WriteType) : WriteResponseHandlerWrapper renamed to private wrapBatchResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, batchConsistencyLevel ConsistencyLevel, writeType WriteType, cleanup BatchlogResponseHandler.BatchlogCleanup) : WriteResponseHandlerWrapper in class org.apache.cassandra.service.StorageProxy",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 761,
        "description": "Extract Variable batchConsistencyLevel : ConsistencyLevel in method public mutateAtomically(mutations Collection<Mutation>, consistency_level ConsistencyLevel, requireQuorumForRemove boolean) : void from class org.apache.cassandra.service.StorageProxy",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 724,
        "description": "Add Variable Modifier final in variable batchlogEndpoints : Collection<InetAddress> in method public mutateAtomically(mutations Collection<Mutation>, consistency_level ConsistencyLevel, requireQuorumForRemove boolean) : void from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 724,
        "description": "Add Variable Modifier final in variable batchUUID : UUID in method public mutateAtomically(mutations Collection<Mutation>, consistency_level ConsistencyLevel, requireQuorumForRemove boolean) : void from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 724,
        "description": "Add Parameter requireQuorumForRemove : boolean in method public mutateAtomically(mutations Collection<Mutation>, consistency_level ConsistencyLevel, requireQuorumForRemove boolean) : void from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 894,
        "description": "Add Parameter stage : Stage in method private syncWriteBatchedMutations(wrappers List<WriteResponseHandlerWrapper>, localDataCenter String, stage Stage) : void from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 954,
        "description": "Extract Variable keyspace : Keyspace in method private wrapBatchResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, batchConsistencyLevel ConsistencyLevel, writeType WriteType, cleanup BatchlogResponseHandler.BatchlogCleanup) : WriteResponseHandlerWrapper from class org.apache.cassandra.service.StorageProxy",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 959,
        "description": "Rename Variable responseHandler : AbstractWriteResponseHandler<IMutation> to writeHandler : AbstractWriteResponseHandler<IMutation> in method private wrapBatchResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, batchConsistencyLevel ConsistencyLevel, writeType WriteType, cleanup BatchlogResponseHandler.BatchlogCleanup) : WriteResponseHandlerWrapper from class org.apache.cassandra.service.StorageProxy",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 947,
        "description": "Add Parameter batchConsistencyLevel : ConsistencyLevel in method private wrapBatchResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, batchConsistencyLevel ConsistencyLevel, writeType WriteType, cleanup BatchlogResponseHandler.BatchlogCleanup) : WriteResponseHandlerWrapper from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 947,
        "description": "Add Parameter cleanup : BatchlogResponseHandler.BatchlogCleanup in method private wrapBatchResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, batchConsistencyLevel ConsistencyLevel, writeType WriteType, cleanup BatchlogResponseHandler.BatchlogCleanup) : WriteResponseHandlerWrapper from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 1024,
        "description": "Add Parameter stage : Stage in method public sendToHintedEndpoints(mutation Mutation, targets Iterable<InetAddress>, responseHandler AbstractWriteResponseHandler<IMutation>, localDataCenter String, stage Stage) : void from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 1218,
        "description": "Add Parameter stage : Stage in method private insertLocal(stage Stage, mutation Mutation, responseHandler AbstractWriteResponseHandler<IMutation>) : void from class org.apache.cassandra.service.StorageProxy",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/service/StorageProxy.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "StorageService.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/service/StorageService.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "StreamReceiveTask.java",
    "refactorings": [{
      "rightSideLineNumber": 144,
      "description": "Extract Variable reader : SSTableReader in method public run() : void from class org.apache.cassandra.streaming.StreamReceiveTask.OnCompletionRunnable",
      "type": "Extract Variable"
    }],
    "filePath": "src/java/org/apache/cassandra/streaming/StreamReceiveTask.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraServer.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/thrift/CassandraServer.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ThriftConversion.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/thrift/ThriftConversion.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "NativeSSTableLoaderClient.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/utils/NativeSSTableLoaderClient.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "TruncateStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/TruncateStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "MaterializedViewLongTest.java",
    "refactorings": [],
    "filePath": "test/long/org/apache/cassandra/cql3/MaterializedViewLongTest.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "CQLTester.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/cql3/CQLTester.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "MaterializedViewTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/cql3/MaterializedViewTest.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "RangeTombstoneTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/db/RangeTombstoneTest.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "MaterializedViewUtilsTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/db/view/MaterializedViewUtilsTest.java",
    "commit": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "BlockingOperatorToIterator.java",
    "refactorings": [],
    "filePath": "src/main/java/rx/internal/operators/BlockingOperatorToIterator.java",
    "commit": "https://github.com/ReactiveX/RxJava/commit/8ad226067434cd39ce493b336bd0659778625959",
    "repository": "https://github.com/ReactiveX/RxJava.git",
    "fileType": "main"
  },
  {
    "fileName": "BlockingObservable.java",
    "refactorings": [
      {
        "rightSideLineNumber": 463,
        "description": "Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from public forEach(onNext Action1<? super T>) : void in class rx.observables.BlockingObservable",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 463,
        "description": "Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from private blockForSingle(observable Observable<? extends T>) : T in class rx.observables.BlockingObservable",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/main/java/rx/observables/BlockingObservable.java",
    "commit": "https://github.com/ReactiveX/RxJava/commit/8ad226067434cd39ce493b336bd0659778625959",
    "repository": "https://github.com/ReactiveX/RxJava.git",
    "fileType": "main"
  },
  {
    "fileName": "BlockingOperatorNextTest.java",
    "refactorings": [],
    "filePath": "src/test/java/rx/internal/operators/BlockingOperatorNextTest.java",
    "commit": "https://github.com/ReactiveX/RxJava/commit/8ad226067434cd39ce493b336bd0659778625959",
    "repository": "https://github.com/ReactiveX/RxJava.git",
    "fileType": "test"
  },
  {
    "fileName": "BlockingObservableTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 568,
        "description": "Rename Method private createObservable() : Observable<Void> renamed to private createNeverObservable() : Observable<Void> in class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 636,
        "description": "Extract Method private getInterruptedExceptionOrNull() : InterruptedException extracted from package assertUnsubscribeIsInvoked(method String, blockingAction Action1<BlockingObservable<Void>>) : void in class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 569,
        "description": "Extract Method private createOnUnsubscribe() : Action0 extracted from private createObservable() : Observable<Void> in class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 630,
        "description": "Invert Condition if(error != null) to if(error == null) in method private getInterruptedExceptionOrNull() : InterruptedException from class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Invert Condition"
      },
      {
        "rightSideLineNumber": 632,
        "description": "Replace Attribute With Variable error : RuntimeException to error : RuntimeException in method private getInterruptedExceptionOrNull() : InterruptedException from class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Replace Attribute With Variable"
      },
      {
        "rightSideLineNumber": 604,
        "description": "Change Parameter Type blockingAction : Action1<BlockingObservable<Void>> to blockingAction : Action1<BlockingObservable<T>> in method private startBlockingAndInterrupt(observable Observable<T>, blockingAction Action1<BlockingObservable<T>>) : void from class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 599,
        "description": "Add Parameter observable : Observable<T> in method private startBlockingAndInterrupt(observable Observable<T>, blockingAction Action1<BlockingObservable<T>>) : void from class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 556,
        "description": "Rename Attribute error : RuntimeException to errorRef : AtomicReference<RuntimeException> in class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 556,
        "description": "Change Attribute Type error : RuntimeException to errorRef : AtomicReference<RuntimeException> in class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 556,
        "description": "Add Attribute Modifier final in attribute private errorRef : AtomicReference<RuntimeException> from class rx.observables.BlockingObservableTest.InterruptionTests",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 426,
        "description": "Extract Attribute private singleAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 448,
        "description": "Extract Attribute private forEachAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 465,
        "description": "Extract Attribute private firstAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 482,
        "description": "Extract Attribute private lastAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 499,
        "description": "Extract Attribute private latestAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 513,
        "description": "Extract Attribute private nextAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 527,
        "description": "Extract Attribute private getIteratorAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 544,
        "description": "Extract Attribute private toIterableAction : Action1<BlockingObservable<Void>> in class rx.observables.BlockingObservableTest",
        "type": "Extract Attribute"
      }
    ],
    "filePath": "src/test/java/rx/observables/BlockingObservableTest.java",
    "commit": "https://github.com/ReactiveX/RxJava/commit/8ad226067434cd39ce493b336bd0659778625959",
    "repository": "https://github.com/ReactiveX/RxJava.git",
    "fileType": "test"
  },
  {
    "fileName": "CascadingStats.java",
    "refactorings": [{
      "rightSideLineNumber": 656,
      "description": "Extract Method protected logWarn(message String, arguments Object...) : void extracted from protected fireListeners(fromStatus CascadingStats.Status, toStatus CascadingStats.Status) : void in class cascading.stats.CascadingStats",
      "type": "Extract Method"
    }],
    "filePath": "cascading-core/src/main/java/cascading/stats/CascadingStats.java",
    "commit": "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
    "repository": "https://github.com/cwensel/cascading.git",
    "fileType": "main"
  },
  {
    "fileName": "HadoopNodeStats.java",
    "refactorings": [{
      "rightSideLineNumber": 130,
      "description": "Extract Variable sliceStats : HadoopSliceStats in method protected addTaskStats(taskReports TaskReport[], skipLast boolean) : void from class cascading.stats.hadoop.HadoopNodeStats",
      "type": "Extract Variable"
    }],
    "filePath": "cascading-hadoop/src/main/java/cascading/stats/hadoop/HadoopNodeStats.java",
    "commit": "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
    "repository": "https://github.com/cwensel/cascading.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseHadoopNodeStats.java",
    "refactorings": [],
    "filePath": "cascading-hadoop/src/main/shared/cascading/stats/hadoop/BaseHadoopNodeStats.java",
    "commit": "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
    "repository": "https://github.com/cwensel/cascading.git",
    "fileType": "main"
  },
  {
    "fileName": "HadoopNodeStats.java",
    "refactorings": [{
      "rightSideLineNumber": 164,
      "description": "Extract Variable sliceStats : HadoopSliceStats in method protected addTaskStats(taskReports TaskReport[], skipLast boolean) : void from class cascading.stats.hadoop.HadoopNodeStats",
      "type": "Extract Variable"
    }],
    "filePath": "cascading-hadoop2-mr1/src/main/java/cascading/stats/hadoop/HadoopNodeStats.java",
    "commit": "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
    "repository": "https://github.com/cwensel/cascading.git",
    "fileType": "main"
  },
  {
    "fileName": "TezNodeStats.java",
    "refactorings": [],
    "filePath": "cascading-hadoop2-tez/src/main/java/cascading/stats/tez/TezNodeStats.java",
    "commit": "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
    "repository": "https://github.com/cwensel/cascading.git",
    "fileType": "main"
  },
  {
    "fileName": "TezStatsPlatformTest.java",
    "refactorings": [],
    "filePath": "cascading-hadoop2-tez/src/test/java/cascading/stats/tez/TezStatsPlatformTest.java",
    "commit": "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
    "repository": "https://github.com/cwensel/cascading.git",
    "fileType": "test"
  },
  {
    "fileName": "SetFunction.java",
    "refactorings": [],
    "filePath": "src/hsqldb19b3/org/hsqldb_voltpatches/SetFunction.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/deb8e5ca64fcf633edbd89523af472da813b6772",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "TestApproxCountDistinctSuite.java",
    "refactorings": [{
      "rightSideLineNumber": 93,
      "description": "Extract Method private getNormalValue(r Random, magnitude double, min long, max long) : long extracted from private fillTable(client Client, tbl String) : void in class org.voltdb.regressionsuites.TestApproxCountDistinctSuite",
      "type": "Extract Method"
    }],
    "filePath": "tests/frontend/org/voltdb/regressionsuites/TestApproxCountDistinctSuite.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/deb8e5ca64fcf633edbd89523af472da813b6772",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultFullHttpRequest.java",
    "refactorings": [],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/http/DefaultFullHttpRequest.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttpHeaders.java",
    "refactorings": [
      {
        "rightSideLineNumber": 343,
        "description": "Rename Class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter renamed to io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 292,
        "description": "Rename Class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersNameConverter renamed to io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 68,
        "description": "Rename Parameter nameConverter : NameConverter<CharSequence> to nameValidator : DefaultHeaders.NameValidator<CharSequence> in method protected DefaultHttpHeaders(validate boolean, nameValidator DefaultHeaders.NameValidator<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.http.DefaultHttpHeaders",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 68,
        "description": "Change Parameter Type nameConverter : NameConverter<CharSequence> to nameValidator : DefaultHeaders.NameValidator<CharSequence> in method protected DefaultHttpHeaders(validate boolean, nameValidator DefaultHeaders.NameValidator<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.http.DefaultHttpHeaders",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 356,
        "description": "Inline Method private validateValue(seq CharSequence) : void inlined to public convertObject(value Object) : CharSequence in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 399,
        "description": "Rename Parameter c : char to character : char in method private validateValueChar(seq CharSequence, state int, character char) : int from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 362,
        "description": "Reorder Parameter [state : int, c : char, seq : CharSequence] to [seq : CharSequence, state : int, character : char] in method private validateValueChar(seq CharSequence, state int, character char) : int from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
        "type": "Reorder Parameter"
      },
      {
        "rightSideLineNumber": 292,
        "description": "Add Class Modifier final in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
        "type": "Add Class Modifier"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Rename Method private validateName(name CharSequence) : void renamed to public validate(name CharSequence) : void in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 311,
        "description": "Inline Method private validateNameChar(character int, seq CharSequence) : void inlined to public validate(name CharSequence) : void in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 306,
        "description": "Rename Variable c : char to character : char in method public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Add Method Annotation @Override in method public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Change Method Access Modifier private to public in method public validate(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderNameValidator",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Remove Method Modifier static in method private validateName(name CharSequence) : void from class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersNameConverter",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 320,
        "description": "Extract Superclass io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverter from classes [io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter]",
        "type": "Extract Superclass"
      }
    ],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultLastHttpContent.java",
    "refactorings": [],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/http/DefaultLastHttpContent.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpHeaderUtil.java",
    "refactorings": [],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderUtil.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpHeadersEncoder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 28,
        "description": "Rename Method public visit(entry Entry<CharSequence,CharSequence>) : boolean renamed to public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void in class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 34,
        "description": "Parameterize Variable name : CharSequence to name : CharSequence in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 28,
        "description": "Remove Variable Modifier final in variable name : CharSequence in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 38,
        "description": "Parameterize Variable value : CharSequence to value : CharSequence in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 28,
        "description": "Remove Variable Modifier final in variable value : CharSequence in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Parameterize Variable buf : ByteBuf to buf : ByteBuf in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 28,
        "description": "Remove Variable Modifier final in variable buf : ByteBuf in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 28,
        "description": "Split Parameter entry : Entry<CharSequence,CharSequence> to [name : CharSequence, value : CharSequence] in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Split Parameter"
      },
      {
        "rightSideLineNumber": 28,
        "description": "Change Return Type boolean to void in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 28,
        "description": "Remove Method Annotation @Override in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 28,
        "description": "Add Method Modifier static in method public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void from class io.netty.handler.codec.http.HttpHeadersEncoder",
        "type": "Add Method Modifier"
      }
    ],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/http/HttpHeadersEncoder.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpObjectEncoder.java",
    "refactorings": [],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultSpdyHeaders.java",
    "refactorings": [{
      "rightSideLineNumber": 246,
      "description": "Replace Anonymous With Class io.netty.handler.codec.spdy.DefaultSpdyHeaders.SPDY_VALUE_CONVERTER.new DefaultTextValueTypeConverter with io.netty.handler.codec.spdy.DefaultSpdyHeaders.HeaderValueConverterAndValidator",
      "type": "Replace Anonymous With Class"
    }],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/spdy/DefaultSpdyHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "SpdyCodecUtil.java",
    "refactorings": [],
    "filePath": "codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttp2Headers.java",
    "refactorings": [{
      "rightSideLineNumber": 29,
      "description": "Inline Method public DefaultHttp2Headers(forceKeyToLower boolean) inlined to public DefaultHttp2Headers() in class io.netty.handler.codec.http2.DefaultHttp2Headers",
      "type": "Inline Method"
    }],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Headers.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttp2HeadersEncoder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 69,
        "description": "Inline Variable name : ByteString in method public encodeHeaders(headers Http2Headers, buffer ByteBuf) : void from class io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Inline Variable value : ByteString in method public encodeHeaders(headers Http2Headers, buffer ByteBuf) : void from class io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Merge Variable [name : ByteString, value : ByteString] to header : Entry<ByteString,ByteString> in method public encodeHeaders(headers Http2Headers, buffer ByteBuf) : void from class io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder",
        "type": "Merge Variable"
      }
    ],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersEncoder.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "Http2Headers.java",
    "refactorings": [],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2Headers.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 371,
        "description": "Rename Method public visit(entry Entry<ByteString,ByteString>) : boolean renamed to public translate(entry Entry<ByteString,ByteString>) : void in class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 371,
        "description": "Change Return Type boolean to void in method public translate(entry Entry<ByteString,ByteString>) : void from class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 371,
        "description": "Remove Method Annotation @Override in method public visit(entry Entry<ByteString,ByteString>) : boolean from class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 247,
        "description": "Rename Variable visitor : Http2ToHttpHeaderTranslator to translator : Http2ToHttpHeaderTranslator in method public addHttp2ToHttpHeaders(streamId int, sourceHeaders Http2Headers, destinationMessage FullHttpMessage, addToTrailer boolean) : void from class io.netty.handler.codec.http2.HttpUtil",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 318,
        "description": "Localize Parameter entry : Entry<CharSequence,CharSequence> to entry : Entry<CharSequence,CharSequence> in method public toHttp2Headers(inHeaders HttpHeaders) : Http2Headers from class io.netty.handler.codec.http2.HttpUtil",
        "type": "Localize Parameter"
      }
    ],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/HttpUtil.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "InboundHttp2ToHttpPriorityAdapter.java",
    "refactorings": [{
      "rightSideLineNumber": 139,
      "description": "Localize Parameter entry : Entry<CharSequence,CharSequence> to entry : Entry<CharSequence,CharSequence> in method private addHttpHeadersToHttp2Headers(httpHeaders HttpHeaders, http2Headers Http2Headers) : void from class io.netty.handler.codec.http2.InboundHttp2ToHttpPriorityAdapter",
      "type": "Localize Parameter"
    }],
    "filePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpPriorityAdapter.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultStompHeaders.java",
    "refactorings": [],
    "filePath": "codec-stomp/src/main/java/io/netty/handler/codec/stomp/DefaultStompHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "StompSubframeEncoder.java",
    "refactorings": [{
      "rightSideLineNumber": 70,
      "description": "Extract Variable headersEncoder : AsciiHeadersEncoder in method private encodeFrame(frame StompHeadersSubframe, ctx ChannelHandlerContext) : ByteBuf from class io.netty.handler.codec.stomp.StompSubframeEncoder",
      "type": "Extract Variable"
    }],
    "filePath": "codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeEncoder.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "AsciiHeadersEncoder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 80,
        "description": "Rename Method public visit(entry Entry<CharSequence,CharSequence>) : boolean renamed to public encode(entry Entry<CharSequence,CharSequence>) : void in class io.netty.handler.codec.AsciiHeadersEncoder",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 80,
        "description": "Change Return Type boolean to void in method public encode(entry Entry<CharSequence,CharSequence>) : void from class io.netty.handler.codec.AsciiHeadersEncoder",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 80,
        "description": "Remove Method Annotation @Override in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.AsciiHeadersEncoder",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 80,
        "description": "Remove Thrown Exception Type Exception in method public visit(entry Entry<CharSequence,CharSequence>) : boolean from class io.netty.handler.codec.AsciiHeadersEncoder",
        "type": "Remove Thrown Exception Type"
      }
    ],
    "filePath": "codec/src/main/java/io/netty/handler/codec/AsciiHeadersEncoder.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryHeaders.java",
    "refactorings": [],
    "filePath": "codec/src/main/java/io/netty/handler/codec/BinaryHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "ConvertibleHeaders.java",
    "refactorings": [],
    "filePath": "codec/src/main/java/io/netty/handler/codec/ConvertibleHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultBinaryHeaders.java",
    "refactorings": [
      {
        "rightSideLineNumber": 250,
        "description": "Add Attribute Modifier static in attribute private DEFAULT_CHARSET : Charset from class io.netty.handler.codec.DefaultBinaryHeaders.ByteStringConverter",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 247,
        "description": "Replace Anonymous With Class io.netty.handler.codec.DefaultBinaryHeaders.OBJECT_TO_BYTE.new ValueConverter<ByteString> with io.netty.handler.codec.DefaultBinaryHeaders.ByteStringConverter",
        "type": "Replace Anonymous With Class"
      },
      {
        "rightSideLineNumber": 32,
        "description": "Extract Method public DefaultBinaryHeaders(map Map<ByteString,Object>) extracted from public DefaultBinaryHeaders() in class io.netty.handler.codec.DefaultBinaryHeaders",
        "type": "Extract Method"
      }
    ],
    "filePath": "codec/src/main/java/io/netty/handler/codec/DefaultBinaryHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultConvertibleHeaders.java",
    "refactorings": [
      {
        "rightSideLineNumber": 31,
        "description": "Merge Parameter [keyComparator : Comparator<? super UnconvertedType>, valueComparator : Comparator<? super UnconvertedType>] to map : Map<UnconvertedType,Object> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) from class io.netty.handler.codec.DefaultConvertibleHeaders",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Add Parameter nameValidator : NameValidator<UnconvertedType> in method public DefaultConvertibleHeaders(map Map<UnconvertedType,Object>, nameValidator NameValidator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) from class io.netty.handler.codec.DefaultConvertibleHeaders",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Remove Parameter hashCodeGenerator : HashCodeGenerator<UnconvertedType> in method public DefaultConvertibleHeaders(keyComparator Comparator<? super UnconvertedType>, valueComparator Comparator<? super UnconvertedType>, hashCodeGenerator HashCodeGenerator<UnconvertedType>, valueConverter ValueConverter<UnconvertedType>, typeConverter TypeConverter<UnconvertedType,ConvertedType>) from class io.netty.handler.codec.DefaultConvertibleHeaders",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "codec/src/main/java/io/netty/handler/codec/DefaultConvertibleHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHeaders.java",
    "refactorings": [
      {
        "rightSideLineNumber": 584,
        "description": "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.DefaultHeaders",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 912,
        "description": "Rename Method private convertName(name T) : T renamed to private validateName(name T) : void in class io.netty.handler.codec.DefaultHeaders",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Change Variable Type e : HeaderEntry to value : Object in method public get(name T) : T from class io.netty.handler.codec.DefaultHeaders",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Rename Variable e : HeaderEntry to value : Object in method public get(name T) : T from class io.netty.handler.codec.DefaultHeaders",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public get(name T) : T from class io.netty.handler.codec.DefaultHeaders",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Change Variable Type value : T to value : Object in method public getAndRemove(name T) : T from class io.netty.handler.codec.DefaultHeaders",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 81,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public getAndRemove(name T) : T from class io.netty.handler.codec.DefaultHeaders",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Change Variable Type e : HeaderEntry to value : Object in method public getAll(name T) : List<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Rename Variable e : HeaderEntry to value : Object in method public getAll(name T) : List<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public getAll(name T) : List<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public contains(name T, value T) : boolean from class io.netty.handler.codec.DefaultHeaders",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 360,
        "description": "Rename Variable v : T to value : T in method public set(name T, values Iterable<? extends T>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 397,
        "description": "Inline Variable converted : T in method public setObject(name T, values Iterable<?>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 395,
        "description": "Rename Variable o : Object to value : Object in method public setObject(name T, values Iterable<?>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 506,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public iterator() : Iterator<Entry<T,T>> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 856,
        "description": "Remove Variable Annotation @SuppressWarnings(\"unchecked\") in variable h2 : DefaultHeaders<T> in method public equals(o Object) : boolean from class io.netty.handler.codec.DefaultHeaders",
        "type": "Remove Variable Annotation"
      },
      {
        "rightSideLineNumber": 862,
        "description": "Rename Variable h2 : DefaultHeaders<T> to other : DefaultHeaders<T> in method public equals(o Object) : boolean from class io.netty.handler.codec.DefaultHeaders",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 856,
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public equals(o Object) : boolean from class io.netty.handler.codec.DefaultHeaders",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 336,
        "description": "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public add(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 474,
        "description": "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public set(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.DefaultHeaders",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 912,
        "description": "Change Return Type T to void in method private validateName(name T) : void from class io.netty.handler.codec.DefaultHeaders",
        "type": "Change Return Type"
      }
    ],
    "filePath": "codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultTextHeaders.java",
    "refactorings": [
      {
        "rightSideLineNumber": 506,
        "description": "Rename Class io.netty.handler.codec.DefaultTextHeaders.DefaultTextValueTypeConverter renamed to io.netty.handler.codec.DefaultTextHeaders.CharSequenceConverter",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 491,
        "description": "Replace Anonymous With Class io.netty.handler.codec.DefaultTextHeaders.CHARSEQUENCE_TO_STRING_CONVERTER.new TypeConverter<CharSequence,String> with io.netty.handler.codec.DefaultTextHeaders.CharSequenceToStringConverter",
        "type": "Replace Anonymous With Class"
      },
      {
        "rightSideLineNumber": 444,
        "description": "Replace Attribute With Variable DEFAULT_VALUE_SIZE : int to lengthEstimate : int in method private commaSeparate(escaper CsvValueEscaper<T>, values T...) : CharSequence from class io.netty.handler.codec.DefaultTextHeaders.SingleHeaderValuesComposer",
        "type": "Replace Attribute With Variable"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Inline Method private comparator(ignoreCase boolean) : Comparator<CharSequence> inlined to public contains(name CharSequence, value CharSequence, ignoreCase boolean) : boolean in class io.netty.handler.codec.DefaultTextHeaders",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 41,
        "description": "Rename Parameter ignoreCase : boolean to singleHeaderFields : boolean in method public DefaultTextHeaders(singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Add Parameter map : Map<CharSequence,Object> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Add Parameter nameValidator : NameValidator<CharSequence> in method public DefaultTextHeaders(map Map<CharSequence,Object>, nameValidator NameValidator<CharSequence>, valueConverter ValueConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Remove Parameter ignoreCase : boolean in method public DefaultTextHeaders(ignoreCase boolean, valueConverter ValueConverter<CharSequence>, nameConverter NameConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Remove Parameter nameConverter : NameConverter<CharSequence> in method public DefaultTextHeaders(ignoreCase boolean, valueConverter ValueConverter<CharSequence>, nameConverter NameConverter<CharSequence>, singleHeaderFields boolean) from class io.netty.handler.codec.DefaultTextHeaders",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 506,
        "description": "Change Class Access Modifier public to protected in class io.netty.handler.codec.DefaultTextHeaders.CharSequenceConverter",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 591,
        "description": "Change Return Type AsciiString to CharSequence in method public convertTimeMillis(value long) : CharSequence from class io.netty.handler.codec.DefaultTextHeaders.CharSequenceConverter",
        "type": "Change Return Type"
      }
    ],
    "filePath": "codec/src/main/java/io/netty/handler/codec/DefaultTextHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyConvertibleHeaders.java",
    "refactorings": [{
      "rightSideLineNumber": 59,
      "description": "Inline Method public entriesConverted() : List<Entry<ConvertedType,ConvertedType>> inlined to public iteratorConverted() : Iterator<Entry<ConvertedType,ConvertedType>> in class io.netty.handler.codec.EmptyConvertibleHeaders",
      "type": "Inline Method"
    }],
    "filePath": "codec/src/main/java/io/netty/handler/codec/EmptyConvertibleHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyHeaders.java",
    "refactorings": [
      {
        "rightSideLineNumber": 90,
        "description": "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.EmptyHeaders",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 492,
        "description": "Inline Method public entries() : List<Entry<T,T>> inlined to public iterator() : Iterator<Entry<T,T>> in class io.netty.handler.codec.EmptyHeaders",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 296,
        "description": "Rename Parameter comparator : Comparator<? super T> to valueComparator : Comparator<? super T> in method public contains(name T, value T, valueComparator Comparator<? super T>) : boolean from class io.netty.handler.codec.EmptyHeaders",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 391,
        "description": "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public add(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.EmptyHeaders",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 471,
        "description": "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public set(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.EmptyHeaders",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 476,
        "description": "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public setAll(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.EmptyHeaders",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "codec/src/main/java/io/netty/handler/codec/EmptyHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyTextHeaders.java",
    "refactorings": [],
    "filePath": "codec/src/main/java/io/netty/handler/codec/EmptyTextHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "Headers.java",
    "refactorings": [
      {
        "rightSideLineNumber": 982,
        "description": "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public set(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.Headers",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 990,
        "description": "Change Parameter Type headers : Headers<T> to headers : Headers<? extends T> in method public setAll(headers Headers<? extends T>) : Headers<T> from class io.netty.handler.codec.Headers",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "codec/src/main/java/io/netty/handler/codec/Headers.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "TextHeaders.java",
    "refactorings": [],
    "filePath": "codec/src/main/java/io/netty/handler/codec/TextHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "AsciiString.java",
    "refactorings": [
      {
        "rightSideLineNumber": 87,
        "description": "Extract Variable c1 : char in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Change Variable Type c2 : int to c2 : char in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 96,
        "description": "Change Variable Type c1 : int to c1 : char in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Rename Variable length1 : int to len1 : int in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 97,
        "description": "Rename Variable result : int to delta : int in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Rename Variable v1 : byte to c1 : byte in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Rename Variable v2 : byte to c2 : byte in method public compare(o1 CharSequence, o2 CharSequence) : int from class io.netty.util.AsciiString.CHARSEQUENCE_CASE_INSENSITIVE_ORDER.new Comparator<CharSequence>",
        "type": "Rename Variable"
      }
    ],
    "filePath": "common/src/main/java/io/netty/util/AsciiString.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpUploadClient.java",
    "refactorings": [],
    "filePath": "example/src/main/java/io/netty/example/http/upload/HttpUploadClient.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "ExampleHeaders.java",
    "refactorings": [],
    "filePath": "microbench/src/main/java/io/netty/microbench/headers/ExampleHeaders.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "HeadersBenchmark.java",
    "refactorings": [],
    "filePath": "microbench/src/main/java/io/netty/microbench/headers/HeadersBenchmark.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "microbench/src/main/java/io/netty/microbench/headers/package-info.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHttpHeadersTest.java",
    "refactorings": [],
    "filePath": "codec-http/src/test/java/io/netty/handler/codec/http/DefaultHttpHeadersTest.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "SpdySessionHandlerTest.java",
    "refactorings": [],
    "filePath": "codec-http/src/test/java/io/netty/handler/codec/spdy/SpdySessionHandlerTest.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultHttp2HeadersTest.java",
    "refactorings": [],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2HeadersTest.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "Http2TestUtil.java",
    "refactorings": [{
      "rightSideLineNumber": 62,
      "description": "Rename Method public as(value byte[]) : ByteString renamed to public bs(value byte[]) : ByteString in class io.netty.handler.codec.http2.Http2TestUtil",
      "type": "Rename Method"
    }],
    "filePath": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2TestUtil.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "StompTestConstants.java",
    "refactorings": [],
    "filePath": "codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompTestConstants.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultBinaryHeadersTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 205,
        "description": "Rename Method public setAllShouldMergeHeaders() : void renamed to public setAllShouldOverwriteSomeAndLeaveOthersUntouched() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 194,
        "description": "Rename Method public setShouldReplacePreviousValues() : void renamed to public setShouldOverWritePreviousValue() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 201,
        "description": "Inline Variable list : List<ByteString> in method public setShouldReplacePreviousValues() : void from class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 199,
        "description": "Rename Variable h1 : DefaultBinaryHeaders to headers : DefaultBinaryHeaders in method public setShouldOverWritePreviousValue() : void from class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 430,
        "description": "Rename Method private as(value String) : AsciiString renamed to private bs(value String) : ByteString in class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 430,
        "description": "Change Return Type AsciiString to ByteString in method private bs(value String) : ByteString from class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "codec/src/test/java/io/netty/handler/codec/DefaultBinaryHeadersTest.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultTextHeadersTest.java",
    "refactorings": [],
    "filePath": "codec/src/test/java/io/netty/handler/codec/DefaultTextHeadersTest.java",
    "commit": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "repository": "https://github.com/netty/netty.git",
    "fileType": "test"
  },
  {
    "fileName": "PropertyRule.java",
    "refactorings": [],
    "filePath": "src/platform/src/test/java/org/geoserver/util/PropertyRule.java",
    "commit": "https://github.com/geoserver/geoserver/commit/07c26a3a1dd6fcc2494c2d755ee5a2753e0df87c",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "WFSURIHandlerTest.java",
    "refactorings": [],
    "filePath": "src/wfs/src/test/java/org/geoserver/wfs/xml/WFSURIHandlerTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/07c26a3a1dd6fcc2494c2d755ee5a2753e0df87c",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "Expression.java",
    "refactorings": [],
    "filePath": "src/hsqldb19b3/org/hsqldb_voltpatches/Expression.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/e2de877a29217a50afbd142454a330e423d86045",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "SetFunction.java",
    "refactorings": [],
    "filePath": "src/hsqldb19b3/org/hsqldb_voltpatches/SetFunction.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/e2de877a29217a50afbd142454a330e423d86045",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "Tokens.java",
    "refactorings": [],
    "filePath": "src/hsqldb19b3/org/hsqldb_voltpatches/Tokens.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/e2de877a29217a50afbd142454a330e423d86045",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "PlannerTestCase.java",
    "refactorings": [],
    "filePath": "tests/frontend/org/voltdb/planner/PlannerTestCase.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/e2de877a29217a50afbd142454a330e423d86045",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "TestPlansApproxCountDistinct.java",
    "refactorings": [],
    "filePath": "tests/frontend/org/voltdb/planner/TestPlansApproxCountDistinct.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/e2de877a29217a50afbd142454a330e423d86045",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "AaptResourceCollector.java",
    "refactorings": [{
      "rightSideLineNumber": 52,
      "description": "Extract Method package getEnumerator(rType RType) : ResourceIdEnumerator extracted from public addIntResourceIfNotPresent(rType RType, name String) : void in class com.facebook.buck.android.aapt.AaptResourceCollector",
      "type": "Extract Method"
    }],
    "filePath": "src/com/facebook/buck/android/aapt/AaptResourceCollector.java",
    "commit": "https://github.com/facebook/buck/commit/6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "MiniAaptTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/android/aapt/MiniAaptTest.java",
    "commit": "https://github.com/facebook/buck/commit/6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "Convert.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1078,
        "description": "Extract Method private millis(temporal Temporal) : long extracted from public from(from Object) : U in class org.jooq.tools.Convert.ConvertAll",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1078,
        "description": "Extract Method private millis(temporal Temporal) : long extracted from public from(from Object) : U in class org.jooq.tools.Convert.ConvertAll",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1055,
        "description": "Parameterize Variable temporal : Temporal to temporal : Temporal in method private millis(temporal Temporal) : long from class org.jooq.tools.Convert.ConvertAll",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 1055,
        "description": "Parameterize Variable temporal : Temporal to temporal : Temporal in method private millis(temporal Temporal) : long from class org.jooq.tools.Convert.ConvertAll",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "jOOQ/src/main/java/org/jooq/tools/Convert.java",
    "commit": "https://github.com/jOOQ/jOOQ/commit/58a4e74d28073e7c6f15d1f225ac1c2fd9aa4357",
    "repository": "https://github.com/jOOQ/jOOQ.git",
    "fileType": "main"
  },
  {
    "fileName": "ConvertAllTest.java",
    "refactorings": [],
    "filePath": "jOOQ/src/test/java/org/jooq/test/ConvertAllTest.java",
    "commit": "https://github.com/jOOQ/jOOQ/commit/58a4e74d28073e7c6f15d1f225ac1c2fd9aa4357",
    "repository": "https://github.com/jOOQ/jOOQ.git",
    "fileType": "test"
  },
  {
    "fileName": "PojoCodec.java",
    "refactorings": [],
    "filePath": "spring-integration-core/src/main/java/org/springframework/integration/codec/kryo/PojoCodec.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "CompositeCodecTests.java",
    "refactorings": [],
    "filePath": "spring-integration-core/src/test/java/org/springframework/integration/codec/kryo/CompositeCodecTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "ImapIdleIntegrationTests.java",
    "refactorings": [],
    "filePath": "spring-integration-mail/src/test/java/org/springframework/integration/mail/config/ImapIdleIntegrationTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "Log4jLevelAdjuster.java",
    "refactorings": [],
    "filePath": "spring-integration-test/src/main/java/org/springframework/integration/test/rule/Log4jLevelAdjuster.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractCellTableBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 268,
        "description": "Extract Method protected addRowAttributes(row TableRowBuilder, rowValue T) : void extracted from public startRow() : TableRowBuilder in class com.google.gwt.user.cellview.client.AbstractCellTableBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 268,
        "description": "Extract Method public startRow(rowValue T) : TableRowBuilder extracted from public startRow() : TableRowBuilder in class com.google.gwt.user.cellview.client.AbstractCellTableBuilder",
        "type": "Extract Method"
      }
    ],
    "filePath": "user/src/com/google/gwt/user/cellview/client/AbstractCellTableBuilder.java",
    "commit": "https://github.com/gwtproject/gwt/commit/892d1760c8e4c76c369cd5ec1eaed215d3a22c8a",
    "repository": "https://github.com/gwtproject/gwt.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultCellTableBuilder.java",
    "refactorings": [],
    "filePath": "user/src/com/google/gwt/user/cellview/client/DefaultCellTableBuilder.java",
    "commit": "https://github.com/gwtproject/gwt/commit/892d1760c8e4c76c369cd5ec1eaed215d3a22c8a",
    "repository": "https://github.com/gwtproject/gwt.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractCellTableTestBase.java",
    "refactorings": [],
    "filePath": "user/test/com/google/gwt/user/cellview/client/AbstractCellTableTestBase.java",
    "commit": "https://github.com/gwtproject/gwt/commit/892d1760c8e4c76c369cd5ec1eaed215d3a22c8a",
    "repository": "https://github.com/gwtproject/gwt.git",
    "fileType": "test"
  },
  {
    "fileName": "HBaseImport.java",
    "refactorings": [
      {
        "rightSideLineNumber": 88,
        "description": "Change Attribute Type rdbmsStore : RawStore to rdbmsStore : ThreadLocal<RawStore> in class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Change Attribute Type hbaseStore : RawStore to hbaseStore : ThreadLocal<RawStore> in class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 459,
        "description": "Extract Method private copyOneFunction(dbName String, funcName String) : void extracted from private copyFunctions() : void in class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 230,
        "description": "Add Thrown Exception Type InterruptedException in method package run() : void from class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 274,
        "description": "Extract Variable toCopy : List<String> in method private copyRoles() : void from class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 284,
        "description": "Extract Variable toCopy : List<String> in method private copyDbs() : void from class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 293,
        "description": "Add Thrown Exception Type InterruptedException in method private copyTables() : void from class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 359,
        "description": "Add Thrown Exception Type InterruptedException in method private copyPartitions() : void from class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 493,
        "description": "Change Return Type HBaseImport to void in method package setConnections(rdbms RawStore, hbase RawStore) : void from class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "type": "Change Return Type"
      }
    ],
    "filePath": "metastore/src/java/org/apache/hadoop/hive/metastore/hbase/HBaseImport.java",
    "commit": "https://github.com/apache/hive/commit/0fa45e4a562fc2586b1ef06a88e9c186a0835316",
    "repository": "https://github.com/apache/hive.git",
    "fileType": "main"
  },
  {
    "fileName": "TestHBaseImport.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Rename Method public doImport() : void renamed to public importAll() : void in class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 504,
        "description": "Extract Method private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void extracted from public doImport() : void in class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 491,
        "description": "Replace Variable With Attribute tableNames : String[] to tableNames : String[] in method private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void from class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 488,
        "description": "Replace Variable With Attribute partVals : String[] to partVals : String[] in method private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void from class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 464,
        "description": "Replace Generic With Diamond ArrayList<FieldSchema> with ArrayList<> in method private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void from class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 464,
        "description": "Replace Generic With Diamond ArrayList<FieldSchema> with ArrayList<> in method private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void from class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 135,
        "description": "Replace Variable With Attribute tableNames : String[] to tableNames : String[] in method public importAll() : void from class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 129,
        "description": "Replace Variable With Attribute partVals : String[] to partVals : String[] in method public importAll() : void from class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 139,
        "description": "Replace Variable With Attribute funcNames : String[] to funcNames : String[] in method public importAll() : void from class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "type": "Replace Variable With Attribute"
      }
    ],
    "filePath": "itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/hbase/TestHBaseImport.java",
    "commit": "https://github.com/apache/hive/commit/0fa45e4a562fc2586b1ef06a88e9c186a0835316",
    "repository": "https://github.com/apache/hive.git",
    "fileType": "test"
  },
  {
    "fileName": "ObjectGraphService.java",
    "refactorings": [],
    "filePath": "mortar-dagger1/src/main/java/mortar/dagger1support/ObjectGraphService.java",
    "commit": "https://github.com/square/mortar/commit/72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
    "repository": "https://github.com/square/mortar.git",
    "fileType": "main"
  },
  {
    "fileName": "BundleServiceRunner.java",
    "refactorings": [],
    "filePath": "mortar/src/main/java/mortar/bundler/BundleServiceRunner.java",
    "commit": "https://github.com/square/mortar/commit/72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
    "repository": "https://github.com/square/mortar.git",
    "fileType": "main"
  },
  {
    "fileName": "ObjectGraphServiceTest.java",
    "refactorings": [],
    "filePath": "mortar-dagger1/src/test/java/mortar/ObjectGraphServiceTest.java",
    "commit": "https://github.com/square/mortar/commit/72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
    "repository": "https://github.com/square/mortar.git",
    "fileType": "test"
  },
  {
    "fileName": "MortarScopeTest.java",
    "refactorings": [],
    "filePath": "mortar/src/test/java/mortar/MortarScopeTest.java",
    "commit": "https://github.com/square/mortar/commit/72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
    "repository": "https://github.com/square/mortar.git",
    "fileType": "test"
  },
  {
    "fileName": "BundleServiceTest.java",
    "refactorings": [],
    "filePath": "mortar/src/test/java/mortar/bundler/BundleServiceTest.java",
    "commit": "https://github.com/square/mortar/commit/72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
    "repository": "https://github.com/square/mortar.git",
    "fileType": "test"
  },
  {
    "fileName": "InstrumentedResourceMethodApplicationListener.java",
    "refactorings": [
      {
        "rightSideLineNumber": 82,
        "description": "Change Attribute Type timers : ImmutableMap<Method,Timer> to timers : ConcurrentMap<Method,Timer> in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener.TimerRequestEventListener",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 86,
        "description": "Change Parameter Type timers : ImmutableMap<Method,Timer> to timers : ConcurrentMap<Method,Timer> in method public TimerRequestEventListener(timers ConcurrentMap<Method,Timer>) from class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener.TimerRequestEventListener",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 106,
        "description": "Change Attribute Type meters : ImmutableMap<Method,Meter> to meters : ConcurrentMap<Method,Meter> in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener.MeterRequestEventListener",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Change Parameter Type meters : ImmutableMap<Method,Meter> to meters : ConcurrentMap<Method,Meter> in method public MeterRequestEventListener(meters ConcurrentMap<Method,Meter>) from class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener.MeterRequestEventListener",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Change Attribute Type exceptionMeters : ImmutableMap<Method,ExceptionMeterMetric> to exceptionMeters : ConcurrentMap<Method,ExceptionMeterMetric> in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener.ExceptionMeterRequestEventListener",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 128,
        "description": "Change Parameter Type exceptionMeters : ImmutableMap<Method,ExceptionMeterMetric> to exceptionMeters : ConcurrentMap<Method,ExceptionMeterMetric> in method public ExceptionMeterRequestEventListener(exceptionMeters ConcurrentMap<Method,ExceptionMeterMetric>) from class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener.ExceptionMeterRequestEventListener",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Change Attribute Type timers : ImmutableMap<Method,Timer> to timers : ConcurrentMap<Method,Timer> in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Change Attribute Type meters : ImmutableMap<Method,Meter> to meters : ConcurrentMap<Method,Meter> in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Change Attribute Type exceptionMeters : ImmutableMap<Method,ExceptionMeterMetric> to exceptionMeters : ConcurrentMap<Method,ExceptionMeterMetric> in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Extract Method private registerMetricsForModel(resourceModel ResourceModel) : void extracted from public onEvent(event ApplicationEvent) : void in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 211,
        "description": "Remove Parameter builder : ImmutableMap.Builder<Method,Timer> in method private registerTimedAnnotations(builder ImmutableMap.Builder<Method,Timer>, method ResourceMethod) : void from class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 220,
        "description": "Remove Parameter builder : ImmutableMap.Builder<Method,Meter> in method private registerMeteredAnnotations(builder ImmutableMap.Builder<Method,Meter>, method ResourceMethod) : void from class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 229,
        "description": "Remove Parameter builder : ImmutableMap.Builder<Method,ExceptionMeterMetric> in method private registerExceptionMeteredAnnotations(builder ImmutableMap.Builder<Method,ExceptionMeterMetric>, method ResourceMethod) : void from class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "metrics-jersey2/src/main/java/io/dropwizard/metrics/jersey2/InstrumentedResourceMethodApplicationListener.java",
    "commit": "https://github.com/dropwizard/metrics/commit/2331fe19ea88a22de32f15375de8118226eaa1e6",
    "repository": "https://github.com/dropwizard/metrics.git",
    "fileType": "main"
  },
  {
    "fileName": "SingletonMetricsJerseyTest.java",
    "refactorings": [],
    "filePath": "metrics-jersey2/src/test/java/io/dropwizard/metrics/jersey2/SingletonMetricsJerseyTest.java",
    "commit": "https://github.com/dropwizard/metrics/commit/2331fe19ea88a22de32f15375de8118226eaa1e6",
    "repository": "https://github.com/dropwizard/metrics.git",
    "fileType": "test"
  },
  {
    "fileName": "InstrumentedResource.java",
    "refactorings": [],
    "filePath": "metrics-jersey2/src/test/java/io/dropwizard/metrics/jersey2/resources/InstrumentedResource.java",
    "commit": "https://github.com/dropwizard/metrics/commit/2331fe19ea88a22de32f15375de8118226eaa1e6",
    "repository": "https://github.com/dropwizard/metrics.git",
    "fileType": "test"
  },
  {
    "fileName": "InstrumentedSubResource.java",
    "refactorings": [],
    "filePath": "metrics-jersey2/src/test/java/io/dropwizard/metrics/jersey2/resources/InstrumentedSubResource.java",
    "commit": "https://github.com/dropwizard/metrics/commit/2331fe19ea88a22de32f15375de8118226eaa1e6",
    "repository": "https://github.com/dropwizard/metrics.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeConstrainedMappingJackson2HttpMessageConverterUnitTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 53,
        "description": "Extract Method private assertCanRead(converter GenericHttpMessageConverter<Object>, type Class<?>, expected boolean) : void extracted from public canReadTypeIfAssignableToConfiguredType() : void in class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Extract Method private assertCanWrite(converter GenericHttpMessageConverter<Object>, type Class<?>, expected boolean) : void extracted from public canWriteTypeIfAssignableToConfiguredType() : void in class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Change Variable Type converter : HttpMessageConverter<Object> to converter : GenericHttpMessageConverter<Object> in method public canReadTypeIfAssignableToConfiguredType() : void from class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Change Variable Type converter : HttpMessageConverter<Object> to converter : GenericHttpMessageConverter<Object> in method public canWriteTypeIfAssignableToConfiguredType() : void from class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "src/test/java/org/springframework/hateoas/mvc/TypeConstrainedMappingJackson2HttpMessageConverterUnitTest.java",
    "commit": "https://github.com/spring-projects/spring-hateoas/commit/8bdc57ba8975d851fe91edc908761aacea624766",
    "repository": "https://github.com/spring-projects/spring-hateoas.git",
    "fileType": "test"
  },
  {
    "fileName": "AllowedClientPropertyKeys.java",
    "refactorings": [],
    "filePath": "d2/src/main/java/com/linkedin/d2/balancer/properties/AllowedClientPropertyKeys.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyKeys.java",
    "refactorings": [],
    "filePath": "d2/src/main/java/com/linkedin/d2/balancer/properties/PropertyKeys.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CompressionOption.java",
    "refactorings": [],
    "filePath": "r2-core/src/main/java/com/linkedin/r2/filter/CompressionOption.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "R2Constants.java",
    "refactorings": [],
    "filePath": "r2-core/src/main/java/com/linkedin/r2/filter/R2Constants.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpConstants.java",
    "refactorings": [],
    "filePath": "r2-core/src/main/java/com/linkedin/r2/transport/http/common/HttpConstants.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CompressionConfig.java",
    "refactorings": [{
      "rightSideLineNumber": 82,
      "description": "Encapsulate Attribute private _compressionThreshold : int from class com.linkedin.r2.filter.CompressionConfig",
      "type": "Encapsulate Attribute"
    }],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/CompressionConfig.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientCompressionFilter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 293,
        "description": "Rename Method private shouldCompressResponse(operation String) : boolean renamed to private shouldCompressResponseForOperation(operation String) : boolean in class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Change Attribute Access Modifier private to public in attribute public COMPRESS_ALL_RESPONSES_INDICATOR : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 233,
        "description": "Extract Method public addResponseCompressionHeaders(responseCompressionOverride CompressionOption, req RestRequest) : RestRequest extracted from public onRestRequest(req RestRequest, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void in class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 234,
        "description": "Extract Variable builder : RestRequestBuilder in method public addResponseCompressionHeaders(responseCompressionOverride CompressionOption, req RestRequest) : RestRequest from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Add Parameter responseCompressionConfig : CompressionConfig in method public ClientCompressionFilter(requestContentEncoding EncodingType, requestCompressionConfig CompressionConfig, acceptedEncodings EncodingType[], responseCompressionConfig CompressionConfig, responseCompressionOperations List<String>) from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 132,
        "description": "Add Parameter responseCompressionConfig : CompressionConfig in method public ClientCompressionFilter(requestContentEncoding String, requestCompressionConfig CompressionConfig, acceptedEncodings String, responseCompressionConfig CompressionConfig, responseCompressionOperations List<String>) from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Add Parameter acceptedEncodings : EncodingType[] in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Change Method Access Modifier public to package in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Add Method Modifier static in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 187,
        "description": "Parameterize Attribute _acceptedEncodings : EncodingType[] to acceptedEncodings : EncodingType[] in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/compression/ClientCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CompressionConstants.java",
    "refactorings": [],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/compression/CompressionConstants.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ServerCompressionFilter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 71,
        "description": "Extract Method public ServerCompressionFilter(acceptedFilters String, responseCompressionConfig CompressionConfig) extracted from public ServerCompressionFilter(acceptedFilters String) in class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Extract Attribute private EMPTY : String in class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 140,
        "description": "Rename Variable responseCompression : String to responseAcceptedEncodings : String in method public onRestRequest(req RestRequest, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void from class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 197,
        "description": "Rename Variable responseCompression : String to responseAcceptedEncodings : String in method public onRestResponse(res RestResponse, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void from class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Add Parameter defaultResponseCompressionConfig : CompressionConfig in method public ServerCompressionFilter(supportedEncoding EncodingType[], defaultResponseCompressionConfig CompressionConfig) from class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Add Parameter"
      }
    ],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/compression/ServerCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpClientFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 371,
        "description": "Rename Method package getCompressionConfig(httpServiceName String, requestContentEncodingName String) : CompressionConfig renamed to package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 455,
        "description": "Rename Method private getRequestContentEncodingName(serverSupportedEncodings List<String>) : String renamed to private getRequestContentEncoding(serverSupportedEncodings List<String>) : EncodingType in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 328,
        "description": "Extract Method public HttpClientFactory(filters FilterChain, eventLoopGroup NioEventLoopGroup, shutdownFactory boolean, executor ScheduledExecutorService, shutdownExecutor boolean, callbackExecutorGroup ExecutorService, shutdownCallbackExecutor boolean, jmxManager AbstractJmxManager, requestCompressionThresholdDefault int, requestCompressionConfigs Map<String,CompressionConfig>, responseCompressionConfigs Map<String,CompressionConfig>, useClientCompression boolean) extracted from public HttpClientFactory(filters FilterChain, eventLoopGroup NioEventLoopGroup, shutdownFactory boolean, executor ScheduledExecutorService, shutdownExecutor boolean, callbackExecutorGroup ExecutorService, shutdownCallbackExecutor boolean, jmxManager AbstractJmxManager, requestCompressionThresholdDefault int, requestCompressionConfigs Map<String,CompressionConfig>, useClientCompression boolean) in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 428,
        "description": "Change Variable Type requestContentEncodingName : String to requestContentEncoding : EncodingType in method private getClient(properties Map<String,? extends Object>, sslContext SSLContext, sslParameters SSLParameters) : TransportClient from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 428,
        "description": "Rename Variable requestContentEncodingName : String to requestContentEncoding : EncodingType in method private getClient(properties Map<String,? extends Object>, sslContext SSLContext, sslParameters SSLParameters) : TransportClient from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Rename Parameter requestContentEncodingName : String to requestContentEncoding : EncodingType in method package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Change Parameter Type requestContentEncodingName : String to requestContentEncoding : EncodingType in method package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 455,
        "description": "Change Return Type String to EncodingType in method private getRequestContentEncoding(serverSupportedEncodings List<String>) : EncodingType from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Change Return Type"
      }
    ],
    "filePath": "r2-netty/src/main/java/com/linkedin/r2/transport/http/client/HttpClientFactory.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestClient.java",
    "refactorings": [{
      "rightSideLineNumber": 633,
      "description": "Merge Parameter [contentType : ContentType, acceptTypes : List<AcceptType>, requestCompressionOverride : CompressionOption] to requestOptions : RestliRequestOptions in method private sendRequestImpl(requestContext RequestContext, uri URI, method ResourceMethod, dataMap DataMap, headers Map<String,String>, methodName String, protocolVersion ProtocolVersion, requestOptions RestliRequestOptions, callback Callback<RestResponse>) : void from class com.linkedin.restli.client.RestClient",
      "type": "Merge Parameter"
    }],
    "filePath": "restli-client/src/main/java/com/linkedin/restli/client/RestClient.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestliRequestOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 123,
        "description": "Rename Variable other : RestliRequestOptions to that : RestliRequestOptions in method public equals(o Object) : boolean from class com.linkedin.restli.client.RestliRequestOptions",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Rename Parameter obj : Object to o : Object in method public equals(o Object) : boolean from class com.linkedin.restli.client.RestliRequestOptions",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Add Parameter responseCompressionOverride : CompressionOption in method package RestliRequestOptions(protocolVersionOption ProtocolVersionOption, requestCompressionOverride CompressionOption, responseCompressionOverride CompressionOption, contentType RestClient.ContentType, acceptTypes List<RestClient.AcceptType>) from class com.linkedin.restli.client.RestliRequestOptions",
        "type": "Add Parameter"
      }
    ],
    "filePath": "restli-client/src/main/java/com/linkedin/restli/client/RestliRequestOptions.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestliRequestOptionsBuilder.java",
    "refactorings": [],
    "filePath": "restli-client/src/main/java/com/linkedin/restli/client/RestliRequestOptionsBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "TestClientCompressionFilter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 66,
        "description": "Change Parameter Type shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Rename Parameter shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Change Parameter Type shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String, entityLength int) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Rename Parameter shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String, entityLength int) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Rename Attribute _shouldBePresent : boolean to _expectedValue : String in class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Change Attribute Type _shouldBePresent : boolean to _expectedValue : String in class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Rename Method public testCompressionOperations(compressionConfig String, operations String[], headerShouldBePresent boolean) : void renamed to public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void in class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Rename Method private provideRequestData() : Object[][] renamed to private provideRequestCompressionData() : Object[][] in class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Modify Method Annotation @Test(dataProvider = \"requestData\") to @Test(dataProvider = \"requestCompressionData\") in method public testRequestCompressionRules(requestCompressionConfig CompressionConfig, requestCompressionOverride CompressionOption, headerShouldBePresent boolean) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Modify Method Annotation"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Change Parameter Type headerShouldBePresent : boolean to expectedAcceptEncoding : String in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Rename Parameter headerShouldBePresent : boolean to expectedAcceptEncoding : String in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter responseCompressionConfig : CompressionConfig in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter responseCompressionOverride : CompressionOption in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter expectedCompressionThreshold : String in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Remove Parameter compressionConfig : String in method public testCompressionOperations(compressionConfig String, operations String[], headerShouldBePresent boolean) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Remove Parameter operations : String[] in method public testCompressionOperations(compressionConfig String, operations String[], headerShouldBePresent boolean) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Modify Method Annotation @Test(dataProvider = \"operationsData\") to @Test(dataProvider = \"responseCompressionData\") in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Modify Method Annotation"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Thrown Exception Type CompressionException in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Modify Method Annotation @DataProvider(name = \"requestData\") to @DataProvider(name = \"requestCompressionData\") in method private provideRequestCompressionData() : Object[][] from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Modify Method Annotation"
      }
    ],
    "filePath": "r2-filter-compression/src/test/java/com/linkedin/r2/filter/compression/TestClientCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestServerCompressionFilter.java",
    "refactorings": [],
    "filePath": "r2-filter-compression/src/test/java/com/linkedin/r2/filter/compression/TestServerCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHttpClientFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 417,
      "description": "Rename Method public testGetCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void renamed to public testGetRequestCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void in class com.linkedin.r2.transport.http.client.TestHttpClientFactory",
      "type": "Rename Method"
    }],
    "filePath": "r2-netty/src/test/java/com/linkedin/r2/transport/http/client/TestHttpClientFactory.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "RestClientTest.java",
    "refactorings": [],
    "filePath": "restli-client/src/test/java/com/linkedin/restli/client/RestClientTest.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRequest.java",
    "refactorings": [],
    "filePath": "restli-client/src/test/java/com/linkedin/restli/client/TestRequest.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRestClientRequestBuilder.java",
    "refactorings": [],
    "filePath": "restli-client/src/test/java/com/linkedin/restli/client/TestRestClientRequestBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "RestLiIntTestServer.java",
    "refactorings": [{
      "rightSideLineNumber": 97,
      "description": "Inline Method public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int, requestFilters List<? extends RequestFilter>, responseFilters List<? extends ResponseFilter>) : HttpServer inlined to public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int) : HttpServer in class com.linkedin.restli.examples.RestLiIntTestServer",
      "type": "Inline Method"
    }],
    "filePath": "restli-int-test-server/src/main/java/com/linkedin/restli/examples/RestLiIntTestServer.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "RestLiIntegrationTest.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/RestLiIntegrationTest.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestCompressionServer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 107,
        "description": "Move Class com.linkedin.restli.examples.TestCompressionServer.initClass.SaveContentEncodingHeaderFilter moved to com.linkedin.restli.examples.TestCompressionServer.SaveContentEncodingHeaderFilter",
        "type": "Move Class"
      },
      {
        "rightSideLineNumber": 104,
        "description": "Change Attribute Access Modifier private to public in attribute public CONTENT_ENCODING_SAVED : String from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompatibleDefault(acceptEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionBetter(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionWorse(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testAcceptEncoding(acceptedEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public test406Error(acceptContent String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Change Class Access Modifier package to public in class com.linkedin.restli.examples.TestCompressionServer.SaveContentEncodingHeaderFilter",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Add Class Modifier static in class com.linkedin.restli.examples.TestCompressionServer.SaveContentEncodingHeaderFilter",
        "type": "Add Class Modifier"
      }
    ],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestCompressionServer.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRequestCompression.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestRequestCompression.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestResponseCompression.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestResponseCompression.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "CompactionsCQLTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 129,
        "description": "Rename Method public testTriggerMinorCompaction() : void renamed to public testTriggerMinorCompactionSTCSAlterTable() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 135,
        "description": "Extract Method private getCurrentColumnFamilyStore() : ColumnFamilyStore extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Extract Method public minorWasTriggered(keyspace String, cf String) : boolean extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "test/unit/org/apache/cassandra/db/compaction/CompactionsCQLTest.java",
    "commit": "https://github.com/apache/cassandra/commit/1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "Config.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/Config.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseDescriptor.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/DatabaseDescriptor.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "UDFunction.java",
    "refactorings": [
      {
        "rightSideLineNumber": 294,
        "description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public create(name FunctionName, argNames List<ColumnIdentifier>, argTypes List<AbstractType<?>>, returnType AbstractType<?>, calledOnNullInput boolean, language String, body String) : UDFunction in class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 294,
        "description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public execute(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/UDFunction.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateFunctionStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/CreateFunctionStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "UFPureScriptTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTest.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 620,
      "description": "Extract Method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOwnerOnly boolean) : Supplier<Stream<CacheEntry>> extracted from protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>) : Supplier<Stream<CacheEntry>> in class org.infinispan.stream.impl.AbstractCacheStream",
      "type": "Extract Method"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/AbstractCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedCacheStream.java",
    "refactorings": [
      {
        "rightSideLineNumber": 459,
        "description": "Extract Method private ignoreRehashIteration(consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 575,
        "description": "Extract Method private segmentsToProcess(supplier IteratorSupplier<R>, results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, id UUID) : Set<Integer> extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 549,
        "description": "Extract Method private performLocalRehashAwareOperation(results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, ch ConsistentHash, segments Set<Integer>, op KeyTrackingTerminalOperation<Object,R,Object>, ownedSegmentsSupplier Supplier<Set<Integer>>, id UUID) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 538,
        "description": "Extract Method private rehashAwareIteration(complete AtomicBoolean, consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 573,
        "description": "Extract Variable strId : String in method private segmentsToProcess(supplier IteratorSupplier<R>, results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, id UUID) : Set<Integer> from class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Variable"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/DistributedCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 62,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedDoubleCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 35,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedDoubleCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedDoubleCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedIntCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 35,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedIntCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedIntCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedLongCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 35,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedLongCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedLongCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedStreamIteratorTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/stream/DistributedStreamIteratorTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "FontAwesomeIcons.java",
    "refactorings": [],
    "filePath": "android-iconify-fontawesome/src/main/java/com/joanzapata/android/iconify/fonts/FontAwesomeIcons.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontAwesomeModule.java",
    "refactorings": [],
    "filePath": "android-iconify-fontawesome/src/main/java/com/joanzapata/android/iconify/fonts/FontAwesomeModule.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "AboutActivity.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/AboutActivity.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontAwesomeFragment.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/FontAwesomeFragment.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontHelloFragment.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/FontHelloFragment.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontHelloValue.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/FontHelloValue.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconDialogFragment.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/IconDialogFragment.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconListActivity.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/IconListActivity.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "MainActivity.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/iconify/sample/MainActivity.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "SampleApplication.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/iconify/sample/SampleApplication.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconUtils.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/utils/IconUtils.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseIconValue.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/BaseIconValue.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "Icon.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/Icon.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconDrawable.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/IconDrawable.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconFontDescriptor.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/IconFontDescriptor.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "Iconify.java",
    "refactorings": [
      {
        "rightSideLineNumber": 11,
        "description": "Remove Class Modifier final in class com.joanzapata.android.iconify.Iconify",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 34,
        "description": "Inline Method public addIcons(icon T, textViews TextView...) : void inlined to public addIcons(textViews TextView...) : void in class com.joanzapata.android.iconify.Iconify",
        "type": "Inline Method"
      }
    ],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/Iconify.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "Utils.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/Utils.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomTypefaceSpan.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/internal/CustomTypefaceSpan.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconFontDescriptorWrapper.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/internal/IconFontDescriptorWrapper.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "ParsingUtil.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/internal/ParsingUtil.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconButton.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/views/IconButton.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconTextView.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/views/IconTextView.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconToggleButton.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/views/IconToggleButton.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "UtilsTest.java",
    "refactorings": [],
    "filePath": "android-iconify/src/test/java/com/joanzapata/android/iconify/UtilsTest.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultClient.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/DefaultClient.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GitHubModule.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/GitHubModule.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "Intents.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/Intents.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestCodes.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestCodes.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestFuture.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestFuture.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestReader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestReader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestWriter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestWriter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ResultCodes.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ResultCodes.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ServicesModule.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ServicesModule.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ThrowableLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ThrowableLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountAuthenticator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountAuthenticator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountAuthenticatorService.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountAuthenticatorService.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountClient.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountClient.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountConstants.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountConstants.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountScope.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountScope.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AuthenticatedUserLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AuthenticatedUserLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AuthenticatedUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AuthenticatedUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GitHubAccount.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/GitHubAccount.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LoginActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/LoginActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LoginWebViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/LoginWebViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ScopeBase.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/ScopeBase.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TwoFactorAuthActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/TwoFactorAuthActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TwoFactorAuthClient.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/TwoFactorAuthClient.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TwoFactorAuthException.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/TwoFactorAuthException.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GitHubClientV2.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/api/GitHubClientV2.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ItemStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/ItemStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OnLoadListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/OnLoadListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ResourcePager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/ResourcePager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UrlMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/UrlMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullTree.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/code/FullTree.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshBlobTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/code/RefreshBlobTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshTreeTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/code/RefreshTreeTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitCompareTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitCompareTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitMatch.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitMatch.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullCommit.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/FullCommit.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullCommitFile.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/FullCommitFile.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshCommitTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/RefreshCommitTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullGist.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/FullGist.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/RefreshGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/StarGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UnstarGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/UnstarGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullIssue.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/FullIssue.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueFilter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueFilter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuePager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssuePager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshIssueTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/RefreshIssueTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/ref/RefUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/DeleteRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/ForkRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RefreshRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RepositoryEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RepositoryUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RepositoryUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/StarRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarredRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/StarredRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UnstarRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/UnstarRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUser.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/search/SearchUser.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUserService.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/search/SearchUserService.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/FollowUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowingUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/FollowingUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/RefreshUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UnfollowUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UnfollowUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserComparator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserComparator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "App.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/model/App.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "Authorization.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/model/Authorization.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountDataManager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/AccountDataManager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheHelper.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/CacheHelper.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseCache.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/DatabaseCache.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationRepositories.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/OrganizationRepositories.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "Organizations.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/Organizations.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PersistableResource.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/PersistableResource.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ContentProviderAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/ContentProviderAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SyncAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/SyncAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SyncAdapterService.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/SyncAdapterService.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SyncCampaign.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/SyncCampaign.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/BaseActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckableRelativeLayout.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/CheckableRelativeLayout.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ConfirmDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ConfirmDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogFragmentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogFragmentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogFragmentHelper.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogFragmentHelper.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogResultListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogResultListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/FragmentPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/FragmentProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentStatePagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/FragmentStatePagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HeaderFooterListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/HeaderFooterListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ItemListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ItemListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LightAlertDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/LightAlertDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LightProgressDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/LightProgressDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MainActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/MainActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MarkdownLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/MarkdownLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NavigationDrawerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NavigationDrawerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NavigationDrawerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NavigationDrawerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NavigationDrawerObject.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NavigationDrawerObject.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagedItemFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PagedItemFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagerActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PagerActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PatchedScrollingViewBehavior.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PatchedScrollingViewBehavior.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ProgressDialogTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ProgressDialogTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ResourceLoadingIndicator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ResourceLoadingIndicator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SelectableLinkMovementMethod.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/SelectableLinkMovementMethod.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SingleChoiceDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/SingleChoiceDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StyledText.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/StyledText.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TabPagerActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/TabPagerActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TabPagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/TabPagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TextWatcherAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/TextWatcherAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ViewPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ViewPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "WebView.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/WebView.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryCodeFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/code/RepositoryCodeFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/CommentListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentPreviewPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/CommentPreviewPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteCommentListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/DeleteCommentListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/EditCommentListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RawCommentFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/RawCommentFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RenderedCommentFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/RenderedCommentFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitCompareListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitCompareListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitCompareViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitCompareViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitDiffListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitDiffListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitFileComparator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitFileComparator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitFileListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitFileListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitFileViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitFileViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CreateCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DiffStyler.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/DiffStyler.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateGistActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateGistActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/DeleteCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/DeleteGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/EditCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/EditCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFileFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFileFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFilesPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFilesPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFilesViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFilesViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistQueriesPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistQueriesPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsPagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsPagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MyGistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/MyGistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PublicGistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/PublicGistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RandomGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/RandomGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarredGistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/StarredGistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AssigneeDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/AssigneeDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AssigneeDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/AssigneeDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/CreateCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateIssueTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/CreateIssueTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DashboardIssueFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/DashboardIssueFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DashboardIssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/DashboardIssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/DeleteCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditAssigneeTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditAssigneeTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditIssueActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditIssueActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditIssueTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditIssueTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditIssuesFilterActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditIssuesFilterActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditLabelsTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditLabelsTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditMilestoneTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditMilestoneTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditStateTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditStateTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FilterListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FilterListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FilterListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FilterListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FiltersViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FiltersViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FiltersViewFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FiltersViewFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueBrowseActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueBrowseActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueDashboardPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueDashboardPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueDashboardPagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueDashboardPagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueSearchActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueSearchActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueSearchSuggestionsProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueSearchSuggestionsProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuesFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssuesFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuesPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssuesPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuesViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssuesViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelDrawableSpan.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/LabelDrawableSpan.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelsDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/LabelsDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelsDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/LabelsDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MilestoneDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/MilestoneDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MilestoneDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/MilestoneDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryIssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/RepositoryIssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchIssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/SearchIssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchIssueListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/SearchIssueListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "BranchFileViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/BranchFileViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CodeTreeAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/CodeTreeAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/RefDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/RefDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ContributorListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/ContributorListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultRepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/DefaultRepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/OrganizationLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RecentRepositories.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RecentRepositories.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryContributorsActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryContributorsActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryContributorsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryContributorsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserRepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/UserRepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserRepositoryListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/UserRepositoryListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ActionBarAccountAuthenticatorActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/ActionBarAccountAuthenticatorActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RoboActionBarAccountAuthenticatorActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/RoboActionBarAccountAuthenticatorActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RoboActionBarActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/RoboActionBarActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RoboSupportFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/RoboSupportFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositorySearchSuggestionsProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/RepositorySearchSuggestionsProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchRepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchRepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchRepositoryListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchRepositoryListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUserListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchUserListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUserListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchUserListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EventPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/EventPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EventType.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/EventType.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/FollowersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowingFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/FollowingFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HomePagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/HomePagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HomePagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/HomePagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IconAndViewTextManager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/IconAndViewTextManager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MembersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/MembersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MyFollowersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/MyFollowersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MyFollowingFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/MyFollowingFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NewsListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/NewsListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/OrganizationNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationSelectionListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/OrganizationSelectionListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationSelectionProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/OrganizationSelectionProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagedUserFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/PagedUserFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UriLauncherActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UriLauncherActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserCreatedNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserCreatedNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserFollowersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserFollowersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserFollowingFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserFollowingFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserReceivedNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserReceivedNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AvatarLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/AvatarLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GravatarUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/GravatarUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HtmlUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/HtmlUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpImageGetter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/HttpImageGetter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ImageUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ImageUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MarkdownUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/MarkdownUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PreferenceUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/PreferenceUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ServiceUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ShareUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SourceEditor.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/SourceEditor.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TimeUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/TimeUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ToastUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ToastUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TypefaceUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/TypefaceUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/ActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "FiltersViewActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/FiltersViewActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "NewsEventTextTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/NewsEventTextTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CommitUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/CommitUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CommitUtilsTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/CommitUtilsTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateCommentActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/CreateCommentActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "DiffStylerTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/DiffStylerTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "FullCommitTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/FullCommitTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateCommentActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/CreateCommentActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateGistActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/CreateGistActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "GistFilesViewActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/GistFilesViewActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "GistStoreTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/GistStoreTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "GistUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/GistUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateCommentActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/CreateCommentActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "EditIssueActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/EditIssueActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "EditIssuesFilterActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/EditIssuesFilterActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IssueFilterTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/IssueFilterTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IssueStoreTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/IssueStoreTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IssueUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/IssueUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RefUtilsTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/ref/RefUtilsTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RecentRepositoriesTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/RecentRepositoriesTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RepositoryEventMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/RepositoryEventMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RepositoryUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/RepositoryUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "SearchActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/SearchActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "LoginActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/user/LoginActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "UserComparatorTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/user/UserComparatorTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "UserUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/user/UserUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "HtmlUtilsTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/util/HtmlUtilsTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IconAndViewTextManagerTest.java",
    "refactorings": [],
    "filePath": "app/src/test/java/com/github/pockethub/ui/user/IconAndViewTextManagerTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "MapBinder.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/main/java/org/hibernate/cfg/annotations/MapBinder.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleValueBinder.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/main/java/org/hibernate/cfg/annotations/SimpleValueBinder.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityEnum.java",
    "refactorings": [
      {
        "rightSideLineNumber": 30,
        "description": "Modify Class Annotation @TypeDefs({@TypeDef(typeClass=LastNumberType.class,defaultForType=EntityEnum.LastNumber.class)}) to @TypeDefs({@TypeDef(typeClass=LastNumberType.class,defaultForType=LastNumber.class)}) in class org.hibernate.test.annotations.enumerated.EntityEnum",
        "type": "Modify Class Annotation"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Modify Attribute Annotation @Type(type = \"org.hibernate.test.annotations.enumerated.FirstLetterType\") to @Type(type = \"org.hibernate.test.annotations.enumerated.custom_types.FirstLetterType\") in attribute private firstLetter : FirstLetter from class org.hibernate.test.annotations.enumerated.EntityEnum",
        "type": "Modify Attribute Annotation"
      }
    ],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/EntityEnum.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "EnumeratedTypeTest.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/EnumeratedTypeTest.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "EntityMapEnum.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_mapkey/EntityMapEnum.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "MapKeyCustomEnumTypeTest.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_mapkey/MapKeyCustomEnumTypeTest.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "FirstLetterType.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_types/FirstLetterType.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "LastNumberType.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_types/LastNumberType.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "Common.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/Common.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "FirstLetter.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/FirstLetter.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "LastNumber.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/LastNumber.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "Trimmed.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/Trimmed.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "DataTreeNode.java",
    "refactorings": [{
      "rightSideLineNumber": 102,
      "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(name String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.DataTreeNode",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/DataTreeNode.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentTree.java",
    "refactorings": [
      {
        "rightSideLineNumber": 284,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(parent ConcurrentTreeNode, child String, creator DataTreeNodeInitializer, path TreeDataParent) : ConcurrentTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTree",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 564,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(name String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTree",
        "type": "Add Parameter"
      }
    ],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/concurrent/ConcurrentTree.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentTreeNode.java",
    "refactorings": [
      {
        "rightSideLineNumber": 447,
        "description": "Extract Method public updateHits(state DataTreeNodeUpdater, path TreeDataParent) : boolean extracted from public updateChildData(state DataTreeNodeUpdater, path TreeDataParent) : void in class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 635,
        "description": "Remove Method Modifier synchronized in method public getCounter() : long from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 649,
        "description": "Remove Method Modifier synchronized in method public incrementCounter() : void from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 654,
        "description": "Remove Method Modifier synchronized in method public incrementCounter(val long) : long from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 659,
        "description": "Remove Method Modifier synchronized in method public setCounter(val long) : void from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 97,
        "description": "Add Parameter path : TreeDataParent in method protected init(tree ConcurrentTree, key DBKey, name String, path TreeDataParent) : void from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 359,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateEditableNode(name String, creator DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 387,
        "description": "Add Parameter size : int in method protected createMap(size int) : HashMap<String,TreeNodeData> from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 630,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(name String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      }
    ],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/concurrent/ConcurrentTreeNode.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "DataKeyTop.java",
    "refactorings": [],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/prop/DataKeyTop.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "DataLimitRecent.java",
    "refactorings": [],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/prop/DataLimitRecent.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "VirtualTreeNode.java",
    "refactorings": [{
      "rightSideLineNumber": 89,
      "description": "Add Parameter size : int in method public createMap(size int) : HashMap<String,TreeNodeData> from class com.addthis.hydra.data.tree.prop.VirtualTreeNode",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/prop/VirtualTreeNode.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "PathAlias.java",
    "refactorings": [
      {
        "rightSideLineNumber": 125,
        "description": "Replace Anonymous With Lambda com.addthis.hydra.task.output.tree.PathAlias.getOrCreateNode.init.new DataTreeNodeInitializer with child -> {child.aliasTo(finalAlias); in method public getOrCreateNode(state TreeMapState, name String, parentPath TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.PathAlias",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Add Parameter parentPath : TreeDataParent in method public getOrCreateNode(state TreeMapState, name String, parentPath TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.PathAlias",
        "type": "Add Parameter"
      }
    ],
    "filePath": "hydra-task/src/main/java/com/addthis/hydra/task/output/tree/PathAlias.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "PathValue.java",
    "refactorings": [{
      "rightSideLineNumber": 182,
      "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(state TreeMapState, name String, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.PathValue",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-task/src/main/java/com/addthis/hydra/task/output/tree/PathValue.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeMapState.java",
    "refactorings": [{
      "rightSideLineNumber": 127,
      "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(key String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.TreeMapState",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-task/src/main/java/com/addthis/hydra/task/output/tree/TreeMapState.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentTreeConverter.java",
    "refactorings": [],
    "filePath": "hydra-data/src/test/java/com/addthis/hydra/data/tree/concurrent/ConcurrentTreeConverter.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "TestConcurrentTree.java",
    "refactorings": [],
    "filePath": "hydra-data/src/test/java/com/addthis/hydra/data/tree/concurrent/TestConcurrentTree.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "TestTreeSerializationVersions.java",
    "refactorings": [],
    "filePath": "hydra-data/src/test/java/com/addthis/hydra/data/tree/concurrent/TestTreeSerializationVersions.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "ApplicationServiceClient.java",
    "refactorings": [],
    "filePath": "genie-client/src/main/java/com/netflix/genie/client/ApplicationServiceClient.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-client/src/main/java/com/netflix/genie/client/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-client/src/main/java/com/netflix/genie/client/sample/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/client/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/exceptions/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/model/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/jobmanager/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/jobmanager/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/metrics/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/metrics/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/repository/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/resources/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/services/impl/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/services/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/services/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "HealthCheck.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/health/HealthCheck.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/health/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "GenieApplication.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/startup/GenieApplication.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/client/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/exceptions/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/model/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/jobmanager/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/jobmanager/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/metrics/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/repository/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/resources/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/services/impl/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/services/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGenieGuiceBootstrap.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/startup/TestGenieGuiceBootstrap.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHealthCheck.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/health/TestHealthCheck.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/health/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGenieApplication.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/startup/TestGenieApplication.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "SSLITest.java",
    "refactorings": [],
    "filePath": "examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/SSLITest.java",
    "commit": "https://github.com/jayway/rest-assured/commit/7cac88b9a28efc05bdc60e585e3291862ffc9da1",
    "repository": "https://github.com/jayway/rest-assured.git",
    "fileType": "test"
  },
  {
    "fileName": "SpecificationBuilderITest.java",
    "refactorings": [],
    "filePath": "examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/SpecificationBuilderITest.java",
    "commit": "https://github.com/jayway/rest-assured/commit/7cac88b9a28efc05bdc60e585e3291862ffc9da1",
    "repository": "https://github.com/jayway/rest-assured.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalConfigurator.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalConfigurator.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalCoverageResponseDelegate.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalCoverageResponseDelegate.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalWrapper.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalWrapperFactory.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalWrapperFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalBinaryPPIO.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalBinaryPPIO.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalCDataPPIO.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalCDataPPIO.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalPPIOFactory.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalPPIOFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalXMLPPIO.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalXMLPPIO.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractToolConfigurator.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/AbstractToolConfigurator.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractToolWrapper.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/AbstractToolWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Format.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/Format.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "FormatConverter.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/FormatConverter.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OutputType.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/OutputType.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ToolConfiguration.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/ToolConfiguration.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ToolWrapper.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/ToolWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ToolWrapperFactory.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/ToolWrapperFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OGRWrapper.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OGRWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OGRWrapperFactory.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OGRWrapperFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Ogr2OgrConfigurator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 37,
        "description": "Add Method Annotation @Override in method protected buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Change Method Access Modifier package to protected in method protected buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Remove Method Modifier static in method package buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
        "type": "Remove Method Modifier"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/Ogr2OgrConfigurator.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Ogr2OgrOutputFormat.java",
    "refactorings": [
      {
        "rightSideLineNumber": 110,
        "description": "Rename Method public getOgrExecutable() : String renamed to public getExecutable() : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Rename Method public setOgrExecutable(ogrExecutable String) : void renamed to public setExecutable(ogrExecutable String) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Rename Method public getGdalData() : String renamed to public getEnvironment() : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Rename Method public setGdalData(gdalData String) : void renamed to public setEnvironment(environment Map<String,String>) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Change Attribute Type formats : Map<String,OgrFormat> to formats : Map<String,Format> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 165,
        "description": "Change Variable Type format : OgrFormat to format : Format in method public getMimeType(value Object, operation Operation) : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 202,
        "description": "Change Variable Type format : OgrFormat to format : Format in method public getAttachmentFileName(value Object, operation Operation) : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 230,
        "description": "Add Method Annotation @Override in method public clearFormats() : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 291,
        "description": "Change Variable Type format : OgrFormat to format : Format in method protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 284,
        "description": "Change Variable Type wrapper : OGRWrapper to wrapper : ToolWrapper in method protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 220,
        "description": "Change Return Type List<OgrFormat> to List<Format> in method public getFormats() : List<Format> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 220,
        "description": "Add Method Annotation @Override in method public getFormats() : List<Format> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 102,
        "description": "Add Parameter wrapperFactory : ToolWrapperFactory in method public Ogr2OgrOutputFormat(gs GeoServer, wrapperFactory ToolWrapperFactory) from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Add Method Annotation @Override in method public getExecutable() : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Add Method Annotation @Override in method public setExecutable(ogrExecutable String) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Change Return Type String to Map<String,String> in method public getEnvironment() : Map<String,String> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Method Annotation @Override in method public getEnvironment() : Map<String,String> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 148,
        "description": "Rename Parameter gdalData : String to environment : Map<String,String> in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 148,
        "description": "Change Parameter Type gdalData : String to environment : Map<String,String> in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Add Method Annotation @Override in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 217,
        "description": "Change Parameter Type parameters : OgrFormat to parameters : Format in method public addFormat(parameters Format) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 210,
        "description": "Add Method Annotation @Override in method public addFormat(parameters Format) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Rename Attribute gdalData : String to environment : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Change Attribute Type gdalData : String to environment : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/Ogr2OgrOutputFormat.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OgrConfiguration.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OgrConfiguration.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OgrFormat.java",
    "refactorings": [
      {
        "rightSideLineNumber": 48,
        "description": "Change Attribute Access Modifier public to private in attribute private ogrFormat : String from class org.geoserver.wfs.response.OgrFormat",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Change Attribute Access Modifier public to private in attribute private formatName : String from class org.geoserver.wfs.response.OgrFormat",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Rename Parameter ogrFormat : String to toolFormat : String in method public OgrFormat(toolFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, options String...) from class org.geoserver.wfs.response.OgrFormat",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 35,
        "description": "Change Parameter Type type : OgrType to type : OutputType in method public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OutputType, options String...) from class org.geoserver.wfs.response.OgrFormat",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OgrFormat.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Ogr2OgrPPIOFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 56,
      "description": "Change Variable Type of : OgrFormat to of : Format in method public getProcessParameterIO() : List<ProcessParameterIO> from class org.geoserver.wps.ogr.Ogr2OgrPPIOFactory",
      "type": "Change Variable Type"
    }],
    "filePath": "src/extension/ogr/ogr-wps/src/main/java/org/geoserver/wps/ogr/Ogr2OgrPPIOFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalFormatTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalFormatTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalTestUtil.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalTestUtil.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalWcsTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalWcsTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalWrapperTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalWrapperTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalWpsTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/test/java/org/geoserver/wps/gdal/GdalWpsTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "OGRWrapperTest.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/test/java/org/geoserver/wfs/response/OGRWrapperTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "Ogr2OgrFormatTest.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/test/java/org/geoserver/wfs/response/Ogr2OgrFormatTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "Ogr2OgrTestUtil.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/test/java/org/geoserver/wfs/response/Ogr2OgrTestUtil.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "WPSOgrTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 78,
        "description": "Change Variable Type f : OgrFormat to f : Format in method public testConfigurationLoad() : void from class org.geoserver.wps.ogr.WPSOgrTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Change Variable Type f : OgrFormat to f : Format in method public testDescribeProcess() : void from class org.geoserver.wps.ogr.WPSOgrTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wps/src/test/java/org/geoserver/wps/ogr/WPSOgrTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPIOException.java",
    "refactorings": [{
      "rightSideLineNumber": 38,
      "description": "Extract Method public NDPIOException(status Status, message String, cause Throwable) extracted from public NDPIOException(status Status, message String) in class org.neo4j.ndp.messaging.NDPIOException",
      "type": "Extract Method"
    }],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/NDPIOException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IdentityPack.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/IdentityPack.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Neo4jPack.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/Neo4jPack.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackStreamMessageFormatV1.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Change Attribute Type packer : PackStream.Packer to packer : Neo4jPack.Packer in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public Writer(packer Neo4jPack.Packer, onMessageComplete MessageBoundaryHook) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 202,
        "description": "Change Attribute Type unpacker : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 264,
        "description": "Change Variable Type e : PackStream.PackstreamException to e : PackStream.PackStreamException in method public read(output MessageHandler<E>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 271,
        "description": "Change Variable Type e : PackStream.PackstreamException to e : PackStream.PackStreamException in method public read(output MessageHandler<E>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Rename Parameter input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Change Parameter Type input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/PackStreamMessageFormatV1.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PathPack.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/PathPack.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "UnboundRelationship.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/UnboundRelationship.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueNode.java",
    "refactorings": [
      {
        "rightSideLineNumber": 94,
        "description": "Change Attribute Type labels : List<Label> to labels : Collection<Label> in class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Change Parameter Type labels : List<Label> to labels : Collection<Label> in method public ValueNode(id long, labels Collection<Label>, props Map<String,Object>) from class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValueNode.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValuePath.java",
    "refactorings": [
      {
        "rightSideLineNumber": 127,
        "description": "Change Attribute Type entities : PropertyContainer[] to entities : List<PropertyContainer> in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 127,
        "description": "Remove Attribute Modifier final in attribute private entities : PropertyContainer[] from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
        "type": "Remove Attribute Modifier"
      }
    ],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValuePath.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueRelationship.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValueRelationship.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueUnboundRelationship.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValueUnboundRelationship.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackStream.java",
    "refactorings": [
      {
        "rightSideLineNumber": 872,
        "description": "Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 711,
        "description": "Rename Method public unpackUtf8() : byte[] renamed to public unpackUTF8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 599,
        "description": "Rename Method public unpackString() : String renamed to public unpackText() : String in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 784,
        "description": "Rename Method private unpackBytes(size int) : byte[] renamed to private unpackRawBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 635,
        "description": "Extract Method private unpackBytesHeader() : int extracted from public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 681,
        "description": "Extract Method public unpackTextHeader() : int extracted from public unpackUtf8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 800,
        "description": "Extract Method private unpackRawBytesInto(buffer byte[], offset int, size int) : void extracted from private unpackBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 621,
        "description": "Rename Variable size : long to longSize : long in method private unpackBytesHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 693,
        "description": "Rename Variable size : long to longSize : long in method public unpackTextHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 802,
        "description": "Parameterize Variable heapBuffer : byte[] to buffer : byte[] in method private unpackRawBytesInto(buffer byte[], offset int, size int) : void from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 641,
        "description": "Change Variable Type size : long to size : int in method public unpackBytes() : byte[] from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 714,
        "description": "Change Variable Type size : long to size : int in method public unpackUTF8() : byte[] from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 156,
        "description": "Change Attribute Access Modifier private to public in attribute public UTF_8 : Charset from class org.neo4j.packstream.PackStream",
        "type": "Change Attribute Access Modifier"
      }
    ],
    "filePath": "community/ndp/packstream-v1/src/main/java/org/neo4j/packstream/PackStream.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackedInputArray.java",
    "refactorings": [],
    "filePath": "community/ndp/packstream-v1/src/main/java/org/neo4j/packstream/PackedInputArray.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackedOutputArray.java",
    "refactorings": [],
    "filePath": "community/ndp/packstream-v1/src/main/java/org/neo4j/packstream/PackedOutputArray.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SocketProtocolV1.java",
    "refactorings": [],
    "filePath": "community/ndp/transport-socket/src/main/java/org/neo4j/ndp/transport/socket/SocketProtocolV1.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PrimitiveLongIntKeyValueArray.java",
    "refactorings": [],
    "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/primitive/PrimitiveLongIntKeyValueArray.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageFormatTest.java",
    "refactorings": [{
      "rightSideLineNumber": 136,
      "description": "Rename Method public shouldSerializePath() : void renamed to public shouldSerializePaths() : void in class org.neo4j.ndp.messaging.v1.MessageFormatTest",
      "type": "Rename Method"
    }],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/MessageFormatTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Neo4jPackTest.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/Neo4jPackTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Nodes.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Nodes.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Paths.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Paths.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Relationships.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Relationships.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Support.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Support.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ValuePathTest.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/infrastructure/ValuePathTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "MessageMatchers.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/util/MessageMatchers.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PackStreamTest.java",
    "refactorings": [],
    "filePath": "community/ndp/packstream-v1/src/test/java/org/neo4j/packstream/PackStreamTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "FragmentedMessageDeliveryTest.java",
    "refactorings": [],
    "filePath": "community/ndp/transport-socket/src/test/java/org/neo4j/ndp/transport/socket/FragmentedMessageDeliveryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "DocSerialization.java",
    "refactorings": [
      {
        "rightSideLineNumber": 71,
        "description": "Change Variable Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String) : byte[] from class org.neo4j.ndp.docs.v1.DocSerialization",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String, packer Neo4jPack.Packer, writer PackStreamMessageFormatV1.Writer) : void from class org.neo4j.ndp.docs.v1.DocSerialization",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/DocSerialization.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "DocStruct.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Encapsulate Attribute private name : String from class org.neo4j.ndp.docs.v1.DocStruct.Field",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Add Parameter exampleValue : String in method public Field(typeSignature String, name String, exampleValue String) from class org.neo4j.ndp.docs.v1.DocStruct.Field",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/DocStruct.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPMessageStructsDocTest.java",
    "refactorings": [],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPMessageStructsDocTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPValueDocTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 89,
        "description": "Change Method Access Modifier private to public in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 89,
        "description": "Add Method Modifier static in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
        "type": "Add Method Modifier"
      }
    ],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPValueDocTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPValueStructsDocTest.java",
    "refactorings": [],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPValueStructsDocTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PrimitiveLongIntKeyValueArrayTest.java",
    "refactorings": [],
    "filePath": "community/primitive-collections/src/test/java/org/neo4j/collection/primitive/PrimitiveLongIntKeyValueArrayTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BinaryJedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/BinaryJedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryJedisCluster.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/BinaryJedisCluster.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryShardedJedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/BinaryShardedJedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Client.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Client.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Connection.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Connection.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Jedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Jedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisCluster.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/JedisCluster.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyPipelineBase.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/MultiKeyPipelineBase.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "PipelineBase.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/PipelineBase.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Protocol.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Protocol.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ShardedJedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/ShardedJedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "AdvancedBinaryJedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/AdvancedBinaryJedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "AdvancedJedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/AdvancedJedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BasicCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BasicCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BasicRedisPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BasicRedisPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryJedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryJedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryJedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryJedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryRedisPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryRedisPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryScriptingCommandsPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryScriptingCommandsPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusterPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ClusterPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Commands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/Commands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisClusterBinaryScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisClusterBinaryScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisClusterScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisClusterScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyBinaryCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyBinaryCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyBinaryJedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyBinaryJedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyBinaryRedisPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyBinaryRedisPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyCommandsPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyCommandsPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyJedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyJedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolCommand.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ProtocolCommand.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ScriptingCommandsPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ScriptingCommandsPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "SentinelCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/SentinelCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectionTest.java",
    "refactorings": [],
    "filePath": "src/test/java/redis/clients/jedis/tests/ConnectionTest.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractApplePlatform.java",
    "refactorings": [{
      "rightSideLineNumber": 26,
      "description": "Change Class Access Modifier package to public in class com.facebook.buck.apple.AbstractApplePlatform.Name",
      "type": "Change Class Access Modifier"
    }],
    "filePath": "src/com/facebook/buck/apple/AbstractApplePlatform.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractCodeSignIdentity.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AbstractCodeSignIdentity.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractProvisioningProfileMetadata.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AbstractProvisioningProfileMetadata.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleBundle.java",
    "refactorings": [
      {
        "rightSideLineNumber": 258,
        "description": "Encapsulate Attribute private platformName : String from class com.facebook.buck.apple.AppleBundle",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Parameter sdk : AppleSdk in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, sdk AppleSdk, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>, provisioningProfileSearchPath Optional<SourcePath>) from class com.facebook.buck.apple.AppleBundle",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Parameter allValidCodeSignIdentities : ImmutableSet<CodeSignIdentity> in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, sdk AppleSdk, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>, provisioningProfileSearchPath Optional<SourcePath>) from class com.facebook.buck.apple.AppleBundle",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Parameter provisioningProfileSearchPath : Optional<SourcePath> in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, sdk AppleSdk, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>, provisioningProfileSearchPath Optional<SourcePath>) from class com.facebook.buck.apple.AppleBundle",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Remove Parameter platformName : String in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, platformName String, sdkName String) from class com.facebook.buck.apple.AppleBundle",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Remove Parameter sdkName : String in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, platformName String, sdkName String) from class com.facebook.buck.apple.AppleBundle",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "src/com/facebook/buck/apple/AppleBundle.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleBundleDescription.java",
    "refactorings": [{
      "rightSideLineNumber": 68,
      "description": "Add Parameter allValidCodeSignIdentities : ImmutableSet<CodeSignIdentity> in method public AppleBundleDescription(appleBinaryDescription AppleBinaryDescription, appleLibraryDescription AppleLibraryDescription, cxxPlatformFlavorDomain FlavorDomain<CxxPlatform>, platformFlavorsToAppleCxxPlatforms Map<Flavor,AppleCxxPlatform>, defaultCxxPlatform CxxPlatform, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>) from class com.facebook.buck.apple.AppleBundleDescription",
      "type": "Add Parameter"
    }],
    "filePath": "src/com/facebook/buck/apple/AppleBundleDescription.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleConfig.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AppleConfig.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CodeSignStep.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/CodeSignStep.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "InfoPlistSubstitution.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/InfoPlistSubstitution.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "PlistProcessStep.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/PlistProcessStep.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "ProvisioningProfileCopyStep.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/ProvisioningProfileCopyStep.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "InstallCommand.java",
    "refactorings": [{
      "rightSideLineNumber": 264,
      "description": "Extract Method private installAppleBundleForSimulator(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult extracted from private installAppleBundle(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult in class com.facebook.buck.cli.InstallCommand",
      "type": "Extract Method"
    }],
    "filePath": "src/com/facebook/buck/cli/InstallCommand.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "KnownBuildRuleTypes.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/rules/KnownBuildRuleTypes.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleTestDescription.java",
    "refactorings": [{
      "rightSideLineNumber": 92,
      "description": "Add Parameter allValidCodeSignIdentities : ImmutableSet<CodeSignIdentity> in method public AppleTestDescription(appleConfig AppleConfig, appleBundleDescription AppleBundleDescription, appleLibraryDescription AppleLibraryDescription, cxxPlatformFlavorDomain FlavorDomain<CxxPlatform>, platformFlavorsToAppleCxxPlatforms Map<Flavor,AppleCxxPlatform>, defaultCxxPlatform CxxPlatform, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>) from class com.facebook.buck.apple.AppleTestDescription",
      "type": "Add Parameter"
    }],
    "filePath": "src/com/facebook/buck/apple/AppleTestDescription.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AppleBundleIntegrationTest.java",
    "refactorings": [{
      "rightSideLineNumber": 76,
      "description": "Add Thrown Exception Type InterruptedException in method public simpleApplicationBundle() : void from class com.facebook.buck.apple.AppleBundleIntegrationTest",
      "type": "Add Thrown Exception Type"
    }],
    "filePath": "test/com/facebook/buck/apple/AppleBundleIntegrationTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "FakeAppleRuleDescriptions.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/FakeAppleRuleDescriptions.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "InfoPlistSubstitutionTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/InfoPlistSubstitutionTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "ProvisioningProfileCopyStepTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/ProvisioningProfileCopyStepTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "ProvisioningProfileMetadataTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/ProvisioningProfileMetadataTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "JobValidator.java",
    "refactorings": [],
    "filePath": "helios-client/src/main/java/com/spotify/helios/common/JobValidator.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "Job.java",
    "refactorings": [{
      "rightSideLineNumber": 138,
      "description": "Add Parameter hostname : String in method public Job(id JobId, image String, hostname String, command List<String>, env Map<String,String>, resources Resources, ports Map<String,PortMapping>, registration Map<ServiceEndpoint,ServicePorts>, gracePeriod Integer, volumes Map<String,String>, expires Date, registrationDomain String, creatingUser String, token String, healthCheck HealthCheck, securityOpt List<String>, networkMode String) from class com.spotify.helios.common.descriptors.Job",
      "type": "Add Parameter"
    }],
    "filePath": "helios-client/src/main/java/com/spotify/helios/common/descriptors/Job.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "TaskConfig.java",
    "refactorings": [],
    "filePath": "helios-services/src/main/java/com/spotify/helios/agent/TaskConfig.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "JobCreateCommand.java",
    "refactorings": [],
    "filePath": "helios-tools/src/main/java/com/spotify/helios/cli/command/JobCreateCommand.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "JobInspectCommand.java",
    "refactorings": [],
    "filePath": "helios-tools/src/main/java/com/spotify/helios/cli/command/JobInspectCommand.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "JobValidatorTest.java",
    "refactorings": [],
    "filePath": "helios-client/src/test/java/com/spotify/helios/common/JobValidatorTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "JobTest.java",
    "refactorings": [],
    "filePath": "helios-client/src/test/java/com/spotify/helios/common/descriptors/JobTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "ContainerHostNameTest.java",
    "refactorings": [],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/ContainerHostNameTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "IdMismatchJobCreateTest.java",
    "refactorings": [],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/IdMismatchJobCreateTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "JobCreateTest.java",
    "refactorings": [],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/JobCreateTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "SystemTestBase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 741,
        "description": "Extract Method protected createJobRawOutput(job Job) : String extracted from protected createJob(job Job) : JobId in class com.spotify.helios.system.SystemTestBase",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 714,
        "description": "Add Parameter hostname : String in method protected createJob(name String, version String, image String, hostname String, command List<String>, env Map<String,String>, ports Map<String,PortMapping>, registration Map<ServiceEndpoint,ServicePorts>, gracePeriod Integer, volumes Map<String,String>, expires Date) : JobId from class com.spotify.helios.system.SystemTestBase",
        "type": "Add Parameter"
      }
    ],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/SystemTestBase.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 504,
        "description": "Change Parameter Type nodes : List<String> to nodes : Collection<String> in method private getNodesByName(nodes Collection<String>) : List<Node> from class org.intellij.erlang.jps.builder.ErlangBuilder.SortedModuleDependencyGraph",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 502,
        "description": "Add Parameter Annotation @NotNull in parameter nodes : Collection<String> in method private getNodesByName(nodes Collection<String>) : List<Node> from class org.intellij.erlang.jps.builder.ErlangBuilder.SortedModuleDependencyGraph",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 309,
        "description": "Rename Method private getErlangModuleDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> renamed to private getErlangFileDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> in class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private isSourceOrHeader(file File) : boolean extracted from private buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder<ErlangSourceRootDescriptor,ErlangTarget>, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void in class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Rename Variable dirtyErlangModulePaths : List<String> to dirtyErlangFilePaths : List<String> in method private buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder<ErlangSourceRootDescriptor,ErlangTarget>, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 189,
        "description": "Add Method Annotation @NotNull in method private getAppConfigDestinationFileName(sourceFileName String) : String from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 263,
        "description": "Rename Variable moduleDescriptors : List<ErlangFileDescriptor> to fileDescriptors : List<ErlangFileDescriptor> in method private getErlangModulePaths(target ErlangTarget, context CompileContext, dirtyFilePaths List<String>, isTest boolean) : List<String> from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 268,
        "description": "Add Method Annotation @NotNull in method private getSortedErlangModulePathsToCompile(sortedModuleDescriptors List<ErlangFileDescriptor>, dirtyModules List<String>) : List<String> from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 419,
        "description": "Add Method Annotation @NotNull in method private getOutputErlangModuleFiles(erlangModulePathsToCompile List<String>, outputDirectory File) : List<File> from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangBuilder.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangFileDescriptor.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangFileDescriptor.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangModuleBuildOrderDescriptor.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangModuleBuildOrderDescriptor.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangSourceRootDescriptor.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangSourceRootDescriptor.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangTarget.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangTarget.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangPrepareDependenciesCompileTask.java",
    "refactorings": [
      {
        "rightSideLineNumber": 148,
        "description": "Change Variable Type builder : DFSTBuilder<Node> to builder : DFSTBuilder<String> in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Parameter module : Module in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Parameter onlyTestModules : boolean in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Method Annotation @NotNull in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Method Modifier static in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Move And Rename Method private getSortedModules() : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter to private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Move And Rename Method"
      },
      {
        "rightSideLineNumber": 256,
        "description": "Rename Parameter pt : String to name : String in method public fun(name String) : String from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getPathsFromNames.mapNotNull.new Function<String,String>",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 254,
        "description": "Change Return Type Node to String in method public fun(name String) : String from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getPathsFromNames.mapNotNull.new Function<String,String>",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Add Parameter Annotation @NotNull in parameter erlangModuleNames : Collection<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 253,
        "description": "Rename Parameter nodesName : Collection<String> to erlangModuleNames : Collection<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Change Return Type List<Node> to List<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Add Method Annotation @NotNull in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Move And Rename Method private getModuleNodes(nodesName Collection<String>) : List<Node> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter.ErlangModulesDependencyGraph to private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Move And Rename Method"
      }
    ],
    "filePath": "src/org/intellij/erlang/compilation/ErlangPrepareDependenciesCompileTask.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangPsiImplUtil.java",
    "refactorings": [{
      "rightSideLineNumber": 1075,
      "description": "Change Method Access Modifier private to public in method public addDeclaredBehaviourModuleNames(file ErlangFile, behaviourNames Set<String>) : void from class org.intellij.erlang.psi.impl.ErlangPsiImplUtil",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "src/org/intellij/erlang/psi/impl/ErlangPsiImplUtil.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangModulesUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 116,
        "description": "Rename Method private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> renamed to private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Extract Method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void extracted from private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Add Parameter Annotation @NotNull in parameter filesCollector : Processor<VirtualFile> in method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Parameterize Variable modulesCollector : Processor<VirtualFile> to filesCollector : Processor<VirtualFile> in method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Rename Variable modulesCollector : Processor<VirtualFile> to filesCollector : Processor<VirtualFile> in method private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 116,
        "description": "Add Parameter type : ErlangFileType in method private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 176,
        "description": "Add Parameter type : ErlangFileType in method private getErlangModulesCollector(psiManager PsiManager, erlangFiles Collection<ErlangFile>, type ErlangFileType) : Processor<VirtualFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/org/intellij/erlang/utils/ErlangModulesUtil.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangCompilationTestBase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 149,
        "description": "Extract Method private addFile(sourceDir VirtualFile, relativePath String, content String) : VirtualFile extracted from protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 241,
        "description": "Extract Method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile extracted from private addSourceRoot(module Module, sourceRootName String, isTestSourceRoot boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 232,
        "description": "Change Parameter Type isTestSourceRoot : boolean to rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 221,
        "description": "Add Parameter Annotation @NotNull in parameter rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 232,
        "description": "Rename Parameter isTestSourceRoot : boolean to rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Add Parameter Annotation @NotNull in parameter module : Module in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Add Parameter Annotation @NotNull in parameter relativePath : String in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Add Parameter Annotation @NotNull in parameter content : String in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 188,
        "description": "Add Method Annotation @Nullable in method public fun(source String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase.assertSourcesCompiled.assertContains.mapNotNull.new Function<String,String>",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 211,
        "description": "Extract Variable expectedOutputFileName : String in method protected getOutputFile(module Module, sourceFile VirtualFile, isTest boolean) : File from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Add Method Annotation @Nullable in method protected getOutputFile(module Module, sourceFile VirtualFile, isTest boolean) : File from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 270,
        "description": "Extract Variable file : File in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 267,
        "description": "Add Method Annotation @Nullable in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 267,
        "description": "Remove Method Annotation @NotNull in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 199,
        "description": "Change Parameter Type fileNames : String... to fileNames : List<String> in method protected assertContains(parentPath VirtualFile, fileNames List<String>) : void from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangCompilationTestBase.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangDependenciesResolutionTest.java",
    "refactorings": [{
      "rightSideLineNumber": 123,
      "description": "Rename Method private assertSameErlangModules(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String...) : void renamed to private assertSameErlangFiles(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String...) : void in class org.intellij.erlang.compilation.ErlangDependenciesResolutionTest",
      "type": "Rename Method"
    }],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangDependenciesResolutionTest.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangModuleCompilationTest.java",
    "refactorings": [{
      "rightSideLineNumber": 200,
      "description": "Extract Variable outputFile : File in method private lastOutputModificationTime(module Module, sourceFile VirtualFile) : long from class org.intellij.erlang.compilation.ErlangModuleCompilationTest",
      "type": "Extract Variable"
    }],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangModuleCompilationTest.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangModuleTextGenerator.java",
    "refactorings": [],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangModuleTextGenerator.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathExpectationsHelper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 241,
        "description": "Extract Method private assertExistsAndReturn(content String) : Object extracted from public assertValueIsArray(responseContent String) : void in class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 244,
        "description": "Extract Method private assertExistsAndReturn(content String) : Object extracted from public exists(content String) : void in class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 240,
        "description": "Extract Variable reason : String in method private assertExistsAndReturn(content String) : Object from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 240,
        "description": "Rename Variable actualValue : Object to value : Object in method private assertExistsAndReturn(content String) : Object from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 238,
        "description": "Rename Parameter responseContent : String to content : String in method private assertExistsAndReturn(content String) : Object from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 174,
        "description": "Rename Variable actualValue : Object to value : Object in method public assertValueIsArray(content String) : void from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 171,
        "description": "Rename Parameter responseContent : String to content : String in method public assertValueIsArray(content String) : void from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 111,
        "description": "Rename Parameter responseContent : String to content : String in method public assertValue(content String, expectedValue Object) : void from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathResultMatchers.java",
    "refactorings": [],
    "filePath": "spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "MockMvcResultMatchers.java",
    "refactorings": [],
    "filePath": "spring-test/src/main/java/org/springframework/test/web/servlet/result/MockMvcResultMatchers.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathExpectationsHelperTests.java",
    "refactorings": [],
    "filePath": "spring-test/src/test/java/org/springframework/test/util/JsonPathExpectationsHelperTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathResultMatchersTests.java",
    "refactorings": [],
    "filePath": "spring-test/src/test/java/org/springframework/test/web/servlet/result/JsonPathResultMatchersTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "Checker.java",
    "refactorings": [
      {
        "rightSideLineNumber": 176,
        "description": "Replace Loop With Pipeline for(final fsc: fileSetChecks) with fileSetChecks.forEach(FileSetCheck::finishProcessing); in method public process(files List<File>) : int from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 176,
        "description": "Replace Loop With Pipeline for(final fsc: fileSetChecks) with fileSetChecks.forEach(FileSetCheck::destroy); in method public process(files List<File>) : int from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 210,
        "description": "Replace Loop With Pipeline for(check: fileSetChecks) with fileSetChecks.stream().filter(check -> check instanceof ExternalResourceHolder).forEach(check -> { in method private getExternalResourceLocations() : Set<String> from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 210,
        "description": "Replace Loop With Pipeline for(filter: filters.getFilters()) with filters.getFilters().stream().filter(filter -> filter instanceof ExternalResourceHolder).forEach(filter -> { in method private getExternalResourceLocations() : Set<String> from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Main.java",
    "refactorings": [{
      "rightSideLineNumber": 136,
      "description": "Replace Loop With Pipeline for(message: messages) with messages.forEach(System.out::println); in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.Main",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "PackageObjectFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 124,
        "description": "Replace Loop With Pipeline for(packageName: packages) with names.addAll(packages.stream().map(packageName -> packageName + name).collect(Collectors.toList())); in method private getAllPossibleNames(name String) : Set<String> from class com.puppycrawl.tools.checkstyle.PackageObjectFactory",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.PackageObjectFactory.joinPackageNamesWithClassName.collect.filter.new Predicate<String> with name -> name != null in method private joinPackageNamesWithClassName(className String, packages Set<String>) : String from class com.puppycrawl.tools.checkstyle.PackageObjectFactory",
        "type": "Replace Anonymous With Lambda"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyCacheFile.java",
    "refactorings": [
      {
        "rightSideLineNumber": 297,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.PropertyCacheFile.areExternalResourcesChanged.isPresent.tryFind.new Predicate<ExternalResource> with resource -> {boolean changed=false; in method private areExternalResourcesChanged(resources Set<ExternalResource>) : boolean from class com.puppycrawl.tools.checkstyle.PropertyCacheFile",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 319,
        "description": "Replace Loop With Pipeline for(resource: externalResources) with externalResources.stream().filter(resource -> !isResourceLocationInCache(resource.location)).forEach(resource -> details.setProperty(resource.location,resource.contentHashSum)); in method private fillCacheWithExternalResources(externalResources Set<ExternalResource>) : void from class com.puppycrawl.tools.checkstyle.PropertyCacheFile",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeWalker.java",
    "refactorings": [
      {
        "rightSideLineNumber": 457,
        "description": "Replace Loop With Pipeline for(check: ordinaryChecks) with ordinaryChecks.forEach(AbstractCheck::destroy); in method public destroy() : void from class com.puppycrawl.tools.checkstyle.TreeWalker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 457,
        "description": "Replace Loop With Pipeline for(check: commentChecks) with commentChecks.forEach(AbstractCheck::destroy); in method public destroy() : void from class com.puppycrawl.tools.checkstyle.TreeWalker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 475,
        "description": "Replace Loop With Pipeline for(check: checks) with checks.stream().filter(check -> check instanceof ExternalResourceHolder).forEach(check -> { in method private getExternalResourceLocations(checks Set<AbstractCheck>) : Set<String> from class com.puppycrawl.tools.checkstyle.TreeWalker",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalizedMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 57,
      "description": "Replace Generic With Diamond HashMap<String,ResourceBundle> with HashMap<> in attribute private BUNDLE_CACHE : Map<String,ResourceBundle> from class com.puppycrawl.tools.checkstyle.api.LocalizedMessage",
      "type": "Replace Generic With Diamond"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EqualsAvoidNullCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 251,
      "description": "Replace Loop With Pipeline for(methodCall: child.getMethodCalls()) with child.getMethodCalls().forEach(this::checkMethodCall); in method private traverseFieldFrameTree(frame FieldFrame) : void from class com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EqualsHashCodeCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 139,
      "description": "Replace Loop With Pipeline for(detailASTDetailASTEntry: objBlockWithEquals.entrySet()) with objBlockWithEquals.entrySet().stream().filter(detailASTDetailASTEntry -> objBlockWithHashCode.remove(detailASTDetailASTEntry.getKey()) == null).forEach(detailASTDetailASTEntry -> { in method public finishTree(rootAST DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "FinalLocalVariableCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 310,
      "description": "Replace Loop With Pipeline for(variable: scopeData.uninitializedVariables) with scopeData.uninitializedVariables.forEach(prevScopeUnitializedVariableData::push); in method private storePrevScopeUninitializedVariableData() : void from class com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalInstantiationCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 143,
      "description": "Replace Loop With Pipeline for(literalNewAST: instantiations) with instantiations.forEach(this::postProcessLiteralNew); in method public finishTree(rootAST DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ModifiedControlVariableCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 368,
      "description": "Replace Loop With Pipeline for(iteratingExpressionAST: findChildrenOfExpressionType(forUpdateListAST)) with findChildrenOfExpressionType(forUpdateListAST).stream().filter(iteratingExpressionAST -> MUTATION_OPERATIONS.contains(iteratingExpressionAST.getType())).forEach(iteratingExpressionAST -> { in method private getForIteratorVariables(ast DetailAST) : Set<String> from class com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "VisibilityModifierCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 723,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck.areImmutableTypeArguments.isPresent.tryFind.new Predicate<String> with typeName -> !immutableClassShortNames.contains(typeName) && !immutableClassCanonicalNames.contains(typeName) in method private areImmutableTypeArguments(typeArgsClassNames List<String>) : boolean from class com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RedundantImportCheck.java",
    "refactorings": [
      {
        "rightSideLineNumber": 107,
        "description": "Replace Loop With Pipeline for(full: imports) with imports.stream().filter(full -> imp.getText().equals(full.getText())).forEach(full -> log(ast.getLineNo(),ast.getColumnNo(),MSG_DUPLICATE,full.getLineNo(),imp.getText())); in method public visitToken(ast DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Replace Loop With Pipeline for(full: staticImports) with staticImports.stream().filter(full -> imp.getText().equals(full.getText())).forEach(full -> log(ast.getLineNo(),ast.getColumnNo(),MSG_DUPLICATE,full.getLineNo(),imp.getText())); in method public visitToken(ast DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UnusedImportsCheck.java",
    "refactorings": [
      {
        "rightSideLineNumber": 101,
        "description": "Replace Loop With Pipeline for(final imp: imports) with imports.stream().filter(imp -> !referenced.contains(CommonUtils.baseClassName(imp.getText()))).forEach(imp -> log(imp.getLineNo(),imp.getColumnNo(),MSG_KEY,imp.getText())); in method public finishTree(rootAST DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 229,
        "description": "Replace Loop With Pipeline for(final tag: getValidTags(textBlock,JavadocUtils.JavadocTagType.INLINE)) with getValidTags(textBlock,JavadocUtils.JavadocTagType.INLINE).stream().filter(JavadocTag::canReferenceImports).forEach(tag -> references.addAll(processJavadocTag(tag))); in method private collectReferencesFromJavadoc(textBlock TextBlock) : Set<String> from class com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 229,
        "description": "Replace Loop With Pipeline for(final tag: getValidTags(textBlock,JavadocUtils.JavadocTagType.BLOCK)) with getValidTags(textBlock,JavadocUtils.JavadocTagType.BLOCK).stream().filter(JavadocTag::canReferenceImports).forEach(tag -> references.addAll(matchPattern(tag.getFirstArg(),FIRST_CLASS_NAME))); in method private collectReferencesFromJavadoc(textBlock TextBlock) : Set<String> from class com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocMethodCheck.java",
    "refactorings": [
      {
        "rightSideLineNumber": 474,
        "description": "Replace Loop With Pipeline for(javadocTag: tags) with tags.stream().filter(javadocTag -> !javadocTag.isSeeOrInheritDocTag()).forEach(javadocTag -> log(javadocTag.getLineNo(),MSG_UNUSED_TAG_GENERAL)); in method private checkComment(ast DetailAST, comment TextBlock) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 865,
        "description": "Replace Loop With Pipeline for(exceptionInfo: throwsList) with throwsList.stream().filter(exceptionInfo -> !exceptionInfo.isFound()).forEach(exceptionInfo -> { in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaNCSSCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 192,
      "description": "Replace Loop With Pipeline for(final counter: counters) with counters.forEach(Counter::increment); in method public visitToken(ast DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressWithNearbyCommentFilter.java",
    "refactorings": [{
      "rightSideLineNumber": 231,
      "description": "Replace Loop With Pipeline for(final element: cComments) with cComments.forEach(this::tagSuppressions); in method private tagSuppressions() : void from class com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressionCommentFilter.java",
    "refactorings": [{
      "rightSideLineNumber": 226,
      "description": "Replace Loop With Pipeline for(element: cComments) with cComments.forEach(this::tagSuppressions); in method private tagSuppressions() : void from class com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ListToTreeSelectionModelWrapper.java",
    "refactorings": [{
      "rightSideLineNumber": 41,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.gui.ListToTreeSelectionModelWrapper.ListToTreeSelectionModelWrapper.addListSelectionListener.new ListSelectionListener with event -> updateSelectedPathsFromSelectedRows() in method package ListToTreeSelectionModelWrapper(jTreeTable JTreeTable) from class com.puppycrawl.tools.checkstyle.gui.ListToTreeSelectionModelWrapper",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Main.java",
    "refactorings": [{
      "rightSideLineNumber": 39,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.gui.Main.main.invokeLater.new Runnable with () -> {final MainFrame mainFrame=new MainFrame(); in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.gui.Main",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/Main.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeTableModelAdapter.java",
    "refactorings": [{
      "rightSideLineNumber": 111,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter.delayedFireTableDataChanged.invokeLater.new Runnable with this::fireTableDataChanged in method private delayedFireTableDataChanged() : void from class com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseCheckTestSupport.java",
    "refactorings": [{
      "rightSideLineNumber": 176,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.BaseCheckTestSupport.verify.realExpectedViolations.filterValues.new Predicate<List<String>> with input -> !input.isEmpty() in method protected verify(checker Checker, processedFiles File[], expectedViolations Map<String,List<String>>) : void from class com.puppycrawl.tools.checkstyle.BaseCheckTestSupport",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "CheckerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 272,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testSetters() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 320,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testFinishLocalSetupFullyInitialized() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 331,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testSetupChildExceptions() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 348,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testSetupChildListener() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 451,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testWithCacheWithNoViolation() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "MainTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 143,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testVersionPrint.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Checkstyle version: null\" + System.lineSeparator(),systemOut.getLog()); in method public testVersionPrint() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testWrongArgument.checkAssertionAfterwards.new Assertion with () -> {final String usage=String.format(Locale.ROOT,\"Unrecognized option: -w%n\") + USAGE; in method public testWrongArgument() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 168,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNoConfigSpecified.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Must specify a config XML file.\" + System.lineSeparator(),systemOut.getLog()); in method public testNoConfigSpecified() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 180,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingTargetFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Files to process must be specified, found 0.\" + System.lineSeparator(),systemOut.getLog()); in method public testNonExistingTargetFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 192,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingConfigFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Could not find config XML file \" + \"'src/main/resources/non_existing_config.xml'.%n\"),systemOut.getLog()); in method public testNonExistingConfigFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 207,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingOutputFormat.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Invalid output format. \" + \"Found 'xmlp' but expected 'plain' or 'xml'.%n\"),systemOut.getLog()); in method public testNonExistingOutputFormat() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 219,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingClass.checkAssertionAfterwards.new Assertion with () -> {final String expectedExceptionMessage=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testNonExistingClass() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 236,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Starting audit...%n\" + \"Audit done.%n\"),systemOut.getLog()); in method public testExistingTargetFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 248,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFileXmlOutput.checkAssertionAfterwards.new Assertion with () -> {final String expectedPath=getFilePath(\"InputMain.java\"); in method public testExistingTargetFileXmlOutput() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 270,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutput.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Starting audit...%n\" + \"Audit done.%n\"),systemOut.getLog()); in method public testExistingTargetFilePlainOutput() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 283,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFileWithViolations.checkAssertionAfterwards.new Assertion with () -> {final String expectedPath=getFilePath(\"InputMain.java\"); in method public testExistingTargetFileWithViolations() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 302,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFileWithError.checkAssertionAfterwards.new Assertion with () -> {final String expectedPath=getFilePath(\"InputMain.java\"); in method public testExistingTargetFileWithError() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 322,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputToNonExistingFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"\",systemOut.getLog()); in method public testExistingTargetFilePlainOutputToNonExistingFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 336,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputToFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"\",systemOut.getLog()); in method public testExistingTargetFilePlainOutputToFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 361,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputProperties.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Starting audit...%n\" + \"Audit done.%n\"),systemOut.getLog()); in method public testExistingTargetFilePlainOutputProperties() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputNonexistingProperties.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Could not find file 'nonexisting.properties'.\" + System.lineSeparator(),systemOut.getLog()); in method public testExistingTargetFilePlainOutputNonexistingProperties() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 389,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingIncorrectConfigFile.checkAssertionAfterwards.new Assertion with () -> {final String output=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testExistingIncorrectConfigFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 405,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingIncorrectChildrenInConfigFile.checkAssertionAfterwards.new Assertion with () -> {final String output=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testExistingIncorrectChildrenInConfigFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 422,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingIncorrectChildrenInConfigFile2.checkAssertionAfterwards.new Assertion with () -> {final String output=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testExistingIncorrectChildrenInConfigFile2() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 574,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testFileReferenceDuringException.checkAssertionAfterwards.new Assertion with () -> {final String expectedExceptionMessage=String.format(Locale.ROOT,\"Starting audit...%n\" + \"Checkstyle ends with 1 errors.%n\"); in method public testFileReferenceDuringException() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 596,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeOnMoreThanOneFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Printing AST is allowed for only one file.\" + System.lineSeparator(),systemOut.getLog()); in method public testPrintTreeOnMoreThanOneFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 609,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog()); in method public testPrintTreeOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 644,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeCommentsOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog()); in method public testPrintTreeCommentsOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 682,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeJavadocOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog().replaceAll(\"\\\\\\\\r\\\\\\\\n\",\"\\\\\\\\n\")); in method public testPrintTreeJavadocOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 695,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintFullTreeOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog().replaceAll(\"\\\\\\\\r\\\\\\\\n\",\"\\\\\\\\n\")); in method public testPrintFullTreeOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 708,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsC.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsC() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 721,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsP.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsP() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 734,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsF.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsF() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 747,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsO.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsO() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 761,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testDebugOption.checkAssertionAfterwards.new Assertion with () -> assertNotEquals(\"\",systemErr.getLog()) in method public testDebugOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 767,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExcludeOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Files to process must be specified, found 0.\" + System.lineSeparator(),systemOut.getLog()); in method public testExcludeOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 778,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExcludeRegexpOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Files to process must be specified, found 0.\" + System.lineSeparator(),systemOut.getLog()); in method public testExcludeRegexpOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "PackageObjectFactoryTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 41,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in attribute private factory : PackageObjectFactory from class com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testCtorException() : void from class com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TreeWalkerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 154,
        "description": "Replace Generic With Diamond ArrayList<String> with ArrayList<> in method public testProcessNonJavaFiles() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testWithCacheWithNoViolation() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testProcessWithParserThrowable() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 198,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testProcessWithRecognitionException() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "DetailASTTest.java",
    "refactorings": [{
      "rightSideLineNumber": 124,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.api.DetailASTTest.checkDir.files.listFiles.new FileFilter with file -> (file.getName().endsWith(\".java\") || file.isDirectory()) && !file.getName().endsWith(\"InputGrammar.java\") in method private checkDir(dir File) : void from class com.puppycrawl.tools.checkstyle.api.DetailASTTest",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "GenericWhitespaceCheckTest.java",
    "refactorings": [{
      "rightSideLineNumber": 48,
      "description": "Replace Loop With Pipeline for(final entry: x.entrySet()) with x.entrySet().forEach(Map.Entry::getValue); in method public setUp() : void from class com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "AllChecksTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 149,
        "description": "Replace Loop With Pipeline for(check: checksNames) with checksNames.stream().filter(check -> !checksReferencedInConfig.contains(check)).forEach(check -> { in method public testAllChecksAreReferencedInConfigFile() : void from class com.puppycrawl.tools.checkstyle.internal.AllChecksTest",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 162,
        "description": "Replace Loop With Pipeline for(moduleName: checkstyleModulesNames) with checkstyleModulesNames.stream().filter(moduleName -> !modulesNamesWhichHaveXdocs.contains(moduleName)).forEach(moduleName -> { in method public testAllCheckstyleModulesHaveXdocDocumentation() : void from class com.puppycrawl.tools.checkstyle.internal.AllChecksTest",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 290,
        "description": "Replace Loop With Pipeline for(check: checks) with return checks.stream().map(check -> check.getSimpleName().replace(\"Check\",\"\")).collect(Collectors.toSet()); in method private getSimpleNames(checks Set<Class<?>>) : Set<String> from class com.puppycrawl.tools.checkstyle.internal.AllChecksTest",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "XDocsPagesTest.java",
    "refactorings": [{
      "rightSideLineNumber": 394,
      "description": "Replace Loop With Pipeline for(p: new HashSet<>(properties)) with new HashSet<>(properties).stream().filter(p -> UNDOCUMENTED_PROPERTIES.contains(clss.getSimpleName() + \".\" + p)).forEach(properties::remove); in method private validatePropertySection(fileName String, sectionName String, subSection Node, instance Object) : void from class com.puppycrawl.tools.checkstyle.internal.XDocsPagesTest",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XDocsPagesTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "CommonUtilsTest.java",
    "refactorings": [{
      "rightSideLineNumber": 199,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.utils.CommonUtilsTest.testCloseWithException.close.new Closeable with () -> {throw new IOException(\"Test IOException\"); in method public testCloseWithException() : void from class com.puppycrawl.tools.checkstyle.utils.CommonUtilsTest",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "JupiterEngineExecutionContext.java",
    "refactorings": [
      {
        "rightSideLineNumber": 90,
        "description": "Change Method Access Modifier public to package in method package State(executionListener EngineExecutionListener, configurationParameters ConfigurationParameters) from class org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 76,
        "description": "Change Method Access Modifier public to private in method private builder(context JupiterEngineExecutionContext) : Builder from class org.junit.jupiter.engine.execution.JupiterEngineExecutionContext",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/JupiterEngineExecutionContext.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassTestDescriptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 203,
        "description": "Replace Pipeline With Loop registry.stream(BeforeAllCallback.class).forEach(extension -> executeAndMaskThrowable(() -> extension.beforeAll(context))); with for(callback: registry.toList(BeforeAllCallback.class)) in method private invokeBeforeAllCallbacks(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Replace Pipeline With Loop"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Rename Variable extension : null to callback : BeforeAllCallback in method private invokeBeforeAllCallbacks(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 203,
        "description": "Add Parameter throwableCollector : ThrowableCollector in method private invokeBeforeAllCallbacks(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Replace Pipeline With Loop this.beforeAllMethods.forEach(method -> executeAndMaskThrowable(() -> executableInvoker.invoke(method,context,registry))); with for(method: this.beforeAllMethods) in method private invokeBeforeAllMethods(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Replace Pipeline With Loop"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Add Parameter throwableCollector : ThrowableCollector in method private invokeBeforeAllMethods(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Add Parameter"
      }
    ],
    "filePath": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "BeforeAndAfterAllTests.java",
    "refactorings": [{
      "rightSideLineNumber": 128,
      "description": "Extract Method private assertBeforeAllAndAfterAllCallbacks(testClass Class<?>, testsStarted int, testsSuccessful int, expectedCalls String...) : void extracted from private assertBeforeAllAndAfterAllCallbacks(testClass Class<?>, expectedCalls String...) : void in class org.junit.jupiter.engine.extension.BeforeAndAfterAllTests",
      "type": "Extract Method"
    }],
    "filePath": "junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/extension/BeforeAndAfterAllTests.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "BeforeAndAfterEachTests.java",
    "refactorings": [],
    "filePath": "junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/extension/BeforeAndAfterEachTests.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "HierarchicalTestExecutor.java",
    "refactorings": [{
      "rightSideLineNumber": 80,
      "description": "Extract Variable context : C in method private execute(testDescriptor TestDescriptor, parentContext C) : void from class org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor",
      "type": "Extract Variable"
    }],
    "filePath": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/HierarchicalTestExecutor.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "HierarchicalTestExecutorTests.java",
    "refactorings": [],
    "filePath": "platform-tests/src/test/java/org/junit/platform/engine/support/hierarchical/HierarchicalTestExecutorTests.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "LifecycleMethodUtils.java",
    "refactorings": [],
    "filePath": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/LifecycleMethodUtils.java",
    "commit": "https://github.com/junit-team/junit5/commit/6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassTestDescriptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 205,
        "description": "Rename Method private registerAnnotatedMethodsAsExtensions(extensionRegistry ExtensionRegistry, annotationType Class<? extends Annotation>, extensionType Class<E>, methodValidator BiConsumer<Class<E>,Method>, extensionSynthesizer BiFunction<ExtensionRegistry,Method,Extension>) : void renamed to private registerMethodsAsExtensions(methods List<Method>, registry ExtensionRegistry, extensionSynthesizer BiFunction<ExtensionRegistry,Method,Extension>) : void in class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 178,
        "description": "Replace Loop With Pipeline for(method: this.beforeAllMethods) with this.beforeAllMethods.forEach(method -> executeAndMaskThrowable(() -> new MethodInvoker(context,registry).invoke(methodInvocationContext(null,method)))); in method private invokeBeforeAllMethods(registry ExtensionRegistry, context ContainerExtensionContext) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Replace Loop With Pipeline for(method: this.afterAllMethods) with this.afterAllMethods.forEach(method -> throwableCollector.execute(() -> new MethodInvoker(context,registry).invoke(methodInvocationContext(null,method)))); in method private invokeAfterAllMethods(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 198,
        "description": "Rename Parameter extensionRegistry : ExtensionRegistry to registry : ExtensionRegistry in method private registerBeforeEachMethodAdapters(registry ExtensionRegistry) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 202,
        "description": "Rename Parameter extensionRegistry : ExtensionRegistry to registry : ExtensionRegistry in method private registerAfterEachMethodAdapters(registry ExtensionRegistry) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 208,
        "description": "Rename Parameter extensionRegistry : ExtensionRegistry to registry : ExtensionRegistry in method private registerMethodsAsExtensions(methods List<Method>, registry ExtensionRegistry, extensionSynthesizer BiFunction<ExtensionRegistry,Method,Extension>) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
    "commit": "https://github.com/junit-team/junit5/commit/6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "Checker.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Main.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "PackageNamesLoader.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeWalker.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "XMLLogger.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractFileSetCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Check.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "DetailAST.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "DescendantTokenCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TodoCommentCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TrailingCommentCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UncommentedMainCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UpperEllCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UpperEllCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingDeprecatedCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingOverrideCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyCatchBlockCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "LeftCurlyCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RightCurlyCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "HiddenFieldCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalInstantiationCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalTokenCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalTokenTextCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalTypeCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MagicNumberCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingCtorCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingSwitchDefaultCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MultipleStringLiteralsCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "VariableDeclarationUsageDistanceCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "VisibilityModifierCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RegexpHeaderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomImportOrderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportOrderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UnusedImportsCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractExpressionHandler.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentsIndentationCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "HandlerFactory.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AtclauseOrderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocMethodCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocParagraphCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocTypeCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocVariableCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SummaryJavadocCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "WriteTagCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "LineLengthCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractParenPadCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyForInitializerPadCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "GenericWhitespaceCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MethodParamPadCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "OperatorWrapCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressElement.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressWithNearbyCommentFilter.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressionCommentFilter.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ParseTreeModel.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CommonUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "IndentationConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TokenTypesTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/api/TokenTypesTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "IndentationCheckTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeNameCheckTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "CommonUtilsTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TokenUtilsTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "UtilsTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/UtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "DateUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
    "commit": "https://github.com/apache/commons-lang/commit/d9a2c69a9d1db6072e1d7b7ea4fcbd5c15d20b5d",
    "repository": "https://github.com/apache/commons-lang.git",
    "fileType": "main"
  },
  {
    "fileName": "DateUtilsTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 704,
        "description": "Split Method public testToCalendarWithDate() : void to [public testToCalendarWithDateNotNull() : void, public testToCalendarWithDateNull() : void] in class org.apache.commons.lang3.time.DateUtilsTest",
        "type": "Split Method"
      },
      {
        "rightSideLineNumber": 721,
        "description": "Split Method public testToCalendarWithTimeZone() : void to [public testToCalendarWithTimeZoneNotNull() : void, public testToCalendarWithTimeZoneNull() : void] in class org.apache.commons.lang3.time.DateUtilsTest",
        "type": "Split Method"
      },
      {
        "rightSideLineNumber": 740,
        "description": "Split Method public testToCalendarWithDateAndTimeZone() : void to [public testToCalendarWithDateAndTimeZoneNotNull() : void, public testToCalendarWithDateAndTimeZoneNull() : void] in class org.apache.commons.lang3.time.DateUtilsTest",
        "type": "Split Method"
      }
    ],
    "filePath": "src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java",
    "commit": "https://github.com/apache/commons-lang/commit/d9a2c69a9d1db6072e1d7b7ea4fcbd5c15d20b5d",
    "repository": "https://github.com/apache/commons-lang.git",
    "fileType": "test"
  }
]