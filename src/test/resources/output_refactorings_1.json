[
  {
    "fileName": "BaseRestTest.java",
    "refactorings": [{
      "rightSideLineNumber": 6,
      "description": "Remove Class Annotation @Listeners({BaseRestTest.class,SeedListener.class}) in class integration.BaseRestTest",
      "type": "Remove Class Annotation"
    }],
    "filePath": "integration-tests/src/test/java/integration/BaseRestTest.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseRestTestHelper.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/BaseRestTestHelper.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "MongoDbSeedRule.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/MongoDbSeedRule.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "RequiredVersionRule.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/RequiredVersionRule.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "RestAssuredSetupRule.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/RestAssuredSetupRule.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "SeedListener.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/SeedListener.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "TotalTest.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/counts/TotalTest.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "SystemTest.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/system/SystemTest.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "CollectorsTest.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/system/collectors/CollectorsTest.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "GrokTests.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Modify Method Annotation @Test(dependsOnMethods = \"createGrokPattern\") to @Test in method public listPatterns() : void from class integration.system.grok.GrokTests",
        "type": "Modify Method Annotation"
      },
      {
        "rightSideLineNumber": 63,
        "description": "Modify Method Annotation @Test(dependsOnMethods = \"listPatterns\") to @Test in method public deletePattern() : void from class integration.system.grok.GrokTests",
        "type": "Modify Method Annotation"
      }
    ],
    "filePath": "integration-tests/src/test/java/integration/system/grok/GrokTests.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "InputsTest.java",
    "refactorings": [{
      "rightSideLineNumber": 40,
      "description": "Modify Method Annotation @Test(dependsOnMethods = \"createInputTest\") to @Test in method public listInput() : void from class integration.system.inputs.InputsTest",
      "type": "Modify Method Annotation"
    }],
    "filePath": "integration-tests/src/test/java/integration/system/inputs/InputsTest.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "GraylogControl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 155,
        "description": "Rename Method public getServerUrl() : URL renamed to private getDefaultServerUrl() : URL in class integration.util.graylog.GraylogControl",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 151,
        "description": "Encapsulate Attribute private url : URL from class integration.util.graylog.GraylogControl",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 160,
        "description": "Inline Variable url : URL in method public getServerUrl() : URL from class integration.util.graylog.GraylogControl",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Merge Catch [catch(URISyntaxException e), catch(MalformedURLException e)] to catch(URISyntaxException|MalformedURLException e) in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
        "type": "Merge Catch"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Add Variable Modifier final in variable uriBuilder : URIBuilder in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 161,
        "description": "Change Variable Type e : URISyntaxException to e : URISyntaxException|MalformedURLException in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Change Method Access Modifier public to private in method private getDefaultServerUrl() : URL from class integration.util.graylog.GraylogControl",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "integration-tests/src/test/java/integration/util/graylog/GraylogControl.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "MongodbSeed.java",
    "refactorings": [],
    "filePath": "integration-tests/src/test/java/integration/util/mongodb/MongodbSeed.java",
    "commit": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "fileType": "test"
  },
  {
    "fileName": "MigrationRequestOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/partition/impl/MigrationRequestOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ReplicaSyncRequest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/partition/impl/ReplicaSyncRequest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeEngineImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/NodeEngineImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceInfo.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/servicemanager/ServiceInfo.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceManager.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/servicemanager/ServiceManager.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceManagerImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/servicemanager/impl/ServiceManagerImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceManagerImplTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/servicemanager/impl/ServiceManagerImplTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "DbClient.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/db/DbClient.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultMetricFinder.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/metric/DefaultMetricFinder.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricDao.java",
    "refactorings": [{
      "rightSideLineNumber": 115,
      "description": "Rename Method public disable(session DbSession, ids List<Integer>) : void renamed to public disableByIds(session DbSession, ids List<Integer>) : void in class org.sonar.server.metric.persistence.MetricDao",
      "type": "Rename Method"
    }],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/metric/persistence/MetricDao.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteAction.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/metric/ws/DeleteAction.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PlatformLevel4.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/platform/platformlevel/PlatformLevel4.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "RegisterMetrics.java",
    "refactorings": [
      {
        "rightSideLineNumber": 112,
        "description": "Rename Method package getMetricsRepositories() : List<Metric> renamed to package getPluginMetrics() : List<Metric> in class org.sonar.server.startup.RegisterMetrics",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 74,
        "description": "Extract Method package register(metrics Iterable<Metric>) : void extracted from public start() : void in class org.sonar.server.startup.RegisterMetrics",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 51,
        "description": "Merge Parameter [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient, metricsRepositories Metrics[]) from class org.sonar.server.startup.RegisterMetrics",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Merge Parameter [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient in method public RegisterMetrics(dbClient DbClient) from class org.sonar.server.startup.RegisterMetrics",
        "type": "Merge Parameter"
      },
      {
        "rightSideLineNumber": 48,
        "description": "Merge Attribute [measuresDao : MeasuresDao, conditionDao : QualityGateConditionDao] to dbClient : DbClient in class org.sonar.server.startup.RegisterMetrics",
        "type": "Merge Attribute"
      }
    ],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/startup/RegisterMetrics.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultMetricFinder.java",
    "refactorings": [],
    "filePath": "sonar-core/src/main/java/org/sonar/core/metric/DefaultMetricFinder.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricMapper.java",
    "refactorings": [],
    "filePath": "sonar-core/src/main/java/org/sonar/core/metric/db/MetricMapper.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DaoUtils.java",
    "refactorings": [],
    "filePath": "sonar-core/src/main/java/org/sonar/core/persistence/DaoUtils.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "QualityGateConditionDao.java",
    "refactorings": [],
    "filePath": "sonar-core/src/main/java/org/sonar/core/qualitygate/db/QualityGateConditionDao.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "MeasuresDao.java",
    "refactorings": [],
    "filePath": "sonar-core/src/main/java/org/sonar/jpa/dao/MeasuresDao.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultMetricFinderTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/metric/DefaultMetricFinderTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "RegisterMetricsTest.java",
    "refactorings": [{
      "rightSideLineNumber": 39,
      "description": "Add Class Annotation @Category(DbTests.class) in class org.sonar.server.startup.RegisterMetricsTest",
      "type": "Add Class Annotation"
    }],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/startup/RegisterMetricsTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "MeasuresDaoTest.java",
    "refactorings": [],
    "filePath": "sonar-core/src/test/java/org/sonar/jpa/dao/MeasuresDaoTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "OAuth2Client.java",
    "refactorings": [],
    "filePath": "src/main/java/com/zegoggles/smssync/auth/OAuth2Client.java",
    "commit": "https://github.com/jberkel/sms-backup-plus/commit/c265bde2ace252bc1e1c65c6af93520e5994edd2",
    "repository": "https://github.com/jberkel/sms-backup-plus.git",
    "fileType": "main"
  },
  {
    "fileName": "OAuth2Token.java",
    "refactorings": [{
      "rightSideLineNumber": 57,
      "description": "Extract Method public getTokenForLogging() : String extracted from public toString() : String in class com.zegoggles.smssync.auth.OAuth2Token",
      "type": "Extract Method"
    }],
    "filePath": "src/main/java/com/zegoggles/smssync/auth/OAuth2Token.java",
    "commit": "https://github.com/jberkel/sms-backup-plus/commit/c265bde2ace252bc1e1c65c6af93520e5994edd2",
    "repository": "https://github.com/jberkel/sms-backup-plus.git",
    "fileType": "main"
  },
  {
    "fileName": "OAuth2TokenTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/zegoggles/smssync/auth/OAuth2TokenTest.java",
    "commit": "https://github.com/jberkel/sms-backup-plus/commit/c265bde2ace252bc1e1c65c6af93520e5994edd2",
    "repository": "https://github.com/jberkel/sms-backup-plus.git",
    "fileType": "test"
  },
  {
    "fileName": "OAuthSignatureCalculator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 171,
        "description": "Extract Method package signatureBaseString(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : StringBuilder extracted from public calculateSignature(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : String in class org.asynchttpclient.oauth.OAuthSignatureCalculator",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 218,
        "description": "Remove Method Modifier synchronized in method protected generateNonce() : String from class org.asynchttpclient.oauth.OAuthSignatureCalculator",
        "type": "Remove Method Modifier"
      }
    ],
    "filePath": "api/src/main/java/org/asynchttpclient/oauth/OAuthSignatureCalculator.java",
    "commit": "https://github.com/AsyncHttpClient/async-http-client/commit/f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
    "repository": "https://github.com/AsyncHttpClient/async-http-client.git",
    "fileType": "main"
  },
  {
    "fileName": "OAuthSignatureCalculatorTest.java",
    "refactorings": [],
    "filePath": "api/src/test/java/org/asynchttpclient/oauth/OAuthSignatureCalculatorTest.java",
    "commit": "https://github.com/AsyncHttpClient/async-http-client/commit/f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
    "repository": "https://github.com/AsyncHttpClient/async-http-client.git",
    "fileType": "test"
  },
  {
    "fileName": "FramedServer.java",
    "refactorings": [],
    "filePath": "mockwebserver/src/main/java/com/squareup/okhttp/internal/framed/FramedServer.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "MockWebServer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 812,
        "description": "Rename Class com.squareup.okhttp.mockwebserver.MockWebServer.SpdySocketHandler renamed to com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 340,
        "description": "Change Variable Type s : Iterator<SpdyConnection> to s : Iterator<FramedConnection> in method protected execute() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.start.execute.new NamedRunnable",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 434,
        "description": "Change Variable Type spdySocketHandler : SpdySocketHandler to framedSocketHandler : FramedSocketHandler in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 439,
        "description": "Change Variable Type spdyConnection : SpdyConnection to framedConnection : FramedConnection in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 434,
        "description": "Rename Variable spdySocketHandler : SpdySocketHandler to framedSocketHandler : FramedSocketHandler in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 439,
        "description": "Rename Variable spdyConnection : SpdyConnection to framedConnection : FramedConnection in method public processConnection() : void from class com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection.execute.new NamedRunnable",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Rename Attribute openSpdyConnections : Set<SpdyConnection> to openFramedConnections : Set<FramedConnection> in class com.squareup.okhttp.mockwebserver.MockWebServer",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Change Attribute Type openSpdyConnections : Set<SpdyConnection> to openFramedConnections : Set<FramedConnection> in class com.squareup.okhttp.mockwebserver.MockWebServer",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 832,
        "description": "Change Parameter Type stream : SpdyStream to stream : FramedStream in method public receive(stream FramedStream) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 840,
        "description": "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private readRequest(stream FramedStream) : RecordedRequest from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 845,
        "description": "Rename Variable spdyHeaders : List<Header> to streamHeaders : List<Header> in method private readRequest(stream FramedStream) : RecordedRequest from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 898,
        "description": "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private writeResponse(stream FramedStream, response MockResponse) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 921,
        "description": "Change Variable Type pushedStream : SpdyStream to pushedStream : FramedStream in method private pushPromises(stream FramedStream, promises List<PushPromise>) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 919,
        "description": "Change Parameter Type stream : SpdyStream to stream : FramedStream in method private pushPromises(stream FramedStream, promises List<PushPromise>) : void from class com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Main.java",
    "refactorings": [],
    "filePath": "okcurl/src/main/java/com/squareup/okhttp/curl/Main.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Connection.java",
    "refactorings": [
      {
        "rightSideLineNumber": 268,
        "description": "Rename Method package isSpdy() : boolean renamed to package isFramed() : boolean in class com.squareup.okhttp.Connection",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Rename Attribute spdyConnection : SpdyConnection to framedConnection : FramedConnection in class com.squareup.okhttp.Connection",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Change Attribute Type spdyConnection : SpdyConnection to framedConnection : FramedConnection in class com.squareup.okhttp.Connection",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/Connection.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectionPool.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "ErrorCode.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/ErrorCode.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "FrameReader.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/FrameReader.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "FrameWriter.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/FrameWriter.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "FramedConnection.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/FramedConnection.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "FramedStream.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/FramedStream.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Header.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Header.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "HeadersMode.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/HeadersMode.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Hpack.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Hpack.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Http2.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Http2.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Huffman.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Huffman.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "IncomingStreamHandler.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/IncomingStreamHandler.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "NameValueBlockReader.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/NameValueBlockReader.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Ping.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Ping.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "PushObserver.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/PushObserver.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Settings.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Settings.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Spdy3.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Spdy3.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "Variant.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/Variant.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "FramedTransport.java",
    "refactorings": [],
    "filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/FramedTransport.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "main"
  },
  {
    "fileName": "HpackDecodeInteropTest.java",
    "refactorings": [{
      "rightSideLineNumber": 26,
      "description": "Move Class com.squareup.okhttp.internal.spdy.HpackDecodeInteropTest moved to com.squareup.okhttp.internal.framed.HpackDecodeInteropTest",
      "type": "Move Class"
    }],
    "filePath": "okhttp-hpacktests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDecodeInteropTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "HpackDecodeTestBase.java",
    "refactorings": [{
      "rightSideLineNumber": 30,
      "description": "Move Class com.squareup.okhttp.internal.spdy.HpackDecodeTestBase moved to com.squareup.okhttp.internal.framed.HpackDecodeTestBase",
      "type": "Move Class"
    }],
    "filePath": "okhttp-hpacktests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDecodeTestBase.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "HpackRoundTripTest.java",
    "refactorings": [{
      "rightSideLineNumber": 27,
      "description": "Move Class com.squareup.okhttp.internal.spdy.HpackRoundTripTest moved to com.squareup.okhttp.internal.framed.HpackRoundTripTest",
      "type": "Move Class"
    }],
    "filePath": "okhttp-hpacktests/src/test/java/com/squareup/okhttp/internal/spdy/HpackRoundTripTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "Case.java",
    "refactorings": [{
      "rightSideLineNumber": 26,
      "description": "Move Class com.squareup.okhttp.internal.spdy.hpackjson.Case moved to com.squareup.okhttp.internal.framed.hpackjson.Case",
      "type": "Move Class"
    }],
    "filePath": "okhttp-hpacktests/src/test/java/com/squareup/okhttp/internal/spdy/hpackjson/Case.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "HpackJsonUtil.java",
    "refactorings": [{
      "rightSideLineNumber": 30,
      "description": "Move Class com.squareup.okhttp.internal.spdy.hpackjson.HpackJsonUtil moved to com.squareup.okhttp.internal.framed.hpackjson.HpackJsonUtil",
      "type": "Move Class"
    }],
    "filePath": "okhttp-hpacktests/src/test/java/com/squareup/okhttp/internal/spdy/hpackjson/HpackJsonUtil.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "Story.java",
    "refactorings": [{
      "rightSideLineNumber": 21,
      "description": "Move Class com.squareup.okhttp.internal.spdy.hpackjson.Story moved to com.squareup.okhttp.internal.framed.hpackjson.Story",
      "type": "Move Class"
    }],
    "filePath": "okhttp-hpacktests/src/test/java/com/squareup/okhttp/internal/spdy/hpackjson/Story.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "TestUtil.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/TestUtil.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseTestHandler.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/BaseTestHandler.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "HpackTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/HpackTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "Http2ConnectionTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Http2ConnectionTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "Http2FrameLoggerTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Http2FrameLoggerTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "Http2Test.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Http2Test.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "HuffmanTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/HuffmanTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "MockSpdyPeer.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/MockSpdyPeer.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "SettingsTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/SettingsTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "Spdy3ConnectionTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Spdy3ConnectionTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "Spdy3Test.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/framed/Spdy3Test.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "HeadersTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "HttpOverSpdyTest.java",
    "refactorings": [],
    "filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java",
    "commit": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "repository": "https://github.com/square/okhttp.git",
    "fileType": "test"
  },
  {
    "fileName": "FileWritingMessageHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 376,
        "description": "Extract Method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File extracted from private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File in class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 379,
        "description": "Remove Parameter Modifier final in parameter sourceFile : File in method private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Remove Parameter Modifier"
      },
      {
        "rightSideLineNumber": 393,
        "description": "Change Variable Type bis : BufferedInputStream to sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 427,
        "description": "Change Variable Type bis : BufferedInputStream to sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 379,
        "description": "Add Parameter Modifier final in parameter sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 447,
        "description": "Rename Parameter sourceFile : File to originalFile : File in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 393,
        "description": "Parameterize Variable bis : BufferedInputStream to sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 427,
        "description": "Parameterize Variable bis : BufferedInputStream to sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 365,
        "description": "Merge Conditional [if(this.deleteSourceFiles), if(FileExistsMode.APPEND.equals(this.fileExistsMode))] to if(!FileExistsMode.APPEND.equals(this.fileExistsMode) && this.deleteSourceFiles) in method private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File from class org.springframework.integration.file.FileWritingMessageHandler",
        "type": "Merge Conditional"
      }
    ],
    "filePath": "spring-integration-file/src/main/java/org/springframework/integration/file/FileWritingMessageHandler.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/247232bdde24b81814a82100743f77d881aaf06b",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "FileWritingMessageHandlerTests.java",
    "refactorings": [],
    "filePath": "spring-integration-file/src/test/java/org/springframework/integration/file/FileWritingMessageHandlerTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/247232bdde24b81814a82100743f77d881aaf06b",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "TestMixinRuntimeSupport.java",
    "refactorings": [],
    "filePath": "grails-plugin-testing/src/main/groovy/grails/test/mixin/support/TestMixinRuntimeSupport.java",
    "commit": "https://github.com/grails/grails-core/commit/480537e0f8aaf50a7648bf445b33230aa32a9b44",
    "repository": "https://github.com/grails/grails-core.git",
    "fileType": "test"
  },
  {
    "fileName": "MockTransformation.java",
    "refactorings": [],
    "filePath": "grails-plugin-testing/src/main/groovy/org/grails/compiler/injection/test/MockTransformation.java",
    "commit": "https://github.com/grails/grails-core/commit/480537e0f8aaf50a7648bf445b33230aa32a9b44",
    "repository": "https://github.com/grails/grails-core.git",
    "fileType": "test"
  },
  {
    "fileName": "TestForTransformation.java",
    "refactorings": [],
    "filePath": "grails-plugin-testing/src/main/groovy/org/grails/compiler/injection/test/TestForTransformation.java",
    "commit": "https://github.com/grails/grails-core/commit/480537e0f8aaf50a7648bf445b33230aa32a9b44",
    "repository": "https://github.com/grails/grails-core.git",
    "fileType": "test"
  },
  {
    "fileName": "TestMixinTransformation.java",
    "refactorings": [
      {
        "rightSideLineNumber": 131,
        "description": "Extract Method public weaveTestMixins(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveTestMixins(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 185,
        "description": "Extract Method public weaveMixinsIntoClass(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveMixinsIntoClass(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 208,
        "description": "Add Parameter applicationClassNode : ClassNode in method protected weaveMixinIntoClass(classNode ClassNode, mixinClassNode ClassNode, junit3MethodHandler Junit3TestFixtureMethodHandler, applicationClassNode ClassNode) : void from class org.grails.compiler.injection.test.TestMixinTransformation",
        "type": "Add Parameter"
      }
    ],
    "filePath": "grails-plugin-testing/src/main/groovy/org/grails/compiler/injection/test/TestMixinTransformation.java",
    "commit": "https://github.com/grails/grails-core/commit/480537e0f8aaf50a7648bf445b33230aa32a9b44",
    "repository": "https://github.com/grails/grails-core.git",
    "fileType": "test"
  },
  {
    "fileName": "CacheImpl.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/cache/impl/CacheImpl.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxCompletionNotificationCommand.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/commands/remote/recovery/TxCompletionNotificationCommand.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionHandlingManagerFactory.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/factories/PartitionHandlingManagerFactory.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxInterceptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 82,
        "description": "Change Attribute Access Modifier protected to private in attribute private rpcManager : RpcManager from class org.infinispan.interceptors.TxInterceptor",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 443,
        "description": "Extract Method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void extracted from private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 476,
        "description": "Extract Method private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 453,
        "description": "Extract Variable globalTransaction : GlobalTransaction in method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void from class org.infinispan.interceptors.TxInterceptor",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 406,
        "description": "Add Variable Modifier final in variable origin : Address in method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void from class org.infinispan.interceptors.TxInterceptor",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.interceptors.TxInterceptor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Remove Parameter txCoordinator : TransactionCoordinator in method public init(txTable TransactionTable, configuration Configuration, txCoordinator TransactionCoordinator, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache) : void from class org.infinispan.interceptors.TxInterceptor",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Rename Attribute txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Change Attribute Type txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Change Attribute Access Modifier protected to private in attribute private partitionHandlingManager : PartitionHandlingManager from class org.infinispan.interceptors.TxInterceptor",
        "type": "Change Attribute Access Modifier"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/interceptors/TxInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseDistributionInterceptor.java",
    "refactorings": [{
      "rightSideLineNumber": 271,
      "description": "Inline Variable recipientGenerator : RecipientGenerator in method protected handleNonTxWriteCommand(ctx InvocationContext, command DataWriteCommand) : Object from class org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
      "type": "Inline Variable"
    }],
    "filePath": "core/src/main/java/org/infinispan/interceptors/distribution/BaseDistributionInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "NonTxDistributionInterceptor.java",
    "refactorings": [{
      "rightSideLineNumber": 208,
      "description": "Parameterize Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.NonTxDistributionInterceptor",
      "type": "Parameterize Variable"
    }],
    "filePath": "core/src/main/java/org/infinispan/interceptors/distribution/NonTxDistributionInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributionInterceptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 193,
        "description": "Inline Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void inlined to public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 339,
        "description": "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private localGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand, isGetCacheEntry boolean) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 383,
        "description": "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private remoteGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand) : InternalCacheEntry in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 192,
        "description": "Extract Method private createCommitRpcOptions() : RpcOptions extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 225,
        "description": "Extract Method private createRollbackRpcOptions() : RpcOptions extracted from public visitRollbackCommand(ctx TxInvocationContext, command RollbackCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Extract Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Inline Variable skrg : SingleKeyRecipientGenerator in method public visitPutKeyValueCommand(ctx InvocationContext, command PutKeyValueCommand) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 211,
        "description": "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 313,
        "description": "Change Parameter Type recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 313,
        "description": "Rename Parameter recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 356,
        "description": "Parameterize Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 239,
        "description": "Add Parameter context : LocalTxInvocationContext in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 239,
        "description": "Add Parameter recipients : Collection<Address> in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void from class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/interceptors/distribution/TxDistributionInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "VersionedDistributionInterceptor.java",
    "refactorings": [{
      "rightSideLineNumber": 32,
      "description": "Remove Parameter ignored : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, ignored boolean) : void from class org.infinispan.interceptors.distribution.VersionedDistributionInterceptor",
      "type": "Remove Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/interceptors/distribution/VersionedDistributionInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractTxLockingInterceptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 45,
        "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService, partitionHandlingManager PartitionHandlingManager, commandsFactory CommandsFactory) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Add Parameter commandsFactory : CommandsFactory in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService, partitionHandlingManager PartitionHandlingManager, commandsFactory CommandsFactory) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Remove Method Annotation @SuppressWarnings(\"unused\") in method public setDependencies(txTable TransactionTable, rpcManager RpcManager, timeService TimeService) : void from class org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
        "type": "Remove Method Annotation"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/interceptors/locking/AbstractTxLockingInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TotalOrderDistributionInterceptor.java",
    "refactorings": [{
      "rightSideLineNumber": 45,
      "description": "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.totalorder.TotalOrderDistributionInterceptor",
      "type": "Remove Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/interceptors/totalorder/TotalOrderDistributionInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TotalOrderVersionedDistributionInterceptor.java",
    "refactorings": [{
      "rightSideLineNumber": 49,
      "description": "Remove Parameter sync : boolean in method protected prepareOnAffectedNodes(ctx TxInvocationContext<?>, command PrepareCommand, recipients Collection<Address>, sync boolean) : void from class org.infinispan.interceptors.totalorder.TotalOrderVersionedDistributionInterceptor",
      "type": "Remove Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/interceptors/totalorder/TotalOrderVersionedDistributionInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AvailablePartitionHandlingManager.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/partitionhandling/impl/AvailablePartitionHandlingManager.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionHandlingInterceptor.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/partitionhandling/impl/PartitionHandlingInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionHandlingManager.java",
    "refactorings": [{
      "rightSideLineNumber": 30,
      "description": "Add Method Annotation @Deprecated in method public getLastStableTopology() : CacheTopology from class org.infinispan.partitionhandling.impl.PartitionHandlingManager",
      "type": "Add Method Annotation"
    }],
    "filePath": "core/src/main/java/org/infinispan/partitionhandling/impl/PartitionHandlingManager.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionHandlingManagerImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 71,
        "description": "Change Method Access Modifier package to public in method public start() : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Add Parameter commandsFactory : CommandsFactory in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Add Parameter configuration : Configuration in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Add Parameter rpcManager : RpcManager in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Add Parameter lockManager : LockManager in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Change Method Access Modifier package to public in method public init(distributionManager DistributionManager, localTopologyManager LocalTopologyManager, stateTransferManager StateTransferManager, cache Cache, notifier CacheNotifier, commandsFactory CommandsFactory, configuration Configuration, rpcManager RpcManager, lockManager LockManager) : void from class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractDelegatingTransport.java",
    "refactorings": [{
      "rightSideLineNumber": 126,
      "description": "Encapsulate Attribute protected actual : Transport from class org.infinispan.remoting.transport.AbstractDelegatingTransport",
      "type": "Encapsulate Attribute"
    }],
    "filePath": "core/src/main/java/org/infinispan/remoting/transport/AbstractDelegatingTransport.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "JGroupsTransport.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StateConsumerImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 979,
        "description": "Extract Variable entry : Map.Entry<Address,List<InboundTransferTask>> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void from class org.infinispan.statetransfer.StateConsumerImpl",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 968,
        "description": "Replace Generic With Diamond HashSet<Address> with HashSet<> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void from class org.infinispan.statetransfer.StateConsumerImpl",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 985,
        "description": "Change Variable Type it : Iterator<Address> to it : Iterator<Map.Entry<Address,List<InboundTransferTask>>> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void from class org.infinispan.statetransfer.StateConsumerImpl",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/statetransfer/StateConsumerImpl.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StateTransferInterceptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 76,
        "description": "Remove Parameter componentRegistry : ComponentRegistry in method public init(stateTransferManager StateTransferManager, transport Transport, componentRegistry ComponentRegistry) : void from class org.infinispan.statetransfer.StateTransferInterceptor",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 363,
        "description": "Remove Parameter ctx : InvocationContext in method private isLocalOnly(ctx InvocationContext, command VisitableCommand) : boolean from class org.infinispan.statetransfer.StateTransferInterceptor",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/statetransfer/StateTransferInterceptor.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StateTransferManager.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/statetransfer/StateTransferManager.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "StateTransferManagerImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 261,
        "description": "Split Conditional int localTopologyId=cacheTopology != null ? cacheTopology.getTopologyId() : -1; to [int localTopologyId=cacheTopology.getTopologyId();, if(cacheTopology == null)] in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
        "type": "Split Conditional"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Extract Variable rpcOptions : RpcOptions in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 261,
        "description": "Add Variable Modifier final in variable cacheTopology : CacheTopology in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 261,
        "description": "Replace Generic With Diamond HashSet<Address> with HashSet<> in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 261,
        "description": "Remove Parameter sync : boolean in method public forwardCommandIfNeeded(command TopologyAffectedCommand, affectedKeys Set<Object>, origin Address, sync boolean) : Map<Address,Response> from class org.infinispan.statetransfer.StateTransferManagerImpl",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/statetransfer/StateTransferManagerImpl.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalTopologyManagerImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 177,
      "description": "Inline Variable availabilityMode : AvailabilityMode in method public handleStatusRequest(viewId int) : ManagerStatusResponse from class org.infinispan.topology.LocalTopologyManagerImpl",
      "type": "Inline Variable"
    }],
    "filePath": "core/src/main/java/org/infinispan/topology/LocalTopologyManagerImpl.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractEnlistmentAdapter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 43,
        "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public AbstractEnlistmentAdapter(cacheTransaction CacheTransaction, commandsFactory CommandsFactory, rpcManager RpcManager, txTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, txCoordinator TransactionCoordinator, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.impl.AbstractEnlistmentAdapter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public AbstractEnlistmentAdapter(commandsFactory CommandsFactory, rpcManager RpcManager, txTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, txCoordinator TransactionCoordinator, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.impl.AbstractEnlistmentAdapter",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/transaction/impl/AbstractEnlistmentAdapter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionTable.java",
    "refactorings": [
      {
        "rightSideLineNumber": 280,
        "description": "Replace Generic With Diamond ArrayList<GlobalTransaction> with ArrayList<> in method public cleanupLeaverTransactions(members List<Address>) : void from class org.infinispan.transaction.impl.TransactionTable",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 315,
        "description": "Replace Generic With Diamond ArrayList<GlobalTransaction> with ArrayList<> in method public cleanupTimedOutTransactions() : void from class org.infinispan.transaction.impl.TransactionTable",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 620,
        "description": "Merge Conditional [return completedTransactionsInfo.isTransactionCompleted(gtx);, if(completedTransactionsInfo == null)] to return completedTransactionsInfo != null && completedTransactionsInfo.isTransactionCompleted(gtx); in method public isTransactionCompleted(gtx GlobalTransaction) : boolean from class org.infinispan.transaction.impl.TransactionTable",
        "type": "Merge Conditional"
      },
      {
        "rightSideLineNumber": 108,
        "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public initialize(rpcManager RpcManager, configuration Configuration, icf InvocationContextFactory, invoker InterceptorChain, notifier CacheNotifier, gtf TransactionFactory, txCoordinator TransactionCoordinator, transactionSynchronizationRegistry TransactionSynchronizationRegistry, commandsFactory CommandsFactory, clusteringDependentLogic ClusteringDependentLogic, cache Cache, timeService TimeService, cacheManagerNotifier CacheManagerNotifier, partitionHandlingManager PartitionHandlingManager) : void from class org.infinispan.transaction.impl.TransactionTable",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/transaction/impl/TransactionTable.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "SynchronizationAdapter.java",
    "refactorings": [{
      "rightSideLineNumber": 33,
      "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public SynchronizationAdapter(localTransaction LocalTransaction, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, transactionTable TransactionTable, clusteringLogic ClusteringDependentLogic, configuration Configuration, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.synchronization.SynchronizationAdapter",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/transaction/synchronization/SynchronizationAdapter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DummyTransaction.java",
    "refactorings": [{
      "rightSideLineNumber": 105,
      "description": "Extract Method public throwRollbackExceptionIfAny() : void extracted from public commit() : void in class org.infinispan.transaction.tm.DummyTransaction",
      "type": "Extract Method"
    }],
    "filePath": "core/src/main/java/org/infinispan/transaction/tm/DummyTransaction.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionXaAdapter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 55,
        "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public TransactionXaAdapter(localTransaction LocalXaTransaction, txTable TransactionTable, rm RecoveryManager, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, clusteringDependentLogic ClusteringDependentLogic, configuration Configuration, cacheName String, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.xa.TransactionXaAdapter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Add Parameter partitionHandlingManager : PartitionHandlingManager in method public TransactionXaAdapter(txTable TransactionTable, rm RecoveryManager, txCoordinator TransactionCoordinator, commandsFactory CommandsFactory, rpcManager RpcManager, clusteringDependentLogic ClusteringDependentLogic, configuration Configuration, cacheName String, partitionHandlingManager PartitionHandlingManager) from class org.infinispan.transaction.xa.TransactionXaAdapter",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/transaction/xa/TransactionXaAdapter.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "XaTransactionTable.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/transaction/xa/XaTransactionTable.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RecoveryAdminOperations.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/transaction/xa/recovery/RecoveryAdminOperations.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RecoveryManager.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/infinispan/transaction/xa/recovery/RecoveryManager.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "RecoveryManagerImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 125,
        "description": "Rename Method public removeRecoveryInformationFromCluster(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/transaction/xa/recovery/RecoveryManagerImpl.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "ForceWriteLockTest.java",
    "refactorings": [{
      "rightSideLineNumber": 25,
      "description": "Change Attribute Type advancedCache : AdvancedCache to advancedCache : AdvancedCache<String,String> in class org.infinispan.api.ForceWriteLockTest",
      "type": "Change Attribute Type"
    }],
    "filePath": "core/src/test/java/org/infinispan/api/ForceWriteLockTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "ExplicitUnlockTest.java",
    "refactorings": [{
      "rightSideLineNumber": 65,
      "description": "Replace Generic With Diamond ArrayList<Future<Boolean>> with ArrayList<> in method private doTestLock(withUnlock boolean, nThreads int, stepDelayMsec long) : void from class org.infinispan.lock.ExplicitUnlockTest",
      "type": "Replace Generic With Diamond"
    }],
    "filePath": "core/src/test/java/org/infinispan/lock/ExplicitUnlockTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OptimisticTxFailureAfterLockingTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/OptimisticTxFailureAfterLockingTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "PessimistTxFailureAfterLockingTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/PessimistTxFailureAfterLockingTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "StaleEagerLocksOnPrepareFailureTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/StaleEagerLocksOnPrepareFailureTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "StaleLocksOnPrepareFailureTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/StaleLocksOnPrepareFailureTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "StaleLocksTransactionTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/StaleLocksTransactionTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractInitiatorCrashTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/singlelock/AbstractInitiatorCrashTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "MainOwnerChangesPessimisticLockTest.java",
    "refactorings": [{
      "rightSideLineNumber": 64,
      "description": "Replace Generic With Diamond HashMap<Object,Transaction> with HashMap<> in method private testLockMigration(nodeThatPuts int, commit boolean) : void from class org.infinispan.lock.singlelock.MainOwnerChangesPessimisticLockTest",
      "type": "Replace Generic With Diamond"
    }],
    "filePath": "core/src/test/java/org/infinispan/lock/singlelock/MainOwnerChangesPessimisticLockTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OriginatorBecomesOwnerLockTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/singlelock/OriginatorBecomesOwnerLockTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "InitiatorCrashPessimisticTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/singlelock/pessimistic/InitiatorCrashPessimisticTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "InitiatorCrashOptimisticReplTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/singlelock/replicated/optimistic/InitiatorCrashOptimisticReplTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "InitiatorCrashPessimisticReplTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/lock/singlelock/replicated/pessimistic/InitiatorCrashPessimisticReplTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseOptimisticTxPartitionAndMergeTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/BaseOptimisticTxPartitionAndMergeTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "BasePartitionHandlingTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 171,
        "description": "Replace Generic With Diamond ArrayList<Address> with ArrayList<> in method private discardOtherMembers() : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 277,
        "description": "Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyAvailableForWrite(k Object, newValue Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 290,
        "description": "Change Variable Type c : Cache to c : Cache<Object,?> in method protected assertKeyNotAvailableForRead(key Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 311,
        "description": "Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyNotAvailableForWrite(key Object) : void from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Replace Generic With Diamond ArrayList<Cache> with ArrayList<> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 305,
        "description": "Change Variable Type caches : List<Cache> to caches : List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 301,
        "description": "Change Variable Type c : Cache to c : Cache<K,V> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Change Return Type List<Cache> to List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> from class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 351,
        "description": "Inline Variable cache : Cache<Object,Object> in method private channel(i int) : Channel from class org.infinispan.partitionhandling.BasePartitionHandlingTest",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 355,
        "description": "Change Parameter Type cache : Cache<Object,Object> to cache : Cache<?,?> in method private channel(cache Cache<?,?>) : Channel from class org.infinispan.partitionhandling.BasePartitionHandlingTest",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/BasePartitionHandlingTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "BasePessimisticTxPartitionAndMergeTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/BasePessimisticTxPartitionAndMergeTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseTxPartitionAndMergeTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/BaseTxPartitionAndMergeTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OptimisticTxPartitionAndMergeDuringCommitTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/OptimisticTxPartitionAndMergeDuringCommitTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OptimisticTxPartitionAndMergeDuringPrepareTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/OptimisticTxPartitionAndMergeDuringPrepareTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "OptimisticTxPartitionAndMergeDuringRollbackTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/OptimisticTxPartitionAndMergeDuringRollbackTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "PessimisticTxPartitionAndMergeDuringPrepareTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/PessimisticTxPartitionAndMergeDuringPrepareTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "PessimisticTxPartitionAndMergeDuringRollbackTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/PessimisticTxPartitionAndMergeDuringRollbackTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "PessimisticTxPartitionAndMergeDuringRuntimeTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/partitionhandling/PessimisticTxPartitionAndMergeDuringRuntimeTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "AsyncReplTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 42,
        "description": "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithNoTx() : void from class org.infinispan.replication.AsyncReplTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Change Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithNoTx() : void from class org.infinispan.replication.AsyncReplTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithTx() : void from class org.infinispan.replication.AsyncReplTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 81,
        "description": "Change Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithTx() : void from class org.infinispan.replication.AsyncReplTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Change Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public simpleTest() : void from class org.infinispan.replication.AsyncReplTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "core/src/test/java/org/infinispan/replication/AsyncReplTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "SyncReplLockingTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/replication/SyncReplLockingTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "StaleLocksWithCommitDuringStateTransferTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/statetransfer/StaleLocksWithCommitDuringStateTransferTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractCacheTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 23,
        "description": "Remove Class Modifier static in class org.infinispan.test.AbstractCacheTest.CleanupPhase",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 77,
        "description": "Rename Method protected assertNotLocked(cache Cache, key Object) : void renamed to protected assertEventuallyNotLocked(cache Cache, key Object) : void in class org.infinispan.test.AbstractCacheTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 101,
        "description": "Inline Variable lockManager : LockManager in method protected checkLocked(cache Cache, key Object) : boolean from class org.infinispan.test.AbstractCacheTest",
        "type": "Inline Variable"
      }
    ],
    "filePath": "core/src/test/java/org/infinispan/test/AbstractCacheTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractInfinispanTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 81,
        "description": "Extract Method protected eventually(message String, ec Condition, timeoutMillis long, loops int) : void extracted from protected eventually(ec Condition, timeoutMillis long, loops int) : void in class org.infinispan.test.AbstractInfinispanTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 101,
        "description": "Extract Method protected eventually(message String, ec Condition, timeout long, pollInterval long, unit TimeUnit) : void extracted from protected eventually(ec Condition, timeout long, pollInterval long, unit TimeUnit) : void in class org.infinispan.test.AbstractInfinispanTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 220,
        "description": "Replace Generic With Diamond ConcurrentCallable<V> with ConcurrentCallable<> in method protected runConcurrentlyWithCompletionService(tasks Callable[]) : CompletionService<V> from class org.infinispan.test.AbstractInfinispanTest",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "core/src/test/java/org/infinispan/test/AbstractInfinispanTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "MultipleCacheManagersTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 557,
        "description": "Extract Method protected assertNoTransactions(cacheName String) : void extracted from protected assertNoTransactions() : void in class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 555,
        "description": "Merge Variable [localTxCount : int, remoteTxCount : int] to transactionTable : TransactionTable in method public isSatisfied() : boolean from class org.infinispan.test.MultipleCacheManagersTest.assertNoTransactions.eventually.new Condition",
        "type": "Merge Variable"
      },
      {
        "rightSideLineNumber": 262,
        "description": "Replace Generic With Diamond ArrayList<Cache<K,V>> with ArrayList<> in method protected createClusteredCaches(numMembersInCluster int, cacheName String, builder ConfigurationBuilder, flags TransportFlags) : List<Cache<K,V>> from class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 275,
        "description": "Replace Generic With Diamond ArrayList<Cache<K,V>> with ArrayList<> in method protected createClusteredCaches(numMembersInCluster int, defaultConfigBuilder ConfigurationBuilder) : List<Cache<K,V>> from class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 288,
        "description": "Replace Generic With Diamond ArrayList<Cache<K,V>> with ArrayList<> in method protected createClusteredCaches(numMembersInCluster int, defaultConfig ConfigurationBuilder, flags TransportFlags) : List<Cache<K,V>> from class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 301,
        "description": "Replace Generic With Diamond ArrayList<List<Cache<K,V>>> with ArrayList<> in method protected createClusteredCaches(numMembersInCluster int, defaultConfigBuilder ConfigurationBuilder, cacheNames String[]) : List<List<Cache<K,V>>> from class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 301,
        "description": "Replace Generic With Diamond ArrayList<Cache<K,V>> with ArrayList<> in method protected createClusteredCaches(numMembersInCluster int, defaultConfigBuilder ConfigurationBuilder, cacheNames String[]) : List<List<Cache<K,V>>> from class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 517,
        "description": "Change Variable Type cache : Cache<?,?> to cache : Cache<K,V> in method protected getLockOwner(key Object, cacheName String) : Cache<K,V> from class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 539,
        "description": "Change Return Type Cache<?,?> to Cache<K,V> in method private getCache(index int, name String) : Cache<K,V> from class org.infinispan.test.MultipleCacheManagersTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/org/infinispan/test/MultipleCacheManagersTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "DatagridManager.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/test/arquillian/DatagridManager.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "StaleLockAfterTxAbortTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/tx/StaleLockAfterTxAbortTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "TransactionXaAdapterTmIntegrationTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/tx/TransactionXaAdapterTmIntegrationTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "PostCommitRecoveryStateTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 91,
        "description": "Rename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 91,
        "description": "Add Parameter fromCluster : boolean in method public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void from class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/test/java/org/infinispan/tx/recovery/PostCommitRecoveryStateTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseTxClusterExtendedStatisticLogicTest.java",
    "refactorings": [{
      "rightSideLineNumber": 77,
      "description": "Replace Generic With Diamond ArrayList<Object> with ArrayList<> in attribute private keys : List<Object> from class org.infinispan.stats.BaseTxClusterExtendedStatisticLogicTest",
      "type": "Replace Generic With Diamond"
    }],
    "filePath": "extended-statistics/src/test/java/org/infinispan/stats/BaseTxClusterExtendedStatisticLogicTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "InternalRubyIssueService.java",
    "refactorings": [
      {
        "rightSideLineNumber": 700,
        "description": "Add Parameter Annotation @Nullable in parameter issue : Issue in method public writeIssueJson(issue Issue) : String from class org.sonar.server.issue.InternalRubyIssueService",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 767,
        "description": "Extract Variable assignee : String in method private getIssueUsersByLogin(issue Issue) : Map<String,User> from class org.sonar.server.issue.InternalRubyIssueService",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 771,
        "description": "Extract Variable reporter : String in method private getIssueUsersByLogin(issue Issue) : Map<String,User> from class org.sonar.server.issue.InternalRubyIssueService",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 118,
        "description": "Add Parameter userWriter : UserJsonWriter in method public InternalRubyIssueService(issueService IssueService, issueQueryService IssueQueryService, commentService IssueCommentService, changelogService IssueChangelogService, actionPlanService ActionPlanService, resourceDao ResourceDao, actionService ActionService, issueFilterService IssueFilterService, issueBulkChangeService IssueBulkChangeService, issueWriter IssueJsonWriter, issueComponentHelper IssueComponentHelper, userIndex UserIndex, dbClient DbClient, userSession UserSession, userWriter UserJsonWriter) from class org.sonar.server.issue.InternalRubyIssueService",
        "type": "Add Parameter"
      }
    ],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/InternalRubyIssueService.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/0eaa5217883cfeca688aad1d462192c194741827",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueJsonWriter.java",
    "refactorings": [{
      "rightSideLineNumber": 61,
      "description": "Remove Parameter userWriter : UserJsonWriter in method public IssueJsonWriter(i18n I18n, durations Durations, userSession UserSession, userWriter UserJsonWriter, actionsWriter IssueActionsWriter) from class org.sonar.server.issue.ws.IssueJsonWriter",
      "type": "Remove Parameter"
    }],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/ws/IssueJsonWriter.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/0eaa5217883cfeca688aad1d462192c194741827",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalRubyIssueServiceTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/issue/InternalRubyIssueServiceTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/0eaa5217883cfeca688aad1d462192c194741827",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "DeferredConstraintVerificationUniqueLuceneIndexPopulator.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/DeferredConstraintVerificationUniqueLuceneIndexPopulator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneDocumentStructure.java",
    "refactorings": [
      {
        "rightSideLineNumber": 222,
        "description": "Rename Method public newMatchAllQuery() : Query renamed to public newAllQuery() : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 227,
        "description": "Rename Method public newQuery(value Object) : Query renamed to public newValueQuery(value Object) : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 244,
        "description": "Rename Method public newQueryForChangeOrRemove(nodeId long) : Term renamed to public newTermForChangeOrRemove(nodeId long) : Term in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
        "type": "Rename Method"
      }
    ],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/LuceneDocumentStructure.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneIndexAccessor.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/LuceneIndexAccessor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LuceneIndexAccessorReader.java",
    "refactorings": [
      {
        "rightSideLineNumber": 93,
        "description": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public lookup(value Object) : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 105,
        "description": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public scan() : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader",
        "type": "Extract Method"
      }
    ],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/LuceneIndexAccessorReader.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NonUniqueLuceneIndexPopulator.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/NonUniqueLuceneIndexPopulator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "UniqueLuceneIndexAccessor.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/UniqueLuceneIndexAccessor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "UniqueLuceneIndexPopulator.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/UniqueLuceneIndexPopulator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexingAcceptanceTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/graphdb/IndexingAcceptanceTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "IndexAccessorCompatibility.java",
    "refactorings": [
      {
        "rightSideLineNumber": 41,
        "description": "Add Class Modifier abstract in class org.neo4j.kernel.api.index.IndexAccessorCompatibility",
        "type": "Add Class Modifier"
      },
      {
        "rightSideLineNumber": 97,
        "description": "Rename Method protected getAllNodes(propertyValue String) : List<Long> renamed to protected getAllNodesWithProperty(propertyValue String) : List<Long> in class org.neo4j.kernel.api.index.IndexAccessorCompatibility",
        "type": "Rename Method"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/api/index/IndexAccessorCompatibility.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NonUniqueIndexAccessorCompatibility.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/api/index/NonUniqueIndexAccessorCompatibility.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "UniqueIndexAccessorCompatibility.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/api/index/UniqueIndexAccessorCompatibility.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "HashBasedIndex.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/inmemory/HashBasedIndex.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractLuceneIndexAccessorReaderTest.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/AbstractLuceneIndexAccessorReaderTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "AllNodesCollector.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/AllNodesCollector.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneDocumentStructureTest.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/LuceneDocumentStructureTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneIndexAccessorReaderTest.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/LuceneIndexAccessorReaderTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneSchemaIndexPopulatorTest.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/LuceneSchemaIndexPopulatorTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneUniqueIndexAccessorReaderTest.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/LuceneUniqueIndexAccessorReaderTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Trees.java",
    "refactorings": [{
      "rightSideLineNumber": 262,
      "description": "Extract Method public getDescendants(t ParseTree) : List<ParseTree> extracted from public descendants(t ParseTree) : List<ParseTree> in class org.antlr.v4.runtime.tree.Trees",
      "type": "Extract Method"
    }],
    "filePath": "runtime/Java/src/org/antlr/v4/runtime/tree/Trees.java",
    "commit": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "XPathWildcardAnywhereElement.java",
    "refactorings": [],
    "filePath": "runtime/Java/src/org/antlr/v4/runtime/tree/xpath/XPathWildcardAnywhereElement.java",
    "commit": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "GrammarParserInterpreter.java",
    "refactorings": [{
      "rightSideLineNumber": 382,
      "description": "Extract Method public getAmbuityParserInterpreter(g Grammar, originalParser Parser, tokens TokenStream) : ParserInterpreter extracted from public getAllPossibleParseTrees(g Grammar, originalParser Parser, tokens TokenStream, decision int, alts BitSet, startIndex int, stopIndex int, startRuleIndex int) : List<ParserRuleContext> in class org.antlr.v4.tool.GrammarParserInterpreter",
      "type": "Extract Method"
    }],
    "filePath": "tool/src/org/antlr/v4/tool/GrammarParserInterpreter.java",
    "commit": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "main"
  },
  {
    "fileName": "InterpreterTreeTextProvider.java",
    "refactorings": [],
    "filePath": "tool/test/org/antlr/v4/test/tool/InterpreterTreeTextProvider.java",
    "commit": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "TestAmbigParseTrees.java",
    "refactorings": [{
      "rightSideLineNumber": 212,
      "description": "Rename Method public testInterp(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void renamed to public testAmbiguousTrees(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void in class org.antlr.v4.test.tool.TestAmbigParseTrees",
      "type": "Rename Method"
    }],
    "filePath": "tool/test/org/antlr/v4/test/tool/TestAmbigParseTrees.java",
    "commit": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGrammarParserInterpreter.java",
    "refactorings": [],
    "filePath": "tool/test/org/antlr/v4/test/tool/TestGrammarParserInterpreter.java",
    "commit": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "TestLookaheadTrees.java",
    "refactorings": [],
    "filePath": "tool/test/org/antlr/v4/test/tool/TestLookaheadTrees.java",
    "commit": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "repository": "https://github.com/antlr/antlr4.git",
    "fileType": "test"
  },
  {
    "fileName": "Push.java",
    "refactorings": [],
    "filePath": "app/com/baasbox/configuration/Push.java",
    "commit": "https://github.com/baasbox/baasbox/commit/d949fe9079a82ee31aa91244aa67baaf56b7e28f",
    "repository": "https://github.com/baasbox/baasbox.git",
    "fileType": "main"
  },
  {
    "fileName": "DbHelper.java",
    "refactorings": [{
      "rightSideLineNumber": 701,
      "description": "Extract Method public execMultiLineCommands(db ODatabaseRecordTx, log boolean, stopOnException boolean, commands String...) : void extracted from public execMultiLineCommands(db ODatabaseRecordTx, log boolean, commands String...) : void in class com.baasbox.db.DbHelper",
      "type": "Extract Method"
    }],
    "filePath": "app/com/baasbox/db/DbHelper.java",
    "commit": "https://github.com/baasbox/baasbox/commit/d949fe9079a82ee31aa91244aa67baaf56b7e28f",
    "repository": "https://github.com/baasbox/baasbox.git",
    "fileType": "main"
  },
  {
    "fileName": "Evolution_0_8_3.java",
    "refactorings": [],
    "filePath": "app/com/baasbox/db/Evolution_0_8_3.java",
    "commit": "https://github.com/baasbox/baasbox/commit/d949fe9079a82ee31aa91244aa67baaf56b7e28f",
    "repository": "https://github.com/baasbox/baasbox.git",
    "fileType": "main"
  },
  {
    "fileName": "AdminImportTest_issue_726.java",
    "refactorings": [],
    "filePath": "test/AdminImportTest_issue_726.java",
    "commit": "https://github.com/baasbox/baasbox/commit/d949fe9079a82ee31aa91244aa67baaf56b7e28f",
    "repository": "https://github.com/baasbox/baasbox.git",
    "fileType": "test"
  },
  {
    "fileName": "EurekaDeploymentClients.java",
    "refactorings": [{
      "rightSideLineNumber": 73,
      "description": "Extract Method public fillUpRegistryOfServer(serverIdx int, count int, instanceTemplate InstanceInfo) : void extracted from public fillUpRegistry(count int, instanceTemplate InstanceInfo) : void in class com.netflix.eureka2.integration.EurekaDeploymentClients",
      "type": "Extract Method"
    }],
    "filePath": "eureka2-integration/src/main/java/com/netflix/eureka2/integration/EurekaDeploymentClients.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "main"
  },
  {
    "fileName": "EurekaClientFailoverTest.java",
    "refactorings": [],
    "filePath": "eureka2-integration/src/test/java/com/netflix/eureka2/integration/client/EurekaClientFailoverTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "ReadServerNotificationBatchingTest.java",
    "refactorings": [{
      "rightSideLineNumber": 28,
      "description": "Modify Class Annotation @Category(IntegrationTest.class) to @Category({IntegrationTest.class,ExperimentalTest.class}) in class com.netflix.eureka2.integration.server.batching.ReadServerNotificationBatchingTest",
      "type": "Modify Class Annotation"
    }],
    "filePath": "eureka2-integration/src/test/java/com/netflix/eureka2/integration/server/batching/ReadServerNotificationBatchingTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "WriteServerNotificationBatchingTest.java",
    "refactorings": [{
      "rightSideLineNumber": 26,
      "description": "Modify Class Annotation @Category(IntegrationTest.class) to @Category({IntegrationTest.class,ExperimentalTest.class}) in class com.netflix.eureka2.integration.server.batching.WriteServerNotificationBatchingTest",
      "type": "Modify Class Annotation"
    }],
    "filePath": "eureka2-integration/src/test/java/com/netflix/eureka2/integration/server/batching/WriteServerNotificationBatchingTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "ReadWriteClusterIntegrationTest.java",
    "refactorings": [],
    "filePath": "eureka2-integration/src/test/java/com/netflix/eureka2/integration/server/interest/ReadWriteClusterIntegrationTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EvictionInReplicationChannelTest.java",
    "refactorings": [],
    "filePath": "eureka2-integration/src/test/java/com/netflix/eureka2/integration/server/replication/EvictionInReplicationChannelTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "ExperimentalTest.java",
    "refactorings": [],
    "filePath": "eureka2-test-utils/src/main/java/com/netflix/eureka2/junit/categories/ExperimentalTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EurekaDeployment.java",
    "refactorings": [{
      "rightSideLineNumber": 43,
      "description": "Add Parameter networkRouter : NetworkRouter in method protected EurekaDeployment(transportConfig EurekaTransportConfig, writeCluster EmbeddedWriteCluster, readCluster EmbeddedReadCluster, bridgeServer EmbeddedBridgeServer, dashboardServer EmbeddedDashboardServer, networkRouter NetworkRouter, viewEnabled boolean) from class com.netflix.eureka2.testkit.embedded.EurekaDeployment",
      "type": "Add Parameter"
    }],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/EurekaDeployment.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedReadCluster.java",
    "refactorings": [
      {
        "rightSideLineNumber": 35,
        "description": "Add Parameter networkRouter : NetworkRouter in method public EmbeddedReadCluster(registrationResolver ServerResolver, discoveryResolver ServerResolver, withExt boolean, withAdminUI boolean, ephemeralPorts boolean, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedReadCluster",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Add Parameter networkRouter : NetworkRouter in method public EmbeddedReadCluster(registrationResolver ServerResolver, discoveryResolver ServerResolver, withExt boolean, withAdminUI boolean, ephemeralPorts boolean, codec CodecType, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedReadCluster",
        "type": "Add Parameter"
      }
    ],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/cluster/EmbeddedReadCluster.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedWriteCluster.java",
    "refactorings": [
      {
        "rightSideLineNumber": 40,
        "description": "Add Parameter networkRouter : NetworkRouter in method public EmbeddedWriteCluster(withExt boolean, withAdminUI boolean, ephemeralPorts boolean, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedWriteCluster",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Add Parameter networkRouter : NetworkRouter in method public EmbeddedWriteCluster(withExt boolean, withAdminUI boolean, ephemeralPorts boolean, codec CodecType, networkRouter NetworkRouter) from class com.netflix.eureka2.testkit.embedded.cluster.EmbeddedWriteCluster",
        "type": "Add Parameter"
      }
    ],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/cluster/EmbeddedWriteCluster.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedReadServer.java",
    "refactorings": [{
      "rightSideLineNumber": 47,
      "description": "Add Parameter networkRouter : NetworkRouter in method public EmbeddedReadServer(serverId String, config EurekaServerConfig, registrationResolver ServerResolver, discoveryResolver ServerResolver, networkRouter NetworkRouter, withExt boolean, withDashboard boolean) from class com.netflix.eureka2.testkit.embedded.server.EmbeddedReadServer",
      "type": "Add Parameter"
    }],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/server/EmbeddedReadServer.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedTcpDiscoveryServer.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/server/EmbeddedTcpDiscoveryServer.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedTcpRegistrationServer.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/server/EmbeddedTcpRegistrationServer.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedTcpReplicationServer.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/server/EmbeddedTcpReplicationServer.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedWriteServer.java",
    "refactorings": [{
      "rightSideLineNumber": 34,
      "description": "Add Parameter networkRouter : NetworkRouter in method public EmbeddedWriteServer(config WriteServerConfig, interestPeers Observable<ChangeNotification<Server>>, replicationPeers Observable<ChangeNotification<Server>>, networkRouter NetworkRouter, withExt boolean, withDashboards boolean) from class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServer",
      "type": "Add Parameter"
    }],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/server/EmbeddedWriteServer.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EurekaDeploymentResource.java",
    "refactorings": [
      {
        "rightSideLineNumber": 23,
        "description": "Add Method Annotation @Deprecated in method public EurekaDeploymentResource(writeClusterSize int, readClusterSize int) from class com.netflix.eureka2.testkit.junit.resources.EurekaDeploymentResource",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Add Method Annotation @Deprecated in method public EurekaDeploymentResource(writeClusterSize int, readClusterSize int, transportConfig EurekaTransportConfig) from class com.netflix.eureka2.testkit.junit.resources.EurekaDeploymentResource",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/junit/resources/EurekaDeploymentResource.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "ReadServerResource.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/junit/resources/ReadServerResource.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "WriteServerResource.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/junit/resources/WriteServerResource.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "NetworkLink.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/NetworkLink.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "NetworkRouter.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/NetworkRouter.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "NetworkRouters.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/NetworkRouters.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "LinkEvent.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/internal/LinkEvent.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "NetworkEvent.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/internal/NetworkEvent.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "NetworkLinkImpl.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/internal/NetworkLinkImpl.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "NetworkRouterImpl.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/internal/NetworkRouterImpl.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "RouterPort.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/main/java/com/netflix/eureka2/testkit/netrouter/internal/RouterPort.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedReadClusterTest.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/test/java/com/netflix/eureka2/testkit/embedded/cluster/EmbeddedReadClusterTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedWriteClusterTest.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/test/java/com/netflix/eureka2/testkit/embedded/cluster/EmbeddedWriteClusterTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EmbeddedWriteServerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 34,
        "description": "Rename Method public testRegistrationAndDiscoveryServices() : void renamed to public testRegistrationAndInterestServices() : void in class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServerTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 41,
        "description": "Replace Attribute With Variable writeServerResource : WriteServerResource to writeServer : EmbeddedWriteServer in method public testRegistrationAndInterestServices() : void from class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServerTest",
        "type": "Replace Attribute With Variable"
      }
    ],
    "filePath": "eureka2-testkit/src/test/java/com/netflix/eureka2/testkit/embedded/server/EmbeddedWriteServerTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "RouterPortTest.java",
    "refactorings": [],
    "filePath": "eureka2-testkit/src/test/java/com/netflix/eureka2/testkit/netrouter/internal/RouterPortTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "JsdocToEs6TypedConverter.java",
    "refactorings": [{
      "rightSideLineNumber": 139,
      "description": "Extract And Move Method public convert(typeExpr JSTypeExpression) : TypeDeclarationNode extracted from private setTypeExpression(n Node, type JSTypeExpression) : void in class com.google.javascript.jscomp.JsdocToEs6TypedConverter & moved to class com.google.javascript.jscomp.JsdocToEs6TypedConverter.TypeDeclarationsIRFactory",
      "type": "Extract And Move Method"
    }],
    "filePath": "src/com/google/javascript/jscomp/JsdocToEs6TypedConverter.java",
    "commit": "https://github.com/google/closure-compiler/commit/5a853a60f93e09c446d458673bc7a2f6bb26742c",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "TypeDeclarationsIRFactory.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/jscomp/parsing/TypeDeclarationsIRFactory.java",
    "commit": "https://github.com/google/closure-compiler/commit/5a853a60f93e09c446d458673bc7a2f6bb26742c",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "JsdocToEs6TypedConverterTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/JsdocToEs6TypedConverterTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/5a853a60f93e09c446d458673bc7a2f6bb26742c",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeDeclarationsIRFactoryTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/parsing/TypeDeclarationsIRFactoryTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/5a853a60f93e09c446d458673bc7a2f6bb26742c",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "AnnotationUtils.java",
    "refactorings": [],
    "filePath": "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/ece12f9d370108549fffac105e4bcb7faeaaf124",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "MapAnnotationAttributeExtractor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 73,
        "description": "Rename Method private validateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : void renamed to private enrichAndValidateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : Map<String,Object> in class org.springframework.core.annotation.MapAnnotationAttributeExtractor",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 73,
        "description": "Change Return Type void to Map<String,Object> in method private enrichAndValidateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : Map<String,Object> from class org.springframework.core.annotation.MapAnnotationAttributeExtractor",
        "type": "Change Return Type"
      }
    ],
    "filePath": "spring-core/src/main/java/org/springframework/core/annotation/MapAnnotationAttributeExtractor.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/ece12f9d370108549fffac105e4bcb7faeaaf124",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "AnnotationUtilsTests.java",
    "refactorings": [
      {
        "rightSideLineNumber": 978,
        "description": "Modify Class Annotation @Component(value = \"meta1\") to @Component(\"meta1\") in class org.springframework.core.annotation.AnnotationUtilsTests.Meta1",
        "type": "Modify Class Annotation"
      },
      {
        "rightSideLineNumber": 985,
        "description": "Modify Class Annotation @Component(value = \"meta2\") to @Component(\"meta2\") in class org.springframework.core.annotation.AnnotationUtilsTests.Meta2",
        "type": "Modify Class Annotation"
      },
      {
        "rightSideLineNumber": 723,
        "description": "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithMissingAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 731,
        "description": "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithNullAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 739,
        "description": "Parameterize Variable map : Map<String,Object> to attributes : Map<String,Object> in method private assertMissingTextAttribute(attributes Map<String,Object>) : void from class org.springframework.core.annotation.AnnotationUtilsTests",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "spring-core/src/test/java/org/springframework/core/annotation/AnnotationUtilsTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/ece12f9d370108549fffac105e4bcb7faeaaf124",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "TransactionalTestExecutionListener.java",
    "refactorings": [
      {
        "rightSideLineNumber": 511,
        "description": "Inline Variable transactionManagerName : String in method package retrieveConfigurationAttributes(testContext TestContext) : TransactionConfigurationAttributes from class org.springframework.test.context.transaction.TransactionalTestExecutionListener",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 511,
        "description": "Inline Variable defaultRollback : boolean in method package retrieveConfigurationAttributes(testContext TestContext) : TransactionConfigurationAttributes from class org.springframework.test.context.transaction.TransactionalTestExecutionListener",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 484,
        "description": "Invert Condition if(txConfig != null) to if(txConfig == null) in method package retrieveConfigurationAttributes(testContext TestContext) : TransactionConfigurationAttributes from class org.springframework.test.context.transaction.TransactionalTestExecutionListener",
        "type": "Invert Condition"
      }
    ],
    "filePath": "spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/ece12f9d370108549fffac105e4bcb7faeaaf124",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "CloudWatchBackendService.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/backend/CloudWatchBackendService.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "DBCleanupService.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/DBCleanupService.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "AlarmEntity.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/alarms/AlarmEntity.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "AlarmManager.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/alarms/AlarmManager.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "GetMetricStatisticsAggregationKey.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/metricdata/GetMetricStatisticsAggregationKey.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricDataQueue.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/metricdata/MetricDataQueue.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricEntity.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/metricdata/MetricEntity.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricManager.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/metricdata/MetricManager.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "MetricStatistics.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/metricdata/MetricStatistics.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "PutMetricDataAggregationKey.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/metricdata/PutMetricDataAggregationKey.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleMetricEntity.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/main/java/com/eucalyptus/cloudwatch/domain/metricdata/SimpleMetricEntity.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "Units.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-common/src/main/java/com/eucalyptus/cloudwatch/common/internal/metricdata/Units.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "DescribeSensorCallback.java",
    "refactorings": [
      {
        "rightSideLineNumber": 180,
        "description": "Change Class Access Modifier package to public in class com.eucalyptus.cluster.callback.DescribeSensorCallback.GetTimestamp",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 114,
        "description": "Change Variable Type putMetricDataList : List<PutMetricDataType> to queueItems : List<AbsoluteMetricQueueItem> in method private processCloudWatchStats(msg DescribeSensorsResponse) : void from class com.eucalyptus.cluster.callback.DescribeSensorCallback",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 114,
        "description": "Rename Variable putMetricDataList : List<PutMetricDataType> to queueItems : List<AbsoluteMetricQueueItem> in method private processCloudWatchStats(msg DescribeSensorsResponse) : void from class com.eucalyptus.cluster.callback.DescribeSensorCallback",
        "type": "Rename Variable"
      }
    ],
    "filePath": "clc/modules/cluster-manager/src/main/java/com/eucalyptus/cluster/callback/DescribeSensorCallback.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "AbsoluteMetricHelper.java",
    "refactorings": [],
    "filePath": "clc/modules/cluster-manager/src/main/java/com/eucalyptus/cluster/callback/cloudwatch/AbsoluteMetricHelper.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "AbsoluteMetricHistory.java",
    "refactorings": [],
    "filePath": "clc/modules/cluster-manager/src/main/java/com/eucalyptus/cluster/callback/cloudwatch/AbsoluteMetricHistory.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "AbsoluteMetricQueue.java",
    "refactorings": [],
    "filePath": "clc/modules/cluster-manager/src/main/java/com/eucalyptus/cluster/callback/cloudwatch/AbsoluteMetricQueue.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "AbsoluteMetricQueueItem.java",
    "refactorings": [],
    "filePath": "clc/modules/cluster-manager/src/main/java/com/eucalyptus/cluster/callback/cloudwatch/AbsoluteMetricQueueItem.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "CloudWatchHelper.java",
    "refactorings": [],
    "filePath": "clc/modules/cluster-manager/src/main/java/com/eucalyptus/cluster/callback/cloudwatch/CloudWatchHelper.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "main"
  },
  {
    "fileName": "TestAggregationQueue.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/test/java/com/eucalyptus/cloudwatch/TestAggregationQueue.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "test"
  },
  {
    "fileName": "MetricTest.java",
    "refactorings": [],
    "filePath": "clc/modules/cloudwatch-backend/src/test/java/com/eucalyptus/cloudwatch/domain/metricdata/MetricTest.java",
    "commit": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "fileType": "test"
  },
  {
    "fileName": "Props.java",
    "refactorings": [{
      "rightSideLineNumber": 206,
      "description": "Replace Variable With Attribute pat : Pattern to __propertyPattern : Pattern in method public expand(str String, seenStack Stack<String>) : String from class org.eclipse.jetty.start.Props",
      "type": "Replace Variable With Attribute"
    }],
    "filePath": "jetty-start/src/main/java/org/eclipse/jetty/start/Props.java",
    "commit": "https://github.com/eclipse/jetty.project/commit/13b63c194b010201c439932ece2f1bc628ebf287",
    "repository": "https://github.com/eclipse/jetty.project.git",
    "fileType": "main"
  },
  {
    "fileName": "XmlConfiguration.java",
    "refactorings": [],
    "filePath": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java",
    "commit": "https://github.com/eclipse/jetty.project/commit/13b63c194b010201c439932ece2f1bc628ebf287",
    "repository": "https://github.com/eclipse/jetty.project.git",
    "fileType": "main"
  },
  {
    "fileName": "PropsTest.java",
    "refactorings": [],
    "filePath": "jetty-start/src/test/java/org/eclipse/jetty/start/PropsTest.java",
    "commit": "https://github.com/eclipse/jetty.project/commit/13b63c194b010201c439932ece2f1bc628ebf287",
    "repository": "https://github.com/eclipse/jetty.project.git",
    "fileType": "test"
  },
  {
    "fileName": "CacheNotifierImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1223,
        "description": "Extract Method protected shouldInvoke(event Event<K,V>) : boolean extracted from protected shouldInvoke(event CacheEntryEvent<K,V>, isLocalNodePrimaryOwner boolean) : CacheEntryEvent<K,V> in class org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 1215,
        "description": "Invert Condition if(!observation.shouldInvoke(isPre)) to return observation.shouldInvoke(event.isPre()); in method protected shouldInvoke(event Event<K,V>) : boolean from class org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation",
        "type": "Invert Condition"
      },
      {
        "rightSideLineNumber": 1216,
        "description": "Inline Variable isPre : boolean in method protected shouldInvoke(event CacheEntryEvent<K,V>, isLocalNodePrimaryOwner boolean) : CacheEntryEvent<K,V> from class org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation",
        "type": "Inline Variable"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/notifications/cachelistener/CacheNotifierImpl.java",
    "commit": "https://github.com/infinispan/infinispan/commit/03573a655bcbb77f7a76d8e22d851cc22796b4f8",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DataRehashedEventTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/statetransfer/DataRehashedEventTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/03573a655bcbb77f7a76d8e22d851cc22796b4f8",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "KafkaStreamImporter.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importclient/KafkaStreamImporter.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "Log4jSocketHandlerImporter.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importclient/Log4jSocketHandlerImporter.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "SocketStreamImporter.java",
    "refactorings": [],
    "filePath": "src/frontend/org/voltdb/importclient/SocketStreamImporter.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportProcessor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 69,
        "description": "Remove Parameter framework : Framework in method public BundleWrapper(bundle Bundle, framework Framework, handler ImportHandlerProxy, properties Properties) from class org.voltdb.importer.ImportProcessor.BundleWrapper",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 69,
        "description": "Reorder Parameter [bundle : Bundle, framework : Framework, handler : ImportHandlerProxy, properties : Properties] to [handler : ImportHandlerProxy, properties : Properties, bundle : Bundle] in method public BundleWrapper(handler ImportHandlerProxy, properties Properties, bundle Bundle) from class org.voltdb.importer.ImportProcessor.BundleWrapper",
        "type": "Reorder Parameter"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Add Thrown Exception Type BundleException in method public ImportProcessor() from class org.voltdb.importer.ImportProcessor",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Inline Variable o : Object in method public addProcessorConfig(properties Properties) : void from class org.voltdb.importer.ImportProcessor",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 147,
        "description": "Add Method Modifier synchronized in method public readyForData(catContext CatalogContext, messenger HostMessenger) : void from class org.voltdb.importer.ImportProcessor",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 165,
        "description": "Add Method Modifier synchronized in method public shutdown() : void from class org.voltdb.importer.ImportProcessor",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Change Attribute Access Modifier public to private in attribute private m_framework : Framework from class org.voltdb.importer.ImportProcessor",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 47,
        "description": "Move Attribute public m_framework : Framework from class org.voltdb.importer.ImportProcessor.BundleWrapper to private m_framework : Framework from class org.voltdb.importer.ImportProcessor",
        "type": "Move Attribute"
      }
    ],
    "filePath": "src/frontend/org/voltdb/importer/ImportProcessor.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "TestImportSuite.java",
    "refactorings": [],
    "filePath": "tests/frontend/org/voltdb/TestImportSuite.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310InstantType.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/main/java/com/querydsl/sql/types/JSR310InstantType.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "JSR310LocalDateTimeType.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/main/java/com/querydsl/sql/types/JSR310LocalDateTimeType.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "JSR310LocalTimeType.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/main/java/com/querydsl/sql/types/JSR310LocalTimeType.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "JSR310OffsetDateTimeType.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/main/java/com/querydsl/sql/types/JSR310OffsetDateTimeType.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "JSR310OffsetTimeType.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/main/java/com/querydsl/sql/types/JSR310OffsetTimeType.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "JSR310ZonedDateTimeType.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/main/java/com/querydsl/sql/types/JSR310ZonedDateTimeType.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractJSR310DateTimeTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/AbstractJSR310DateTimeTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310InstantTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/JSR310InstantTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310LocalDateTimeTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/JSR310LocalDateTimeTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310LocalDateTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/JSR310LocalDateTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310LocalTimeTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/JSR310LocalTimeTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310OffsetDateTimeTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/JSR310OffsetDateTimeTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310OffsetTimeTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/JSR310OffsetTimeTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "JSR310ZonedDateTimeTypeTest.java",
    "refactorings": [],
    "filePath": "querydsl-sql/src/test/java/com/querydsl/sql/types/JSR310ZonedDateTimeTypeTest.java",
    "commit": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "repository": "https://github.com/querydsl/querydsl.git",
    "fileType": "test"
  },
  {
    "fileName": "Resolver.java",
    "refactorings": [
      {
        "rightSideLineNumber": 193,
        "description": "Extract Method private resolveLib(artifact Artifact, repoSys RepositorySystem, session RepositorySystemSession, project Path) : Prebuilt extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 235,
        "description": "Extract Method private getProjectName(artifact Artifact) : String extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 235,
        "description": "Extract Method private getProjectName(artifact Artifact) : String extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 235,
        "description": "Extract Method private getProjectName(artifact Artifact) : String extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 188,
        "description": "Extract Method private resolveArtifact(artifact Artifact, repoSys RepositorySystem, session RepositorySystemSession, project Path) : Path extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 219,
        "description": "Extract Method private resolveArtifact(artifact Artifact, repoSys RepositorySystem, session RepositorySystemSession, project Path) : Path extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 219,
        "description": "Extract Method private downloadSources(artifact Artifact, repoSys RepositorySystem, session RepositorySystemSession, project Path, library Prebuilt) : void extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Extract Method private downloadArtifact(artifactToDownload Artifact, repoSys RepositorySystem, session RepositorySystemSession, buckFiles Map<Path,SortedSet<Prebuilt>>, graph MutableDirectedGraph<Artifact>) : void extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 133,
        "description": "Extract Method private createBuckFiles(buckFilesData Map<Path,SortedSet<Prebuilt>>) : void extracted from public resolve(mavenCoords String...) : void in class com.facebook.buck.maven.Resolver",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Add Parameter Modifier final in parameter artifactToDownload : Artifact in method private downloadArtifact(artifactToDownload Artifact, repoSys RepositorySystem, session RepositorySystemSession, buckFiles Map<Path,SortedSet<Prebuilt>>, graph MutableDirectedGraph<Artifact>) : void from class com.facebook.buck.maven.Resolver",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 231,
        "description": "Parameterize Variable root : Artifact to artifactToDownload : Artifact in method private downloadArtifact(artifactToDownload Artifact, repoSys RepositorySystem, session RepositorySystemSession, buckFiles Map<Path,SortedSet<Prebuilt>>, graph MutableDirectedGraph<Artifact>) : void from class com.facebook.buck.maven.Resolver",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 233,
        "description": "Rename Variable groupName : String to projectName : String in method private getProjectName(artifact Artifact) : String from class com.facebook.buck.maven.Resolver",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 233,
        "description": "Rename Variable groupName : String to projectName : String in method private getProjectName(artifact Artifact) : String from class com.facebook.buck.maven.Resolver",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 243,
        "description": "Parameterize Variable buckFiles : Map<Path,SortedSet<Prebuilt>> to buckFilesData : Map<Path,SortedSet<Prebuilt>> in method private createBuckFiles(buckFilesData Map<Path,SortedSet<Prebuilt>>) : void from class com.facebook.buck.maven.Resolver",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "src/com/facebook/buck/maven/Resolver.java",
    "commit": "https://github.com/facebook/buck/commit/7e104c3ed4b80ec8e9b72356396f879d1067cc40",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "ResolverIntegrationTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 143,
        "description": "Move Code from public shouldSetUpAPrivateLibraryIfGivenAMavenCoordWithoutDeps() : void to public setUpRepos() : void in class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Move Code"
      },
      {
        "rightSideLineNumber": 143,
        "description": "Move Code from public shouldIncludeSourceJarIfOneIsPresent() : void to public setUpRepos() : void in class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Move Code"
      },
      {
        "rightSideLineNumber": 143,
        "description": "Move Code from public shouldSetVisibilityOfTargetToGiveDependenciesAccess() : void to public setUpRepos() : void in class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Move Code"
      },
      {
        "rightSideLineNumber": 143,
        "description": "Move Code from public shouldOmitTargetsInTheSameBuildFileInVisibilityArguments() : void to public setUpRepos() : void in class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Move Code"
      },
      {
        "rightSideLineNumber": 137,
        "description": "Change Thrown Exception Type IOException to Exception in method public setUpRepos() : void from class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Change Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 152,
        "description": "Replace Variable With Attribute resolver : Resolver to resolver : Resolver in method public shouldSetUpAPrivateLibraryIfGivenAMavenCoordWithoutDeps() : void from class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 186,
        "description": "Replace Variable With Attribute resolver : Resolver to resolver : Resolver in method public shouldIncludeSourceJarIfOneIsPresent() : void from class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 197,
        "description": "Replace Variable With Attribute resolver : Resolver to resolver : Resolver in method public shouldSetVisibilityOfTargetToGiveDependenciesAccess() : void from class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Replace Variable With Attribute"
      },
      {
        "rightSideLineNumber": 221,
        "description": "Replace Variable With Attribute resolver : Resolver to resolver : Resolver in method public shouldOmitTargetsInTheSameBuildFileInVisibilityArguments() : void from class com.facebook.buck.maven.ResolverIntegrationTest",
        "type": "Replace Variable With Attribute"
      }
    ],
    "filePath": "test/com/facebook/buck/maven/ResolverIntegrationTest.java",
    "commit": "https://github.com/facebook/buck/commit/7e104c3ed4b80ec8e9b72356396f879d1067cc40",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "HikariPool.java",
    "refactorings": [],
    "filePath": "src/main/java/com/zaxxer/hikari/pool/HikariPool.java",
    "commit": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "fileType": "main"
  },
  {
    "fileName": "PoolBagEntry.java",
    "refactorings": [],
    "filePath": "src/main/java/com/zaxxer/hikari/pool/PoolBagEntry.java",
    "commit": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentBag.java",
    "refactorings": [],
    "filePath": "src/main/java/com/zaxxer/hikari/util/ConcurrentBag.java",
    "commit": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "fileType": "main"
  },
  {
    "fileName": "IBagStateListener.java",
    "refactorings": [],
    "filePath": "src/main/java/com/zaxxer/hikari/util/IBagStateListener.java",
    "commit": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "fileType": "main"
  },
  {
    "fileName": "IConcurrentBagEntry.java",
    "refactorings": [],
    "filePath": "src/main/java/com/zaxxer/hikari/util/IConcurrentBagEntry.java",
    "commit": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "fileType": "main"
  },
  {
    "fileName": "TestConcurrentBag.java",
    "refactorings": [],
    "filePath": "src/test/java/com/zaxxer/hikari/TestConcurrentBag.java",
    "commit": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "fileType": "test"
  },
  {
    "fileName": "ClasspathKieProject.java",
    "refactorings": [],
    "filePath": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/ClasspathKieProject.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassFieldAccessorCache.java",
    "refactorings": [{
      "rightSideLineNumber": 231,
      "description": "Rename Class org.drools.core.base.ClassFieldAccessorCache.ByteArrayClassLoader renamed to org.drools.core.base.ClassFieldAccessorCache.DefaultByteArrayClassLoader",
      "type": "Rename Class"
    }],
    "filePath": "drools-core/src/main/java/org/drools/core/base/ClassFieldAccessorCache.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassFieldAccessorFactory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/base/ClassFieldAccessorFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ProjectClassLoader.java",
    "refactorings": [
      {
        "rightSideLineNumber": 336,
        "description": "Change Class Access Modifier private to package in class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 336,
        "description": "Remove Class Modifier static in class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 336,
        "description": "Change Type Declaration Kind class to interface in type org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
        "type": "Change Type Declaration Kind"
      },
      {
        "rightSideLineNumber": 338,
        "description": "Change Method Access Modifier private to public in method public loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 186,
        "description": "Extract Method private makeClassLoader() : InternalTypesClassLoader extracted from private defineType(name String, bytecode byte[]) : Class<?> in class org.drools.core.common.ProjectClassLoader",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 135,
        "description": "Change Method Access Modifier private to package in method package internalLoadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 164,
        "description": "Change Method Access Modifier private to package in method package tryDefineType(name String, cnfe ClassNotFoundException) : Class<?> from class org.drools.core.common.ProjectClassLoader",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 350,
        "description": "Push Down Method public defineClass(name String, bytecode byte[]) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public defineClass(name String, bytecode byte[]) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "type": "Push Down Method"
      },
      {
        "rightSideLineNumber": 361,
        "description": "Push Down Method protected loadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to protected loadClass(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "type": "Push Down Method"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Push Down Method private loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "type": "Push Down Method"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Change Method Access Modifier private to public in method public loadType(name String, resolve boolean) : Class<?> from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 343,
        "description": "Push Down Attribute private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "type": "Push Down Attribute"
      },
      {
        "rightSideLineNumber": 343,
        "description": "Extract Subclass org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader",
        "type": "Extract Subclass"
      },
      {
        "rightSideLineNumber": 345,
        "description": "Move And Rename Method private InternalTypesClassLoader(projectClassLoader ProjectClassLoader) from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to private DefaultInternalTypesClassLoader(projectClassLoader ProjectClassLoader) from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "type": "Move And Rename Method"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/common/ProjectClassLoader.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaDialectRuntimeData.java",
    "refactorings": [
      {
        "rightSideLineNumber": 290,
        "description": "Change Attribute Type classLoader : PackageClassLoader to classLoader : ClassLoader in class org.drools.core.rule.JavaDialectRuntimeData.WiringExecutor",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 295,
        "description": "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private WiringExecutor(classLoader ClassLoader, invokerLookups Map<String,Object>, wireList List<String>) from class org.drools.core.rule.JavaDialectRuntimeData.WiringExecutor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 78,
        "description": "Change Attribute Type classLoader : PackageClassLoader to classLoader : ClassLoader in class org.drools.core.rule.JavaDialectRuntimeData",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 242,
        "description": "Extract Method private makeClassLoader() : ClassLoader extracted from public onAdd(registry DialectRuntimeRegistry, rootClassLoader ClassLoader) : void in class org.drools.core.rule.JavaDialectRuntimeData",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 526,
        "description": "Extract Method private makeClassLoader() : ClassLoader extracted from public reload() : void in class org.drools.core.rule.JavaDialectRuntimeData",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 285,
        "description": "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private wireAll(classLoader ClassLoader, invokerLookups Map<String,Object>, wireList List<String>) : void from class org.drools.core.rule.JavaDialectRuntimeData",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 480,
        "description": "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private wire(classLoader ClassLoader, invokerLookups Map<String,Object>, className String) : void from class org.drools.core.rule.JavaDialectRuntimeData",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 488,
        "description": "Change Parameter Type classLoader : PackageClassLoader to classLoader : ClassLoader in method private wire(classLoader ClassLoader, className String, invoker Object) : void from class org.drools.core.rule.JavaDialectRuntimeData",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/rule/JavaDialectRuntimeData.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassGenerator.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/rule/builder/dialect/asm/ClassGenerator.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ByteArrayClassLoader.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/util/ByteArrayClassLoader.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassUtils.java",
    "refactorings": [{
      "rightSideLineNumber": 211,
      "description": "Extract Method public loadClass(className String, classLoader ClassLoader) : Class<?> extracted from public instantiateObject(className String, classLoader ClassLoader) : Object in class org.drools.core.util.ClassUtils",
      "type": "Extract Method"
    }],
    "filePath": "drools-core/src/main/java/org/drools/core/util/ClassUtils.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "Drools.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/util/Drools.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "IoUtils.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/util/IoUtils.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "MemoryUtil.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/util/MemoryUtil.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "IncludeProjectDependenciesComponentConfigurator.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/main/java/org/kie/maven/plugin/IncludeProjectDependenciesComponentConfigurator.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "SerializeMojo.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/main/java/org/kie/maven/plugin/SerializeMojo.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "TouchResourcesMojo.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/main/java/org/kie/maven/plugin/TouchResourcesMojo.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "BuildMojoIntegrationTest.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/test/java/org/kie/maven/plugin/BuildMojoIntegrationTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "Fire.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/test/projects/kjar-1/src/main/java/org/kie/sample/model/Fire.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "Room.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/test/projects/kjar-1/src/main/java/org/kie/sample/model/Room.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "Sprinkler.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/test/projects/kjar-1/src/main/java/org/kie/sample/model/Sprinkler.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "KProjectTest.java",
    "refactorings": [],
    "filePath": "kie-maven-plugin/src/test/projects/kjar-1/src/test/java/org/kie/kproject/KProjectTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "MixedAlphabetsRule.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/rules/uk/MixedAlphabetsRule.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "MorfologikUkrainianSpellerRule.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/rules/uk/MorfologikUkrainianSpellerRule.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenAgreementRule.java",
    "refactorings": [{
      "rightSideLineNumber": 385,
      "description": "Rename Method private hasRequiredPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean renamed to private getReadingWithVidmPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean in class org.languagetool.rules.uk.TokenAgreementRule",
      "type": "Rename Method"
    }],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/rules/uk/TokenAgreementRule.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "UkrainianWordRepeatRule.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/rules/uk/UkrainianWordRepeatRule.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "CompoundTagger.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/tagging/uk/CompoundTagger.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "PosTagHelper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 52,
        "description": "Extract Attribute private NUM_REGEX : Pattern in class org.languagetool.tagging.uk.PosTagHelper",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Extract Attribute private CONJ_REGEX : Pattern in class org.languagetool.tagging.uk.PosTagHelper",
        "type": "Extract Attribute"
      }
    ],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/tagging/uk/PosTagHelper.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "UkrainianTagger.java",
    "refactorings": [{
      "rightSideLineNumber": 40,
      "description": "Change Attribute Access Modifier private to package in attribute package NUMBER : Pattern from class org.languagetool.tagging.uk.UkrainianTagger",
      "type": "Change Attribute Access Modifier"
    }],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/tagging/uk/UkrainianTagger.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "UkrainianWordTokenizer.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/main/java/org/languagetool/tokenizers/uk/UkrainianWordTokenizer.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "main"
  },
  {
    "fileName": "MixedAlphabetsRuleTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/rules/uk/MixedAlphabetsRuleTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "MorfologikUkrainianSpellerRuleTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/rules/uk/MorfologikUkrainianSpellerRuleTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "SimpleReplaceRuleTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/rules/uk/SimpleReplaceRuleTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "TokenAgreementRuleTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/rules/uk/TokenAgreementRuleTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "UkrainianWordRepeatRuleTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/rules/uk/UkrainianWordRepeatRuleTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "UkrainianTaggerTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/tagging/uk/UkrainianTaggerTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "UkrainianSRXSentenceTokenizerTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/tokenizers/uk/UkrainianSRXSentenceTokenizerTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "UkrainianWordTokenizerTest.java",
    "refactorings": [],
    "filePath": "languagetool-language-modules/uk/src/test/java/org/languagetool/tokenizers/uk/UkrainianWordTokenizerTest.java",
    "commit": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "fileType": "test"
  },
  {
    "fileName": "TabPage.java",
    "refactorings": [],
    "filePath": "jdk-1.7-parent/wicket-foundation/wicket-foundation-samples/src/main/java/org/wicketstuff/foundation/TabPage.java",
    "commit": "https://github.com/wicketstuff/core/commit/8ea46f48063c38473c12ca7c114106ca910b6e74",
    "repository": "https://github.com/wicketstuff/core.git",
    "fileType": "main"
  },
  {
    "fileName": "FoundationTabTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 95,
        "description": "Extract Method private testRenderedTab() : void extracted from public renderSimpleTab() : void in class org.wicketstuff.foundation.tab.FoundationTabTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 35,
        "description": "Extract Attribute public FIRST_TAB_TEXT : String in class org.wicketstuff.foundation.tab.FoundationTabTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Extract Attribute public SECOND_TAB_TEXT : String in class org.wicketstuff.foundation.tab.FoundationTabTest",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 51,
        "description": "Extract Attribute public THIRD_TAB_TEXT : String in class org.wicketstuff.foundation.tab.FoundationTabTest",
        "type": "Extract Attribute"
      }
    ],
    "filePath": "jdk-1.7-parent/wicket-foundation/wicket-foundation-core/src/test/java/org/wicketstuff/foundation/tab/FoundationTabTest.java",
    "commit": "https://github.com/wicketstuff/core/commit/8ea46f48063c38473c12ca7c114106ca910b6e74",
    "repository": "https://github.com/wicketstuff/core.git",
    "fileType": "test"
  },
  {
    "fileName": "EmailNotificationService.java",
    "refactorings": [],
    "filePath": "seyren-core/src/main/java/com/seyren/core/service/notification/EmailNotificationService.java",
    "commit": "https://github.com/scobal/seyren/commit/5fb36a321af7df470d4c845cb18da8f85be31c38",
    "repository": "https://github.com/scobal/seyren.git",
    "fileType": "main"
  },
  {
    "fileName": "SeyrenConfig.java",
    "refactorings": [],
    "filePath": "seyren-core/src/main/java/com/seyren/core/util/config/SeyrenConfig.java",
    "commit": "https://github.com/scobal/seyren/commit/5fb36a321af7df470d4c845cb18da8f85be31c38",
    "repository": "https://github.com/scobal/seyren.git",
    "fileType": "main"
  },
  {
    "fileName": "EmailHelper.java",
    "refactorings": [],
    "filePath": "seyren-core/src/main/java/com/seyren/core/util/email/EmailHelper.java",
    "commit": "https://github.com/scobal/seyren/commit/5fb36a321af7df470d4c845cb18da8f85be31c38",
    "repository": "https://github.com/scobal/seyren.git",
    "fileType": "main"
  },
  {
    "fileName": "VelocityEmailHelper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 69,
        "description": "Extract Method private evaluateTemplate(check Check, subscription Subscription, alerts List<Alert>, templateContent String) : String extracted from public createBody(check Check, subscription Subscription, alerts List<Alert>) : String in class com.seyren.core.util.velocity.VelocityEmailHelper",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Add Parameter templateFileName : String in method private getTemplateAsString(templateFileName String) : String from class com.seyren.core.util.velocity.VelocityEmailHelper",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Parameterize Attribute TEMPLATE_CONTENT : String to templateContent : String in method private evaluateTemplate(check Check, subscription Subscription, alerts List<Alert>, templateContent String) : String from class com.seyren.core.util.velocity.VelocityEmailHelper",
        "type": "Parameterize Attribute"
      },
      {
        "rightSideLineNumber": 96,
        "description": "Parameterize Attribute TEMPLATE_FILE_NAME : String to templateFileName : String in method private getTemplateAsString(templateFileName String) : String from class com.seyren.core.util.velocity.VelocityEmailHelper",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "seyren-core/src/main/java/com/seyren/core/util/velocity/VelocityEmailHelper.java",
    "commit": "https://github.com/scobal/seyren/commit/5fb36a321af7df470d4c845cb18da8f85be31c38",
    "repository": "https://github.com/scobal/seyren.git",
    "fileType": "main"
  },
  {
    "fileName": "SeyrenConfigTest.java",
    "refactorings": [],
    "filePath": "seyren-core/src/test/java/com/seyren/core/util/config/SeyrenConfigTest.java",
    "commit": "https://github.com/scobal/seyren/commit/5fb36a321af7df470d4c845cb18da8f85be31c38",
    "repository": "https://github.com/scobal/seyren.git",
    "fileType": "test"
  },
  {
    "fileName": "VelocityEmailHelperTest.java",
    "refactorings": [],
    "filePath": "seyren-core/src/test/java/com/seyren/core/util/velocity/VelocityEmailHelperTest.java",
    "commit": "https://github.com/scobal/seyren/commit/5fb36a321af7df470d4c845cb18da8f85be31c38",
    "repository": "https://github.com/scobal/seyren.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractGenericHttpMessageConverter.java",
    "refactorings": [],
    "filePath": "spring-web/src/main/java/org/springframework/http/converter/AbstractGenericHttpMessageConverter.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractHttpMessageConverter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 171,
        "description": "Extract Method protected addDefaultHeaders(headers HttpHeaders, t T, contentType MediaType) : void extracted from public write(t T, contentType MediaType, outputMessage HttpOutputMessage) : void in class org.springframework.http.converter.AbstractHttpMessageConverter",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Rename Variable type : MediaType to mediaType : MediaType in method protected addDefaultHeaders(headers HttpHeaders, t T, contentType MediaType) : void from class org.springframework.http.converter.AbstractHttpMessageConverter",
        "type": "Rename Variable"
      }
    ],
    "filePath": "spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "GenericHttpMessageConverter.java",
    "refactorings": [],
    "filePath": "spring-web/src/main/java/org/springframework/http/converter/GenericHttpMessageConverter.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractJackson2HttpMessageConverter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 162,
        "description": "Add Parameter type : Type in method public canWrite(type Type, clazz Class<?>, mediaType MediaType) : boolean from class org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 258,
        "description": "Extract Variable objectWriter : ObjectWriter in method protected writeInternal(object Object, type Type, outputMessage HttpOutputMessage) : void from class org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 222,
        "description": "Add Parameter type : Type in method protected writeInternal(object Object, type Type, outputMessage HttpOutputMessage) : void from class org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 222,
        "description": "Add Method Annotation @SuppressWarnings(\"deprecation\") in method protected writeInternal(object Object, type Type, outputMessage HttpOutputMessage) : void from class org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "GsonHttpMessageConverter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 127,
        "description": "Add Parameter type : Type in method public canWrite(type Type, clazz Class<?>, mediaType MediaType) : boolean from class org.springframework.http.converter.json.GsonHttpMessageConverter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 193,
        "description": "Add Parameter type : Type in method protected writeInternal(o Object, type Type, outputMessage HttpOutputMessage) : void from class org.springframework.http.converter.json.GsonHttpMessageConverter",
        "type": "Add Parameter"
      }
    ],
    "filePath": "spring-web/src/main/java/org/springframework/http/converter/json/GsonHttpMessageConverter.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "Jaxb2CollectionHttpMessageConverter.java",
    "refactorings": [],
    "filePath": "spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractMessageConverterMethodProcessor.java",
    "refactorings": [],
    "filePath": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "GsonHttpMessageConverterTests.java",
    "refactorings": [],
    "filePath": "spring-web/src/test/java/org/springframework/http/converter/json/GsonHttpMessageConverterTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "MappingJackson2HttpMessageConverterTests.java",
    "refactorings": [],
    "filePath": "spring-web/src/test/java/org/springframework/http/converter/json/MappingJackson2HttpMessageConverterTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "MappingJackson2XmlHttpMessageConverterTests.java",
    "refactorings": [],
    "filePath": "spring-web/src/test/java/org/springframework/http/converter/xml/MappingJackson2XmlHttpMessageConverterTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "HttpEntityMethodProcessorTests.java",
    "refactorings": [{
      "rightSideLineNumber": 84,
      "description": "Extract Attribute private servletResponse : MockHttpServletResponse in class org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessorTests",
      "type": "Extract Attribute"
    }],
    "filePath": "spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "RequestResponseBodyMethodProcessorTests.java",
    "refactorings": [{
      "rightSideLineNumber": 736,
      "description": "Rename Class org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorTests.JacksonViewController renamed to org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorTests.JacksonController",
      "type": "Rename Class"
    }],
    "filePath": "spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultCreator.java",
    "refactorings": [],
    "filePath": "morphia/src/main/java/org/mongodb/morphia/mapping/DefaultCreator.java",
    "commit": "https://github.com/mongodb/morphia/commit/70a25d4afdc435e9cad4460b2a20b7aabdd21e35",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "main"
  },
  {
    "fileName": "MapperOptions.java",
    "refactorings": [],
    "filePath": "morphia/src/main/java/org/mongodb/morphia/mapping/MapperOptions.java",
    "commit": "https://github.com/mongodb/morphia/commit/70a25d4afdc435e9cad4460b2a20b7aabdd21e35",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "main"
  },
  {
    "fileName": "TestMapping.java",
    "refactorings": [{
      "rightSideLineNumber": 798,
      "description": "Extract Method private performBasicMappingTest() : void extracted from public testBasicMapping() : void in class org.mongodb.morphia.TestMapping",
      "type": "Extract Method"
    }],
    "filePath": "morphia/src/test/java/org/mongodb/morphia/TestMapping.java",
    "commit": "https://github.com/mongodb/morphia/commit/70a25d4afdc435e9cad4460b2a20b7aabdd21e35",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "test"
  },
  {
    "fileName": "ApplicationPidFileWriter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 142,
        "description": "Extract Variable message : String in method public onApplicationEvent(event SpringApplicationEvent) : void from class org.springframework.boot.actuate.system.ApplicationPidFileWriter",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 222,
        "description": "Move Method private getEnvironment(event SpringApplicationEvent) : Environment from class org.springframework.boot.actuate.system.ApplicationPidFileWriter to private getEnvironment(event SpringApplicationEvent) : Environment from class org.springframework.boot.actuate.system.ApplicationPidFileWriter.SpringProperty",
        "type": "Move Method"
      },
      {
        "rightSideLineNumber": 222,
        "description": "Extract Class org.springframework.boot.actuate.system.ApplicationPidFileWriter.SpringProperty from class org.springframework.boot.actuate.system.ApplicationPidFileWriter",
        "type": "Extract Class"
      }
    ],
    "filePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/system/ApplicationPidFileWriter.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/becced5f0b7bac8200df7a5706b568687b517b90",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "SystemProperties.java",
    "refactorings": [],
    "filePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/system/SystemProperties.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/becced5f0b7bac8200df7a5706b568687b517b90",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "ApplicationPidFileWriterTests.java",
    "refactorings": [
      {
        "rightSideLineNumber": 173,
        "description": "Extract Method private createEnvironment(propName String, propValue String) : ConfigurableEnvironment extracted from public overridePidFileWithSpring() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 182,
        "description": "Extract Method private mockPropertySource(name String, value String) : MockPropertySource extracted from public overridePidFileWithSpring() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 165,
        "description": "Extract Method private createPreparedEvent(propName String, propValue String) : SpringApplicationEvent extracted from public overridePidFileWithSpring() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 173,
        "description": "Extract Method private createEnvironment(propName String, propValue String) : ConfigurableEnvironment extracted from public differentEventTypes() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 182,
        "description": "Extract Method private mockPropertySource(name String, value String) : MockPropertySource extracted from public differentEventTypes() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 159,
        "description": "Extract Method private createEnvironmentPreparedEvent(propName String, propValue String) : SpringApplicationEvent extracted from public differentEventTypes() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Change Variable Type event : ApplicationPreparedEvent to event : SpringApplicationEvent in method public overridePidFileWithSpring() : void from class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 111,
        "description": "Change Variable Type event : ApplicationEnvironmentPreparedEvent to event : SpringApplicationEvent in method public differentEventTypes() : void from class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "spring-boot-actuator/src/test/java/org/springframework/boot/actuate/system/ApplicationPidFileWriterTests.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/becced5f0b7bac8200df7a5706b568687b517b90",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "test"
  },
  {
    "fileName": "ArrayUtil.java",
    "refactorings": [],
    "filePath": "platform/util/src/com/intellij/util/ArrayUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6540dde58190f642e59ca10516f84eb85f855373",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "HighlightStressTest.java",
    "refactorings": [],
    "filePath": "java/java-tests/testSrc/com/intellij/codeInsight/daemon/HighlightStressTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6540dde58190f642e59ca10516f84eb85f855373",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "ProgressIndicatorTest.java",
    "refactorings": [],
    "filePath": "platform/platform-tests/testSrc/com/intellij/openapi/progress/impl/ProgressIndicatorTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6540dde58190f642e59ca10516f84eb85f855373",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "PlatformTestUtil.java",
    "refactorings": [],
    "filePath": "platform/testFramework/src/com/intellij/testFramework/PlatformTestUtil.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6540dde58190f642e59ca10516f84eb85f855373",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "Timings.java",
    "refactorings": [],
    "filePath": "platform/testFramework/src/com/intellij/testFramework/Timings.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/6540dde58190f642e59ca10516f84eb85f855373",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "InMemoryJoinHash.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/InMemoryJoinHash.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "LookupJoinOperator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 299,
        "description": "Extract Method private tryGetLookupSource() : void extracted from public needsInput() : boolean in class com.facebook.presto.operator.LookupJoinOperator",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 299,
        "description": "Extract Method private tryGetLookupSource() : void extracted from public getOutput() : Page in class com.facebook.presto.operator.LookupJoinOperator",
        "type": "Extract Method"
      }
    ],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/LookupJoinOperator.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "LookupSource.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/LookupSource.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionedLookupSource.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/PartitionedLookupSource.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "SharedLookupSource.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/SharedLookupSource.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexLoader.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexLookupSource.java",
    "refactorings": [],
    "filePath": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractTestQueries.java",
    "refactorings": [],
    "filePath": "presto-tests/src/main/java/com/facebook/presto/tests/AbstractTestQueries.java",
    "commit": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "repository": "https://github.com/facebook/presto.git",
    "fileType": "test"
  },
  {
    "fileName": "Locking.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/Locking.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockingStatementOperations.java",
    "refactorings": [
      {
        "rightSideLineNumber": 375,
        "description": "Change Parameter Type resourceId : long[] to resourceId : long in method public acquireExclusive(state KernelStatement, resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 381,
        "description": "Change Parameter Type resourceId : long[] to resourceId : long in method public acquireShared(state KernelStatement, resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 387,
        "description": "Change Parameter Type resourceId : long[] to resourceId : long in method public releaseExclusive(state KernelStatement, type Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 393,
        "description": "Change Parameter Type resourceId : long[] to resourceId : long in method public releaseShared(state KernelStatement, type Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/LockingStatementOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "OperationsFacade.java",
    "refactorings": [
      {
        "rightSideLineNumber": 793,
        "description": "Change Parameter Type id : long... to id : long in method public acquireExclusive(type Locks.ResourceType, id long) : void from class org.neo4j.kernel.impl.api.OperationsFacade",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 800,
        "description": "Change Parameter Type id : long... to id : long in method public acquireShared(type Locks.ResourceType, id long) : void from class org.neo4j.kernel.impl.api.OperationsFacade",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 807,
        "description": "Change Parameter Type id : long... to id : long in method public releaseExclusive(type Locks.ResourceType, id long) : void from class org.neo4j.kernel.impl.api.OperationsFacade",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 814,
        "description": "Change Parameter Type id : long... to id : long in method public releaseShared(type Locks.ResourceType, id long) : void from class org.neo4j.kernel.impl.api.OperationsFacade",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/OperationsFacade.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LockOperations.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/LockOperations.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Locks.java",
    "refactorings": [
      {
        "rightSideLineNumber": 47,
        "description": "Change Class Access Modifier public to package in class org.neo4j.kernel.impl.locking.Locks.Factory",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Change Class Access Modifier public to package in class org.neo4j.kernel.impl.locking.Locks.Visitor",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 64,
        "description": "Change Class Access Modifier public to package in class org.neo4j.kernel.impl.locking.Locks.ResourceType",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 74,
        "description": "Change Class Access Modifier public to package in class org.neo4j.kernel.impl.locking.Locks.Client",
        "type": "Change Class Access Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/locking/Locks.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NoOpClient.java",
    "refactorings": [
      {
        "rightSideLineNumber": 25,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public acquireShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 25,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public acquireShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public acquireExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 31,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public acquireExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public trySharedLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 43,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public trySharedLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public releaseShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public releaseShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public releaseExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 55,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public releaseExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.NoOpClient",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/locking/NoOpClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CommunityLockClient.java",
    "refactorings": [
      {
        "rightSideLineNumber": 163,
        "description": "Inline Method public releaseAllShared() : void inlined to public releaseAll() : void in class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 162,
        "description": "Inline Method public releaseAllExclusive() : void inlined to public releaseAll() : void in class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public acquireShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Remove Parameter resourceIds : long... in method public acquireShared(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 74,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public acquireExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 61,
        "description": "Remove Parameter resourceIds : long... in method public acquireExclusive(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 93,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 78,
        "description": "Remove Parameter resourceIds : long... in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceIds long...) : boolean from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 118,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public trySharedLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Remove Parameter resourceIds : long... in method public trySharedLock(resourceType Locks.ResourceType, resourceIds long...) : boolean from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 140,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public releaseShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 128,
        "description": "Remove Parameter resourceIds : long... in method public releaseShared(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 154,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public releaseExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 143,
        "description": "Remove Parameter resourceIds : long... in method public releaseExclusive(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/locking/community/CommunityLockClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MasterImpl.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/com/master/MasterImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalDeadlockDetectedException.java",
    "refactorings": [
      {
        "rightSideLineNumber": 49,
        "description": "Change Parameter Type resourceIds : long[] to resourceId : long in method public LocalDeadlockDetectedException(lockClient Locks.Client, lockManager Locks, resourceType Locks.ResourceType, resourceId long, type LockType) from class org.neo4j.kernel.ha.lock.LocalDeadlockDetectedException",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Rename Parameter resourceIds : long[] to resourceId : long in method public LocalDeadlockDetectedException(lockClient Locks.Client, lockManager Locks, resourceType Locks.ResourceType, resourceId long, type LockType) from class org.neo4j.kernel.ha.lock.LocalDeadlockDetectedException",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Rename Parameter resourceIds : long[] to resourceId : long in method private constructHelpfulDiagnosticsMessage(client Locks.Client, lockManager Locks, resourceType Locks.ResourceType, resourceId long, type LockType) : String from class org.neo4j.kernel.ha.lock.LocalDeadlockDetectedException",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Change Parameter Type resourceIds : long[] to resourceId : long in method private constructHelpfulDiagnosticsMessage(client Locks.Client, lockManager Locks, resourceType Locks.ResourceType, resourceId long, type LockType) : String from class org.neo4j.kernel.ha.lock.LocalDeadlockDetectedException",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/LocalDeadlockDetectedException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SlaveLocksClient.java",
    "refactorings": [
      {
        "rightSideLineNumber": 112,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public acquireShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public acquireShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public acquireExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public acquireExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 150,
        "description": "Rename Parameter resourceIds : long... to resourceId : long in method public trySharedLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 150,
        "description": "Change Parameter Type resourceIds : long... to resourceId : long in method public trySharedLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 168,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public releaseShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Remove Parameter resourceIds : long... in method public releaseShared(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 185,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public releaseExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 172,
        "description": "Remove Parameter resourceIds : long... in method public releaseExclusive(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 236,
        "description": "Change Parameter Type resourceId : long... to resourceId : long in method private getReadLockOnMaster(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Change Parameter Type resourceId : long... to resourceId : long in method private acquireExclusiveOnMaster(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/SlaveLocksClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ForsetiClient.java",
    "refactorings": [
      {
        "rightSideLineNumber": 604,
        "description": "Extract Variable message : String in method private markAsWaitingFor(lock ForsetiLockManager.Lock, type Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 620,
        "description": "Extract Variable next : int in method public describeWaitList() : String from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 145,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public acquireShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Remove Parameter resourceIds : long... in method public acquireShared(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 209,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public acquireExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 190,
        "description": "Remove Parameter resourceIds : long... in method public acquireExclusive(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 248,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 232,
        "description": "Remove Parameter resourceIds : long... in method public tryExclusiveLock(resourceType Locks.ResourceType, resourceIds long...) : boolean from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 303,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public trySharedLock(resourceType Locks.ResourceType, resourceId long) : boolean from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 274,
        "description": "Remove Parameter resourceIds : long... in method public trySharedLock(resourceType Locks.ResourceType, resourceIds long...) : boolean from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 346,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public releaseShared(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 337,
        "description": "Remove Parameter resourceIds : long... in method public releaseShared(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 360,
        "description": "Parameterize Variable resourceId : long to resourceId : long in method public releaseExclusive(resourceType Locks.ResourceType, resourceId long) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 352,
        "description": "Remove Parameter resourceIds : long... in method public releaseExclusive(resourceType Locks.ResourceType, resourceIds long...) : void from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 552,
        "description": "Remove Parameter lockMap : ConcurrentMap<Long,ForsetiLockManager.Lock> in method private tryUpgradeToExclusiveWithShareLockHeld(resourceType Locks.ResourceType, lockMap ConcurrentMap<Long,ForsetiLockManager.Lock>, resourceId long, sharedLock SharedLock, tries int) : boolean from class org.neo4j.kernel.ha.lock.forseti.ForsetiClient",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/forseti/ForsetiClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ForsetiLockManager.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/forseti/ForsetiLockManager.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AcquireAndReleaseLocksCompatibility.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/locking/AcquireAndReleaseLocksCompatibility.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LockReentrancyCompatibility.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/locking/LockReentrancyCompatibility.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "MasterImplTest.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/test/java/org/neo4j/kernel/ha/com/master/MasterImplTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SlaveLocksClientTest.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/test/java/org/neo4j/kernel/ha/lock/SlaveLocksClientTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Consumers.java",
    "refactorings": [],
    "filePath": "community/function/src/main/java/org/neo4j/function/Consumers.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LongConsumer.java",
    "refactorings": [],
    "filePath": "community/function/src/main/java/org/neo4j/function/LongConsumer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ThrowingLongConsumer.java",
    "refactorings": [],
    "filePath": "community/function/src/main/java/org/neo4j/function/ThrowingLongConsumer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphDatabaseSettings.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/graphdb/factory/GraphDatabaseSettings.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NeoStoreDataSource.java",
    "refactorings": [
      {
        "rightSideLineNumber": 787,
        "description": "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule from class org.neo4j.kernel.NeoStoreDataSource",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 787,
        "description": "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule from class org.neo4j.kernel.NeoStoreDataSource",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 1062,
        "description": "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public stop() : void from class org.neo4j.kernel.NeoStoreDataSource",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1062,
        "description": "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public stop() : void from class org.neo4j.kernel.NeoStoreDataSource",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 877,
        "description": "Add Parameter storeFlusher : StoreFlusher in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, storeFlusher StoreFlusher, startupStatistics StartupStatisticsProvider) : void from class org.neo4j.kernel.NeoStoreDataSource",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 877,
        "description": "Remove Parameter logRotationControl : LogRotationControl in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, logRotationControl LogRotationControl, startupStatistics StartupStatisticsProvider) : void from class org.neo4j.kernel.NeoStoreDataSource",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 211,
        "description": "Rename Method public logRotationControl() : LogRotationControl renamed to public storeFlusher() : StoreFlusher in class org.neo4j.kernel.NeoStoreDataSource.TransactionLogModule",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 211,
        "description": "Change Return Type LogRotationControl to StoreFlusher in method public storeFlusher() : StoreFlusher from class org.neo4j.kernel.NeoStoreDataSource.TransactionLogModule",
        "type": "Change Return Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/NeoStoreDataSource.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RecoveryLabelScanWriterProvider.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Change Class Access Modifier package to public in class org.neo4j.kernel.RecoveryLabelScanWriterProvider",
      "type": "Change Class Access Modifier"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/RecoveryLabelScanWriterProvider.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreRecoverer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/recovery/StoreRecoverer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NeoStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 89,
        "description": "Remove Class Modifier static in class org.neo4j.kernel.impl.store.NeoStore.Position",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 109,
        "description": "Change Method Access Modifier private to package in method package Position(id int, description String) from class org.neo4j.kernel.impl.store.NeoStore.Position",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 909,
        "description": "Add Parameter logVersion : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 909,
        "description": "Add Parameter byteOffset : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 962,
        "description": "Add Parameter logVersion : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 962,
        "description": "Add Parameter byteOffset : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.store.NeoStore",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/NeoStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreFactory.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/StoreFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentMapState.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/kvstore/ConcurrentMapState.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "NeoStoreUtil.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/NeoStoreUtil.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogFiles.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/LogFiles.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreMigrationParticipant.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/StoreMigrationParticipant.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreMigrator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 385,
        "description": "Add Parameter lastTxLogVersion : long in method private migrateWithBatchImporter(storeDir File, migrationDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long, pageCache PageCache) : void from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 385,
        "description": "Add Parameter lastTxLogByteOffset : long in method private migrateWithBatchImporter(storeDir File, migrationDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long, pageCache PageCache) : void from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 452,
        "description": "Add Parameter lastTxLogVersion : long in method private readAdditionalIds(storeDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long) : AdditionalInitialIds from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 452,
        "description": "Add Parameter lastTxLogByteOffset : long in method private readAdditionalIds(storeDir File, lastTxId long, lastTxChecksum long, lastTxLogVersion long, lastTxLogByteOffset long) : AdditionalInitialIds from class org.neo4j.kernel.impl.storemigration.StoreMigrator",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/StoreMigrator.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreMigratorCheckPointer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/StoreMigratorCheckPointer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchingTransactionAppender.java",
    "refactorings": [
      {
        "rightSideLineNumber": 193,
        "description": "Add Parameter transactionLogPosition : LogPosition in method package TransactionCommitment(hasLegacyIndexChanges boolean, transactionId long, transactionChecksum long, transactionLogPosition LogPosition, transactionIdStore TransactionIdStore) from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppender.TransactionCommitment",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 96,
        "description": "Add Parameter checkPointer : CheckPointer in method public BatchingTransactionAppender(logFile LogFile, logRotation LogRotation, checkPointer CheckPointer, transactionCommitConsumer LongConsumer, transactionMetadataCache TransactionMetadataCache, transactionIdStore TransactionIdStore, legacyIndexTransactionOrdering IdOrderingQueue, kernelHealth KernelHealth) from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppender",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 96,
        "description": "Add Parameter transactionCommitConsumer : LongConsumer in method public BatchingTransactionAppender(logFile LogFile, logRotation LogRotation, checkPointer CheckPointer, transactionCommitConsumer LongConsumer, transactionMetadataCache TransactionMetadataCache, transactionIdStore TransactionIdStore, legacyIndexTransactionOrdering IdOrderingQueue, kernelHealth KernelHealth) from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppender",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/BatchingTransactionAppender.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogEntryCursor.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/LogEntryCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogFileRecoverer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/LogFileRecoverer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogPosition.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/LogPosition.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogVersionBridge.java",
    "refactorings": [
      {
        "rightSideLineNumber": 42,
        "description": "Remove Attribute Modifier final in attribute public NO_MORE_CHANNELS : LogVersionBridge from class org.neo4j.kernel.impl.transaction.log.LogVersionBridge",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Remove Attribute Modifier static in attribute public NO_MORE_CHANNELS : LogVersionBridge from class org.neo4j.kernel.impl.transaction.log.LogVersionBridge",
        "type": "Remove Attribute Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/LogVersionBridge.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogVersionRepository.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/LogVersionRepository.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LoggingLogFileMonitor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 46,
        "description": "Change Parameter Type recoveredLogVersion : long to startPosition : LogPosition in method public recoveryRequired(startPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Rename Parameter recoveredLogVersion : long to startPosition : LogPosition in method public recoveryRequired(startPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Add Parameter endPosition : LogPosition in method public logRecovered(endPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/LoggingLogFileMonitor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PhysicalLogFile.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/PhysicalLogFile.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PhysicalLogicalTransactionStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/PhysicalLogicalTransactionStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PhysicalTransactionCursor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 44,
        "description": "Add Thrown Exception Type IOException in method public PhysicalTransactionCursor(channel T, entryReader LogEntryReader<T>) from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Extract Variable command : LogEntryCommand in method public next() : boolean from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 127,
        "description": "Move Attribute private channel : T from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor to private channel : T from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor.Marker",
        "type": "Move Attribute"
      },
      {
        "rightSideLineNumber": 127,
        "description": "Extract Class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor.Marker from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
        "type": "Extract Class"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/PhysicalTransactionCursor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ReadOnlyTransactionIdStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 52,
        "description": "Add Parameter logVersion : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 52,
        "description": "Add Parameter logByteOffset : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 82,
        "description": "Add Parameter logVersion : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 82,
        "description": "Add Parameter logByteOffset : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, logByteOffset long) : void from class org.neo4j.kernel.impl.transaction.log.ReadOnlyTransactionIdStore",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/ReadOnlyTransactionIdStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionAppender.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/TransactionAppender.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionIdStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 45,
        "description": "Remove Attribute Modifier final in attribute public BASE_TX_ID : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Remove Attribute Modifier static in attribute public BASE_TX_ID : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Remove Attribute Modifier final in attribute public BASE_TX_CHECKSUM : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Remove Attribute Modifier static in attribute public BASE_TX_CHECKSUM : long from class org.neo4j.kernel.impl.transaction.log.TransactionIdStore",
        "type": "Remove Attribute Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/TransactionIdStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionLogWriter.java",
    "refactorings": [{
      "rightSideLineNumber": 49,
      "description": "Remove Parameter transactionId : long in method public checkPoint(transactionId long, logPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.TransactionLogWriter",
      "type": "Remove Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/TransactionLogWriter.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckPointThreshold.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointThreshold.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckPointTransactionCountThreshold.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointTransactionCountThreshold.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckPointer.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckPointerImpl.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointerImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckPoint.java",
    "refactorings": [
      {
        "rightSideLineNumber": 28,
        "description": "Add Attribute Modifier final in attribute private logPosition : LogPosition from class org.neo4j.kernel.impl.transaction.log.entry.CheckPoint",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 53,
        "description": "Invert Condition return logPosition.equals(that.logPosition); to return !(logPosition != null ? !logPosition.equals(that.logPosition) : that.logPosition != null); in method public equals(o Object) : boolean from class org.neo4j.kernel.impl.transaction.log.entry.CheckPoint",
        "type": "Invert Condition"
      },
      {
        "rightSideLineNumber": 30,
        "description": "Change Method Access Modifier package to public in method public CheckPoint(logPosition LogPosition) from class org.neo4j.kernel.impl.transaction.log.entry.CheckPoint",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 35,
        "description": "Change Method Access Modifier package to public in method public CheckPoint(version byte, logPosition LogPosition) from class org.neo4j.kernel.impl.transaction.log.entry.CheckPoint",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/entry/CheckPoint.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogEntryWriter.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/entry/LogEntryWriter.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogEntryWriterV1.java",
    "refactorings": [{
      "rightSideLineNumber": 88,
      "description": "Remove Parameter transactionId : long in method public writeCheckPointEntry(transactionId long, logPosition LogPosition) : void from class org.neo4j.kernel.impl.transaction.log.entry.LogEntryWriterV1",
      "type": "Remove Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/entry/LogEntryWriterV1.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogHeaderReader.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/entry/LogHeaderReader.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogPruneStrategy.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruneStrategy.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogPruneStrategyFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 61,
      "description": "Remove Parameter versionRepo : LogVersionRepository in method public fromConfigValue(fileSystem FileSystemAbstraction, logFileInformation LogFileInformation, files PhysicalLogFiles, versionRepo LogVersionRepository, configValue String) : LogPruneStrategy from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruneStrategyFactory",
      "type": "Remove Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruneStrategyFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogPruning.java",
    "refactorings": [{
      "rightSideLineNumber": 22,
      "description": "Change Type Declaration Kind class to interface in type org.neo4j.kernel.impl.transaction.log.pruning.LogPruning",
      "type": "Change Type Declaration Kind"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruning.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogPruningImpl.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruningImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ThresholdBasedPruneStrategy.java",
    "refactorings": [
      {
        "rightSideLineNumber": 38,
        "description": "Remove Parameter versionRepo : LogVersionRepository in method public ThresholdBasedPruneStrategy(fileSystem FileSystemAbstraction, logFileInformation LogFileInformation, files PhysicalLogFiles, versionRepo LogVersionRepository, threshold Threshold) from class org.neo4j.kernel.impl.transaction.log.pruning.ThresholdBasedPruneStrategy",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 50,
        "description": "Parameterize Variable currentLogVersion : long to upToLogVersion : long in method public prune(upToLogVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.ThresholdBasedPruneStrategy",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/ThresholdBasedPruneStrategy.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogRotationImpl.java",
    "refactorings": [{
      "rightSideLineNumber": 41,
      "description": "Remove Parameter logRotationControl : LogRotationControl in method public LogRotationImpl(monitor Monitor, logFile LogFile, logRotationControl LogRotationControl, kernelHealth KernelHealth, logProvider LogProvider) from class org.neo4j.kernel.impl.transaction.log.rotation.LogRotationImpl",
      "type": "Remove Parameter"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/rotation/LogRotationImpl.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreFlusher.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/rotation/StoreFlusher.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "RecoveryVisitor.java",
    "refactorings": [{
      "rightSideLineNumber": 77,
      "description": "Extract Variable startEntry : LogEntryStart in method public visit(transaction CommittedTransactionRepresentation) : boolean from class org.neo4j.kernel.impl.transaction.state.RecoveryVisitor",
      "type": "Extract Variable"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/state/RecoveryVisitor.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogAppendEvent.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/tracing/LogAppendEvent.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "LogCheckPointEvent.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/tracing/LogCheckPointEvent.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ArrayQueueOutOfOrderSequence.java",
    "refactorings": [
      {
        "rightSideLineNumber": 89,
        "description": "Rename Method private pack(meta long) : long[] renamed to private createResult(number long, meta long[]) : long[] in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 35,
        "description": "Remove Attribute Modifier final in attribute private metaArray : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Change Attribute Type highestGapFreeMeta : long to highestGapFreeMeta : long[] in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Change Variable Type meta : long to meta : long[] in method public get() : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Add Parameter initialMeta : long[] in method public ArrayQueueOutOfOrderSequence(startingNumber long, initialArraySize int, initialMeta long[]) from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Change Parameter Type meta : long to meta : long[] in method public offer(number long, meta long[]) : boolean from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 89,
        "description": "Change Parameter Type meta : long to meta : long[] in method private createResult(number long, meta long[]) : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 89,
        "description": "Add Parameter number : long in method private createResult(number long, meta long[]) : long[] from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 117,
        "description": "Change Parameter Type meta : long to meta : long[] in method public seen(number long, meta long[]) : boolean from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Change Parameter Type meta : long to meta : long[] in method public set(number long, meta long[]) : void from class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/ArrayQueueOutOfOrderSequence.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Charsets.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/Charsets.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "OutOfOrderSequence.java",
    "refactorings": [{
      "rightSideLineNumber": 59,
      "description": "Change Parameter Type meta : long to meta : long[] in method public set(number long, meta long[]) : void from class org.neo4j.kernel.impl.util.OutOfOrderSequence",
      "type": "Change Parameter Type"
    }],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/OutOfOrderSequence.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultRecoverySPI.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/recovery/DefaultRecoverySPI.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Recovery.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/recovery/Recovery.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AdditionalInitialIds.java",
    "refactorings": [
      {
        "rightSideLineNumber": 57,
        "description": "Remove Attribute Modifier final in attribute public EMPTY : AdditionalInitialIds from class org.neo4j.unsafe.impl.batchimport.AdditionalInitialIds",
        "type": "Remove Attribute Modifier"
      },
      {
        "rightSideLineNumber": 57,
        "description": "Remove Attribute Modifier static in attribute public EMPTY : AdditionalInitialIds from class org.neo4j.unsafe.impl.batchimport.AdditionalInitialIds",
        "type": "Remove Attribute Modifier"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/impl/batchimport/AdditionalInitialIds.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchingNeoStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/impl/batchimport/store/BatchingNeoStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "OnlineBackupExtensionFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 54,
        "description": "Rename Method public logRotationControlSupplier() : Supplier<LogRotationControl> renamed to public storeFlusherSupplier() : Supplier<StoreFlusher> in class org.neo4j.backup.OnlineBackupExtensionFactory.Dependencies",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 54,
        "description": "Change Return Type Supplier<LogRotationControl> to Supplier<StoreFlusher> in method public storeFlusherSupplier() : Supplier<StoreFlusher> from class org.neo4j.backup.OnlineBackupExtensionFactory.Dependencies",
        "type": "Change Return Type"
      }
    ],
    "filePath": "enterprise/backup/src/main/java/org/neo4j/backup/OnlineBackupExtensionFactory.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "OnlineBackupKernelExtension.java",
    "refactorings": [
      {
        "rightSideLineNumber": 90,
        "description": "Change Parameter Type logRotationControlSupplier : Supplier<LogRotationControl> to storeFlusherSupplier : Supplier<StoreFlusher> in method public OnlineBackupKernelExtension(config Config, graphDatabaseAPI GraphDatabaseAPI, logProvider LogProvider, monitors Monitors, neoStoreDataSource NeoStoreDataSource, storeFlusherSupplier Supplier<StoreFlusher>, transactionIdStoreSupplier Supplier<TransactionIdStore>, logicalTransactionStoreSupplier Supplier<LogicalTransactionStore>, logFileInformationSupplier Supplier<LogFileInformation>, fileSystemAbstraction FileSystemAbstraction) from class org.neo4j.backup.OnlineBackupKernelExtension",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 90,
        "description": "Rename Parameter logRotationControlSupplier : Supplier<LogRotationControl> to storeFlusherSupplier : Supplier<StoreFlusher> in method public OnlineBackupKernelExtension(config Config, graphDatabaseAPI GraphDatabaseAPI, logProvider LogProvider, monitors Monitors, neoStoreDataSource NeoStoreDataSource, storeFlusherSupplier Supplier<StoreFlusher>, transactionIdStoreSupplier Supplier<TransactionIdStore>, logicalTransactionStoreSupplier Supplier<LogicalTransactionStore>, logFileInformationSupplier Supplier<LogFileInformation>, fileSystemAbstraction FileSystemAbstraction) from class org.neo4j.backup.OnlineBackupKernelExtension",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "enterprise/backup/src/main/java/org/neo4j/backup/OnlineBackupKernelExtension.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreCopyClient.java",
    "refactorings": [
      {
        "rightSideLineNumber": 283,
        "description": "Extract Variable currentLogVersion : long in method private writeTransactionsToActiveLogFile(storeDir File, response Response<?>) : void from class org.neo4j.com.storecopy.StoreCopyClient",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 283,
        "description": "Extract Variable currentLogFile : File in method private writeTransactionsToActiveLogFile(storeDir File, response Response<?>) : void from class org.neo4j.com.storecopy.StoreCopyClient",
        "type": "Extract Variable"
      }
    ],
    "filePath": "enterprise/com/src/main/java/org/neo4j/com/storecopy/StoreCopyClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreCopyServer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 123,
        "description": "Change Parameter Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public StoreCopyServer(transactionIdStore TransactionIdStore, dataSource NeoStoreDataSource, storeFlusher StoreFlusher, fileSystem FileSystemAbstraction, storeDirectory File, monitor Monitor) from class org.neo4j.com.storecopy.StoreCopyServer",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 123,
        "description": "Rename Parameter logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public StoreCopyServer(transactionIdStore TransactionIdStore, dataSource NeoStoreDataSource, storeFlusher StoreFlusher, fileSystem FileSystemAbstraction, storeDirectory File, monitor Monitor) from class org.neo4j.com.storecopy.StoreCopyServer",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Rename Attribute logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.com.storecopy.StoreCopyServer",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Change Attribute Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.com.storecopy.StoreCopyServer",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "enterprise/com/src/main/java/org/neo4j/com/storecopy/StoreCopyServer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultMasterImplSPI.java",
    "refactorings": [
      {
        "rightSideLineNumber": 105,
        "description": "Change Parameter Type logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in method public DefaultMasterImplSPI(graphDb GraphDatabaseAPI, fileSystemAbstraction FileSystemAbstraction, monitors Monitors, labels LabelTokenHolder, propertyKeyTokenHolder PropertyKeyTokenHolder, relationshipTypeTokenHolder RelationshipTypeTokenHolder, idGeneratorFactory IdGeneratorFactory, locks Locks, transactionCommitProcess TransactionCommitProcess, storeFlusher StoreFlusher, transactionIdStore TransactionIdStore, logicalTransactionStore LogicalTransactionStore, neoStoreDataSource NeoStoreDataSource, jobScheduler JobScheduler) from class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 105,
        "description": "Rename Parameter logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in method public DefaultMasterImplSPI(graphDb GraphDatabaseAPI, fileSystemAbstraction FileSystemAbstraction, monitors Monitors, labels LabelTokenHolder, propertyKeyTokenHolder PropertyKeyTokenHolder, relationshipTypeTokenHolder RelationshipTypeTokenHolder, idGeneratorFactory IdGeneratorFactory, locks Locks, transactionCommitProcess TransactionCommitProcess, storeFlusher StoreFlusher, transactionIdStore TransactionIdStore, logicalTransactionStore LogicalTransactionStore, neoStoreDataSource NeoStoreDataSource, jobScheduler JobScheduler) from class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 76,
        "description": "Rename Attribute logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 76,
        "description": "Change Attribute Type logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/cluster/DefaultMasterImplSPI.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "EnterpriseEditionModule.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/factory/EnterpriseEditionModule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ConsistencyCheckToolTest.java",
    "refactorings": [],
    "filePath": "community/consistency-check/src/test/java/org/neo4j/consistency/ConsistencyCheckToolTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LatestCheckPointFinder.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/recovery/LatestCheckPointFinder.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateAndDeleteNodesIT.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/graphdb/CreateAndDeleteNodesIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "RecoveryTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 95,
        "description": "Inline Variable name : String in method public shouldRecoverExistingData() : void from class org.neo4j.kernel.RecoveryTest",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Change Parameter Type visitor : Visitor<ByteBuffer,IOException> to visitor : Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException> in method private writeSomeData(file File, visitor Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException>) : void from class org.neo4j.kernel.RecoveryTest",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/RecoveryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TransactionRepresentationCommitProcessTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/TransactionRepresentationCommitProcessTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "IndexRecoveryIT.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/IndexRecoveryIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "KernelRecoveryTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/recovery/KernelRecoveryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestStoreRecoverer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 83,
        "description": "Rename Method public createLogFileForNextVersionWithSomeDataInIt(store File, fileSystem FileSystemAbstraction) : void renamed to private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction in class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Change Variable Type life : LifeSupport to db : GraphDatabaseService in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Add Variable Modifier final in variable db : GraphDatabaseService in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 98,
        "description": "Rename Variable life : LifeSupport to db : GraphDatabaseService in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Change Return Type void to FileSystemAbstraction in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Change Parameter Type fileSystem : FileSystemAbstraction to fileSystem : EphemeralFileSystemAbstraction in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Change Method Access Modifier public to private in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Remove Method Modifier static in method public createLogFileForNextVersionWithSomeDataInIt(store File, fileSystem FileSystemAbstraction) : void from class org.neo4j.kernel.impl.recovery.TestStoreRecoverer",
        "type": "Remove Method Modifier"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/recovery/TestStoreRecoverer.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ArrayQueueOutOfOrderSequenceTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 177,
        "description": "Change Parameter Type meta : long to meta : long[] in method private offer(sequence OutOfOrderSequence, number long, meta long[]) : boolean from class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 181,
        "description": "Change Parameter Type meta : long to meta : long[] in method private assertGet(sequence OutOfOrderSequence, number long, meta long[]) : void from class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/ArrayQueueOutOfOrderSequenceTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreFactoryTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/StoreFactoryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestNeoStore.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/TestNeoStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CountsRotationTest.java",
    "refactorings": [{
      "rightSideLineNumber": 178,
      "description": "Rename Method private rotateLog(db GraphDatabaseAPI) : void renamed to private checkPoint(db GraphDatabaseAPI) : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
      "type": "Rename Method"
    }],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/counts/CountsRotationTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "DeadSimpleTransactionIdStore.java",
    "refactorings": [
      {
        "rightSideLineNumber": 46,
        "description": "Add Parameter previouslyCommittedTxLogVersion : long in method public DeadSimpleTransactionIdStore(previouslyCommittedTxId long, checksum long, previouslyCommittedTxLogVersion long, previouslyCommittedTxLogByteOffset long) from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 46,
        "description": "Add Parameter previouslyCommittedTxLogByteOffset : long in method public DeadSimpleTransactionIdStore(previouslyCommittedTxId long, checksum long, previouslyCommittedTxLogVersion long, previouslyCommittedTxLogByteOffset long) from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Add Parameter logVersion : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 62,
        "description": "Add Parameter byteOffset : long in method public transactionCommitted(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Add Parameter logVersion : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 92,
        "description": "Add Parameter byteOffset : long in method public setLastCommittedAndClosedTransactionId(transactionId long, checksum long, logVersion long, byteOffset long) : void from class org.neo4j.kernel.impl.transaction.DeadSimpleTransactionIdStore",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/DeadSimpleTransactionIdStore.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LogMatchers.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/LogMatchers.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PartialTransactionFailureIT.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/PartialTransactionFailureIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PhysicalTransactionCursorTest.java",
    "refactorings": [{
      "rightSideLineNumber": 60,
      "description": "Remove Attribute Modifier final in attribute private cursor : PhysicalTransactionCursor<ReadableVersionableLogChannel> from class org.neo4j.kernel.impl.transaction.PhysicalTransactionCursorTest",
      "type": "Remove Attribute Modifier"
    }],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/PhysicalTransactionCursorTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BatchingTransactionAppenderConcurrencyTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 55,
        "description": "Remove Class Modifier static in class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest.ChannelCommand",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 82,
        "description": "Add Attribute Modifier final in attribute private logFile : LogFile from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 83,
        "description": "Add Attribute Modifier final in attribute private logRotation : LogRotation from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 85,
        "description": "Add Attribute Modifier final in attribute private transactionMetadataCache : TransactionMetadataCache from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 86,
        "description": "Add Attribute Modifier final in attribute private transactionIdStore : TransactionIdStore from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Add Attribute Modifier final in attribute private kernelHealth : KernelHealth from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 91,
        "description": "Add Attribute Modifier final in attribute private channelCommandQueue : BlockingQueue<ChannelCommand> from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 89,
        "description": "Add Attribute Modifier final in attribute private forceSemaphore : Semaphore from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Rename Attribute legacyindexTransactionOrdering : IdOrderingQueue to legacyIndexTransactionOrdering : IdOrderingQueue in class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 87,
        "description": "Add Attribute Modifier final in attribute private legacyIndexTransactionOrdering : IdOrderingQueue from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest",
        "type": "Add Attribute Modifier"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/BatchingTransactionAppenderConcurrencyTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BatchingTransactionAppenderTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/BatchingTransactionAppenderTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LogRotationDeadlockTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/LogRotationDeadlockTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PhysicalLogFileTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 56,
        "description": "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldOpenInFreshDirectoryAndFinallyAddHeader() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldOpenInFreshDirectoryAndFinallyAddHeader() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Change Variable Type logRotationControl : LogRotationControl to logRotationControl : StoreFlusher in method public shouldWriteSomeDataIntoTheLog() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Change Variable Type logRotationControl : LogRotationControl to logRotationControl : StoreFlusher in method public shouldReadOlderLogs() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldVisitLogFile() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldVisitLogFile() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest",
        "type": "Rename Variable"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/PhysicalLogFileTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PhysicalLogicalTransactionStoreTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 372,
        "description": "Replace Anonymous With Class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.shouldOpenAndRecoverExistingData.recoverer.new LogFileRecoverer.new CloseableVisitor<CommittedTransactionRepresentation,IOException> with org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.FakeRecoveryVisitor",
        "type": "Replace Anonymous With Class"
      },
      {
        "rightSideLineNumber": 372,
        "description": "Replace Anonymous With Class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.shouldExtractMetadataFromExistingTransaction.recoverer.new LogFileRecoverer.new CloseableVisitor<CommittedTransactionRepresentation,IOException> with org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.FakeRecoveryVisitor",
        "type": "Replace Anonymous With Class"
      },
      {
        "rightSideLineNumber": 111,
        "description": "Add Parameter Modifier final in parameter recoveryVersion : long in method public shouldOpenAndRecoverExistingData() : void from class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest",
        "type": "Add Parameter Modifier"
      }
    ],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/PhysicalLogicalTransactionStoreTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CheckPointerImplTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointerImplTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestLogPruning.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/pruning/TestLogPruning.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ThresholdBasedPruneStrategyTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/pruning/ThresholdBasedPruneStrategyTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "RecoveryVisitorTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/state/RecoveryVisitorTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LatestCheckPointFinderTest.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/recovery/LatestCheckPointFinderTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NeoStoreDataSourceRule.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/test/NeoStoreDataSourceRule.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "SubProcess.java",
    "refactorings": [],
    "filePath": "community/kernel/src/test/java/org/neo4j/test/subprocess/SubProcess.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "IndexCreationTest.java",
    "refactorings": [],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/index/impl/lucene/IndexCreationTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "UniqueIndexRecoveryTests.java",
    "refactorings": [{
      "rightSideLineNumber": 246,
      "description": "Rename Method private rotateLog() : void renamed to private rotateLogAndCheckPoint() : void in class org.neo4j.index.recovery.UniqueIndexRecoveryTests",
      "type": "Rename Method"
    }],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/index/recovery/UniqueIndexRecoveryTests.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneIndexRecoveryIT.java",
    "refactorings": [{
      "rightSideLineNumber": 265,
      "description": "Rename Method private rotateLogs() : void renamed to private rotateLogsAndCheckPoint() : void in class org.neo4j.kernel.api.impl.index.LuceneIndexRecoveryIT",
      "type": "Rename Method"
    }],
    "filePath": "community/lucene-index/src/test/java/org/neo4j/kernel/api/impl/index/LuceneIndexRecoveryIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "RebuildCountsTest.java",
    "refactorings": [],
    "filePath": "community/neo4j/src/test/java/counts/RebuildCountsTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "CountsStoreRecoveryTest.java",
    "refactorings": [{
      "rightSideLineNumber": 98,
      "description": "Rename Method private rotateLog() : void renamed to private checkPoint() : void in class recovery.CountsStoreRecoveryTest",
      "type": "Rename Method"
    }],
    "filePath": "community/neo4j/src/test/java/recovery/CountsStoreRecoveryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRecoveryScenarios.java",
    "refactorings": [{
      "rightSideLineNumber": 309,
      "description": "Rename Method private rotateLog() : void renamed to private checkPoint() : void in class recovery.TestRecoveryScenarios",
      "type": "Rename Method"
    }],
    "filePath": "community/neo4j/src/test/java/recovery/TestRecoveryScenarios.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestConcurrentRotation.java",
    "refactorings": [{
      "rightSideLineNumber": 192,
      "description": "Rename Method private rotateLogicalLog(graphdb GraphDatabaseAPI) : void renamed to private checkPoint(graphdb GraphDatabaseAPI) : void in class synchronization.TestConcurrentRotation.RotateIndexLogTask",
      "type": "Rename Method"
    }],
    "filePath": "community/neo4j/src/test/java/synchronization/TestConcurrentRotation.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreUpgraderTest.java",
    "refactorings": [],
    "filePath": "community/neo4j/src/test/java/upgrade/StoreUpgraderTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestPerformRecoveryIfNecessary.java",
    "refactorings": [],
    "filePath": "community/server/src/test/java/org/neo4j/server/preflight/TestPerformRecoveryIfNecessary.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BackupServiceIT.java",
    "refactorings": [{
      "rightSideLineNumber": 404,
      "description": "Rename Method private rotate(db GraphDatabaseAPI) : void renamed to private rotateAndCheckPoint(db GraphDatabaseAPI) : void in class org.neo4j.backup.BackupServiceIT",
      "type": "Rename Method"
    }],
    "filePath": "enterprise/backup/src/test/java/org/neo4j/backup/BackupServiceIT.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BackupServiceStressTestingBuilder.java",
    "refactorings": [{
      "rightSideLineNumber": 294,
      "description": "Rename Method private rotateLog(db GraphDatabaseAPI) : void renamed to private rotateLogAndCheckPoint(db GraphDatabaseAPI) : void in class org.neo4j.backup.BackupServiceStressTestingBuilder.RunTest",
      "type": "Rename Method"
    }],
    "filePath": "enterprise/backup/src/test/java/org/neo4j/backup/BackupServiceStressTestingBuilder.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ResponsePackerTest.java",
    "refactorings": [],
    "filePath": "enterprise/com/src/test/java/org/neo4j/com/storecopy/ResponsePackerTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreCopyClientTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 241,
        "description": "Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public copyStore(writer StoreWriter) : Response<?> from class org.neo4j.com.storecopy.StoreCopyClientTest.storeCopyRequest.spy.new StoreCopyClient.StoreCopyRequester",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 241,
        "description": "Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public copyStore(writer StoreWriter) : Response<?> from class org.neo4j.com.storecopy.StoreCopyClientTest.storeCopyRequest.spy.new StoreCopyClient.StoreCopyRequester",
        "type": "Rename Variable"
      }
    ],
    "filePath": "enterprise/com/src/test/java/org/neo4j/com/storecopy/StoreCopyClientTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TransactionCommittingResponseUnpackerTest.java",
    "refactorings": [],
    "filePath": "enterprise/com/src/test/java/org/neo4j/com/storecopy/TransactionCommittingResponseUnpackerTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "TestInstanceJoin.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/test/java/slavetest/TestInstanceJoin.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreUpgradeIntegrationTest.java",
    "refactorings": [],
    "filePath": "integrationtests/src/test/java/org/neo4j/storeupgrade/StoreUpgradeIntegrationTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "AvailabilityGuard.java",
    "refactorings": [
      {
        "rightSideLineNumber": 115,
        "description": "Inline Method public AvailabilityGuard(clock Clock, conditionCount int) inlined to public AvailabilityGuard(clock Clock) in class org.neo4j.kernel.AvailabilityGuard",
        "type": "Inline Method"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Extract Method private availability() : Availability extracted from private availability(millis long) : Availability in class org.neo4j.kernel.AvailabilityGuard",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 257,
        "description": "Extract Method private availability() : Availability extracted from private availability(millis long) : Availability in class org.neo4j.kernel.AvailabilityGuard",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 256,
        "description": "Rename Variable val : int to count : int in method private availability() : Availability from class org.neo4j.kernel.AvailabilityGuard",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 275,
        "description": "Inline Variable start : long in method private availability(millis long) : Availability from class org.neo4j.kernel.AvailabilityGuard",
        "type": "Inline Variable"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Rename Attribute available : AtomicInteger to requirementCount : AtomicInteger in class org.neo4j.kernel.AvailabilityGuard",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 108,
        "description": "Rename Attribute blockingComponents : List<AvailabilityRequirement> to blockingRequirements : Set<AvailabilityRequirement> in class org.neo4j.kernel.AvailabilityGuard",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 108,
        "description": "Change Attribute Type blockingComponents : List<AvailabilityRequirement> to blockingRequirements : Set<AvailabilityRequirement> in class org.neo4j.kernel.AvailabilityGuard",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/AvailabilityGuard.java",
    "commit": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseAvailability.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/DatabaseAvailability.java",
    "commit": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphDatabaseFacade.java",
    "refactorings": [],
    "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/factory/GraphDatabaseFacade.java",
    "commit": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "HighAvailabilityMemberStateMachine.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/cluster/HighAvailabilityMemberStateMachine.java",
    "commit": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SlaveLocksClient.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/SlaveLocksClient.java",
    "commit": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "AvailabilityGuardTest.java",
    "refactorings": [{
      "rightSideLineNumber": 96,
      "description": "Rename Method public givenAccessGuardWith2ConditionsWhenGrantTwiceAndAwaitThenTrue() : void renamed to public givenAccessGuardWith2ConditionsWhenGrantEachAndAwaitThenTrue() : void in class org.neo4j.kernel.AvailabilityGuardTest",
      "type": "Rename Method"
    }],
    "filePath": "community/kernel/src/test/java/org/neo4j/kernel/AvailabilityGuardTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "HighAvailabilityMemberStateMachineTest.java",
    "refactorings": [],
    "filePath": "enterprise/ha/src/test/java/org/neo4j/kernel/ha/cluster/HighAvailabilityMemberStateMachineTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "GenericBsonTest.java",
    "refactorings": [],
    "filePath": "bson/src/test/unit/org/bson/GenericBsonTest.java",
    "commit": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPoweredTestHelper.java",
    "refactorings": [],
    "filePath": "bson/src/test/unit/util/JsonPoweredTestHelper.java",
    "commit": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "CrudTest.java",
    "refactorings": [],
    "filePath": "driver-async/src/test/functional/com/mongodb/async/client/CrudTest.java",
    "commit": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "ServerDiscoveryAndMonitoringTest.java",
    "refactorings": [],
    "filePath": "driver-core/src/test/unit/com/mongodb/connection/ServerDiscoveryAndMonitoringTest.java",
    "commit": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "ServerSelectionRttTest.java",
    "refactorings": [],
    "filePath": "driver-core/src/test/unit/com/mongodb/connection/ServerSelectionRttTest.java",
    "commit": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "ServerSelectionSelectionTest.java",
    "refactorings": [],
    "filePath": "driver-core/src/test/unit/com/mongodb/connection/ServerSelectionSelectionTest.java",
    "commit": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "CrudTest.java",
    "refactorings": [],
    "filePath": "driver/src/test/functional/com/mongodb/client/CrudTest.java",
    "commit": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "Config.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/Config.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseDescriptor.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/DatabaseDescriptor.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitLog.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/commitlog/CommitLog.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CompressedSegment.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/db/commitlog/CompressedSegment.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "BootStrapper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 166,
        "description": "Extract Method private getSpecifiedTokens(metadata TokenMetadata, initialTokens Collection<String>) : Collection<Token> extracted from public getBootstrapTokens(metadata TokenMetadata) : Collection<Token> in class org.apache.cassandra.dht.BootStrapper",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 152,
        "description": "Add Parameter address : InetAddress in method public getBootstrapTokens(metadata TokenMetadata, address InetAddress) : Collection<Token> from class org.apache.cassandra.dht.BootStrapper",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/dht/BootStrapper.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ByteOrderedPartitioner.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/dht/ByteOrderedPartitioner.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ComparableObjectToken.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/dht/ComparableObjectToken.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "Murmur3Partitioner.java",
    "refactorings": [{
      "rightSideLineNumber": 185,
      "description": "Extract Method public getRandomToken(r Random) : LongToken extracted from public getRandomToken() : LongToken in class org.apache.cassandra.dht.Murmur3Partitioner",
      "type": "Extract Method"
    }],
    "filePath": "src/java/org/apache/cassandra/dht/Murmur3Partitioner.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "Token.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/dht/Token.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ReplicationAwareTokenAllocator.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/dht/tokenallocator/ReplicationAwareTokenAllocator.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ReplicationStrategy.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/dht/tokenallocator/ReplicationStrategy.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenAllocation.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocation.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenAllocator.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocator.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenMetadata.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/locator/TokenMetadata.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "StorageService.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/service/StorageService.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitLogStressTest.java",
    "refactorings": [],
    "filePath": "test/long/org/apache/cassandra/db/commitlog/CommitLogStressTest.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "ReplicationAwareTokenAllocatorTest.java",
    "refactorings": [],
    "filePath": "test/long/org/apache/cassandra/dht/tokenallocator/ReplicationAwareTokenAllocatorTest.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "CompressorPerformance.java",
    "refactorings": [],
    "filePath": "test/long/org/apache/cassandra/io/compress/CompressorPerformance.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "CommitLogTestReplayer.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/db/commitlog/CommitLogTestReplayer.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "BootStrapperTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 147,
        "description": "Extract Method private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void extracted from private generateFakeEndpoints(numOldNodes int) : void in class org.apache.cassandra.dht.BootStrapperTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 150,
        "description": "Extract Variable addr : InetAddress in method private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void from class org.apache.cassandra.dht.BootStrapperTest",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 137,
        "description": "Parameterize Variable tmd : TokenMetadata to tmd : TokenMetadata in method private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void from class org.apache.cassandra.dht.BootStrapperTest",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 134,
        "description": "Inline Variable tmd : TokenMetadata in method private generateFakeEndpoints(numOldNodes int) : void from class org.apache.cassandra.dht.BootStrapperTest",
        "type": "Inline Variable"
      }
    ],
    "filePath": "test/unit/org/apache/cassandra/dht/BootStrapperTest.java",
    "commit": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "TransportBaseSQLAction.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/action/sql/TransportBaseSQLAction.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "Job.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/executor/Job.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportExecutor.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/executor/transport/TransportExecutor.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "IterablePlan.java",
    "refactorings": [{
      "rightSideLineNumber": 39,
      "description": "Add Parameter id : UUID in method public IterablePlan(id UUID, nodes PlanNode...) from class io.crate.planner.IterablePlan",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/IterablePlan.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NoopPlan.java",
    "refactorings": [
      {
        "rightSideLineNumber": 33,
        "description": "Add Parameter id : UUID in method public NoopPlan(id UUID) from class io.crate.planner.NoopPlan",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Change Method Access Modifier private to public in method public NoopPlan(id UUID) from class io.crate.planner.NoopPlan",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/NoopPlan.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "Plan.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/Plan.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "PlanNodeBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 51,
        "description": "Add Parameter jobId : UUID in method public distributingCollect(jobId UUID, tableInfo TableInfo, plannerContext Planner.Context, whereClause WhereClause, toCollect List<Symbol>, downstreamNodes List<String>, projections ImmutableList<Projection>) : CollectNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 76,
        "description": "Add Parameter jobId : UUID in method public distributedMerge(jobId UUID, collectNode CollectNode, plannerContext Planner.Context, projections List<Projection>) : MergeNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 93,
        "description": "Add Parameter jobId : UUID in method public localMerge(jobId UUID, projections List<Projection>, previousNode DQLPlanNode, plannerContext Planner.Context) : MergeNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Add Parameter jobId : UUID in method public sortedLocalMerge(jobId UUID, projections List<Projection>, orderBy OrderBy, sourceSymbols List<Symbol>, orderBySymbols List<Symbol>, previousNode DQLPlanNode, plannerContext Planner.Context) : MergeNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 168,
        "description": "Add Parameter jobId : UUID in method public collect(jobId UUID, tableInfo TableInfo, plannerContext Planner.Context, whereClause WhereClause, toCollect List<Symbol>, projections ImmutableList<Projection>, partitionIdent String, routingPreference String, orderBy OrderBy, limit Integer) : CollectNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 226,
        "description": "Add Parameter jobId : UUID in method public collect(jobId UUID, tableInfo TableInfo, plannerContext Planner.Context, whereClause WhereClause, toCollect List<Symbol>, projections ImmutableList<Projection>) : CollectNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 235,
        "description": "Add Parameter jobId : UUID in method public collect(jobId UUID, tableInfo TableInfo, plannerContext Planner.Context, whereClause WhereClause, toCollect List<Symbol>, projections ImmutableList<Projection>, partitionIdent String, routingPreference String) : CollectNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 246,
        "description": "Add Parameter jobId : UUID in method public collect(jobId UUID, tableInfo TableInfo, plannerContext Planner.Context, whereClause WhereClause, toCollect List<Symbol>, projections ImmutableList<Projection>, partitionIdent String) : CollectNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 256,
        "description": "Add Parameter jobId : UUID in method public collect(jobId UUID, tableInfo TableInfo, plannerContext Planner.Context, whereClause WhereClause, toCollect List<Symbol>, projections ImmutableList<Projection>, orderBy OrderBy, limit Integer) : CollectNode from class io.crate.planner.PlanNodeBuilder",
        "type": "Add Parameter"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/PlanNodeBuilder.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "Planner.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/Planner.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CountConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/CountConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedGroupByConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/DistributedGroupByConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ESGetConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/ESGetConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "GlobalAggregateConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/GlobalAggregateConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "InsertFromSubQueryConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/InsertFromSubQueryConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NonDistributedGroupByConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/NonDistributedGroupByConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryAndFetchConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/QueryAndFetchConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryThenFetchConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/QueryThenFetchConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ReduceOnCollectorGroupByConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/ReduceOnCollectorGroupByConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "UpdateConsumer.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/consumer/UpdateConsumer.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ExecutionNode.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/ExecutionNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NoopPlannedAnalyzedRelation.java",
    "refactorings": [{
      "rightSideLineNumber": 44,
      "description": "Add Parameter id : UUID in method public NoopPlannedAnalyzedRelation(relation AnalyzedRelation, id UUID) from class io.crate.planner.node.NoopPlannedAnalyzedRelation",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/NoopPlannedAnalyzedRelation.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "InsertFromSubQuery.java",
    "refactorings": [{
      "rightSideLineNumber": 45,
      "description": "Add Parameter id : UUID in method public InsertFromSubQuery(innerPlan Plan, handlerMergeNode MergeNode, id UUID) from class io.crate.planner.node.dml.InsertFromSubQuery",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dml/InsertFromSubQuery.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "Upsert.java",
    "refactorings": [{
      "rightSideLineNumber": 38,
      "description": "Add Parameter id : UUID in method public Upsert(nodes List<Plan>, id UUID) from class io.crate.planner.node.dml.Upsert",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dml/Upsert.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractDQLPlanNode.java",
    "refactorings": [{
      "rightSideLineNumber": 53,
      "description": "Add Parameter jobId : UUID in method protected AbstractDQLPlanNode(jobId UUID, executionNodeId int, name String) from class io.crate.planner.node.dql.AbstractDQLPlanNode",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/AbstractDQLPlanNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CollectAndMerge.java",
    "refactorings": [{
      "rightSideLineNumber": 39,
      "description": "Add Parameter id : UUID in method public CollectAndMerge(collectNode CollectNode, localMergeNode MergeNode, id UUID) from class io.crate.planner.node.dql.CollectAndMerge",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/CollectAndMerge.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CollectNode.java",
    "refactorings": [
      {
        "rightSideLineNumber": 80,
        "description": "Add Parameter jobId : UUID in method public CollectNode(jobId UUID, executionNodeId int, name String) from class io.crate.planner.node.dql.CollectNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 84,
        "description": "Add Parameter jobId : UUID in method public CollectNode(jobId UUID, executionNodeId int, name String, routing Routing) from class io.crate.planner.node.dql.CollectNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 88,
        "description": "Add Parameter jobId : UUID in method public CollectNode(jobId UUID, executionNodeId int, name String, routing Routing, toCollect List<Symbol>, projections List<Projection>) from class io.crate.planner.node.dql.CollectNode",
        "type": "Add Parameter"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/CollectNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CountNode.java",
    "refactorings": [{
      "rightSideLineNumber": 54,
      "description": "Add Parameter jobId : UUID in method public CountNode(jobId UUID, executionNodeId int, routing Routing, whereClause WhereClause) from class io.crate.planner.node.dql.CountNode",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/CountNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CountPlan.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Add Parameter id : UUID in method public CountPlan(countNode CountNode, mergeNode MergeNode, id UUID) from class io.crate.planner.node.dql.CountPlan",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/CountPlan.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedGroupBy.java",
    "refactorings": [{
      "rightSideLineNumber": 39,
      "description": "Add Parameter id : UUID in method public DistributedGroupBy(collectNode CollectNode, reducerMergeNode MergeNode, localMergeNode MergeNode, id UUID) from class io.crate.planner.node.dql.DistributedGroupBy",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/DistributedGroupBy.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ESDQLPlanNode.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/ESDQLPlanNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ESGetNode.java",
    "refactorings": [{
      "rightSideLineNumber": 56,
      "description": "Add Parameter jobId : UUID in method public ESGetNode(executionNodeId int, tableInfo TableInfo, querySpec QuerySpec, jobId UUID) from class io.crate.planner.node.dql.ESGetNode",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/ESGetNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "FileUriCollectNode.java",
    "refactorings": [{
      "rightSideLineNumber": 55,
      "description": "Add Parameter jobId : UUID in method public FileUriCollectNode(jobId UUID, executionNodeId int, name String, routing Routing, targetUri Symbol, toCollect List<Symbol>, projections List<Projection>, compression String, sharedStorage Boolean) from class io.crate.planner.node.dql.FileUriCollectNode",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/FileUriCollectNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "GlobalAggregate.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Add Parameter id : UUID in method public GlobalAggregate(collectNode CollectNode, mergeNode MergeNode, id UUID) from class io.crate.planner.node.dql.GlobalAggregate",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/GlobalAggregate.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "MergeNode.java",
    "refactorings": [
      {
        "rightSideLineNumber": 69,
        "description": "Add Parameter jobId : UUID in method public MergeNode(jobId UUID, executionNodeId int, name String, numUpstreams int) from class io.crate.planner.node.dql.MergeNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 74,
        "description": "Add Parameter jobId : UUID in method public sortedMergeNode(jobId UUID, executionNodeId int, name String, numUpstreams int, orderByIndices int[], reverseFlags boolean[], nullsFirst Boolean[]) : MergeNode from class io.crate.planner.node.dql.MergeNode",
        "type": "Add Parameter"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/MergeNode.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NonDistributedGroupBy.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Add Parameter id : UUID in method public NonDistributedGroupBy(collectNode CollectNode, localMergeNode MergeNode, id UUID) from class io.crate.planner.node.dql.NonDistributedGroupBy",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/NonDistributedGroupBy.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryAndFetch.java",
    "refactorings": [{
      "rightSideLineNumber": 18,
      "description": "Add Parameter id : UUID in method public QueryAndFetch(collectNode CollectNode, localMergeNode MergeNode, id UUID) from class io.crate.planner.node.dql.QueryAndFetch",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/QueryAndFetch.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryThenFetch.java",
    "refactorings": [{
      "rightSideLineNumber": 36,
      "description": "Add Parameter id : UUID in method public QueryThenFetch(collectNode CollectNode, mergeNode MergeNode, id UUID) from class io.crate.planner.node.dql.QueryThenFetch",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/QueryThenFetch.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "KillPlan.java",
    "refactorings": [
      {
        "rightSideLineNumber": 33,
        "description": "Add Parameter id : UUID in method public KillPlan(id UUID) from class io.crate.planner.node.management.KillPlan",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 33,
        "description": "Change Method Access Modifier private to public in method public KillPlan(id UUID) from class io.crate.planner.node.management.KillPlan",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/node/management/KillPlan.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseTransportExecutorTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/BaseTransportExecutorTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "ExecutionNodesTaskTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/ExecutionNodesTaskTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "TransportExecutorDDLTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/TransportExecutorDDLTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "TransportExecutorTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/TransportExecutorTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "FetchOperationIntegrationTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/integrationtests/FetchOperationIntegrationTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "PageDownstreamFactoryTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/operation/PageDownstreamFactoryTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "DocLevelCollectTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/operation/collect/DocLevelCollectTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "HandlerSideLevelCollectTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/operation/collect/HandlerSideLevelCollectTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "LocalDataCollectTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/operation/collect/LocalDataCollectTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "LuceneDocCollectorTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/operation/collect/LuceneDocCollectorTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "MapSideDataCollectOperationTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/operation/collect/MapSideDataCollectOperationTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "PlannerTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/planner/PlannerTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "CollectNodeTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/planner/node/CollectNodeTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "MergeNodeTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/planner/node/MergeNodeTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "StreamerVisitorTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/planner/node/StreamerVisitorTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "CountNodeTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/planner/node/dql/CountNodeTest.java",
    "commit": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "HandlersBeanDefinitionParser.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/config/HandlersBeanDefinitionParser.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "ServletWebSocketHandlerRegistry.java",
    "refactorings": [{
      "rightSideLineNumber": 111,
      "description": "Change Variable Type hm : SimpleUrlHandlerMapping to hm : WebSocketHandlerMapping in method public getHandlerMapping() : AbstractHandlerMapping from class org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry",
      "type": "Change Variable Type"
    }],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "JettyRequestUpgradeStrategy.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractHandshakeHandler.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultHandshakeHandler.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/server/support/DefaultHandshakeHandler.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "WebSocketHandlerMapping.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHandlerMapping.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "WebSocketHttpRequestHandler.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "SockJsHttpRequestHandler.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/SockJsHttpRequestHandler.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultSockJsService.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/DefaultSockJsService.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "WebSocketTransportHandler.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractWebSocketIntegrationTests.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/test/java/org/springframework/web/socket/AbstractWebSocketIntegrationTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "TomcatWebSocketTestServer.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/test/java/org/springframework/web/socket/TomcatWebSocketTestServer.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "WebSocketIntegrationTests.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/test/java/org/springframework/web/socket/WebSocketIntegrationTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "MessageBrokerBeanDefinitionParserTests.java",
    "refactorings": [],
    "filePath": "spring-websocket/src/test/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultCreator.java",
    "refactorings": [],
    "filePath": "morphia/src/main/java/org/mongodb/morphia/mapping/DefaultCreator.java",
    "commit": "https://github.com/mongodb/morphia/commit/5db323b99f7064af8780f2c35f245461cf55cc8e",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "main"
  },
  {
    "fileName": "MappedClass.java",
    "refactorings": [],
    "filePath": "morphia/src/main/java/org/mongodb/morphia/mapping/MappedClass.java",
    "commit": "https://github.com/mongodb/morphia/commit/5db323b99f7064af8780f2c35f245461cf55cc8e",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "main"
  },
  {
    "fileName": "MapperOptions.java",
    "refactorings": [],
    "filePath": "morphia/src/main/java/org/mongodb/morphia/mapping/MapperOptions.java",
    "commit": "https://github.com/mongodb/morphia/commit/5db323b99f7064af8780f2c35f245461cf55cc8e",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "main"
  },
  {
    "fileName": "MappingValidator.java",
    "refactorings": [],
    "filePath": "morphia/src/main/java/org/mongodb/morphia/mapping/validation/MappingValidator.java",
    "commit": "https://github.com/mongodb/morphia/commit/5db323b99f7064af8780f2c35f245461cf55cc8e",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "main"
  },
  {
    "fileName": "VersionMisuse.java",
    "refactorings": [],
    "filePath": "morphia/src/main/java/org/mongodb/morphia/mapping/validation/fieldrules/VersionMisuse.java",
    "commit": "https://github.com/mongodb/morphia/commit/5db323b99f7064af8780f2c35f245461cf55cc8e",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "main"
  },
  {
    "fileName": "TestMapping.java",
    "refactorings": [{
      "rightSideLineNumber": 798,
      "description": "Extract Method private performBasicMappingTest() : void extracted from public testBasicMapping() : void in class org.mongodb.morphia.TestMapping",
      "type": "Extract Method"
    }],
    "filePath": "morphia/src/test/java/org/mongodb/morphia/TestMapping.java",
    "commit": "https://github.com/mongodb/morphia/commit/5db323b99f7064af8780f2c35f245461cf55cc8e",
    "repository": "https://github.com/mongodb/morphia.git",
    "fileType": "test"
  },
  {
    "fileName": "CacheCreateConfigRequest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/client/CacheCreateConfigRequest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheDestroyRequest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/client/CacheDestroyRequest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheCreateConfigOperation.java",
    "refactorings": [{
      "rightSideLineNumber": 103,
      "description": "Change Variable Type callback : Callback<Object> to callback : ExecutionCallback<Object> in method public run() : void from class com.hazelcast.cache.impl.operation.CacheCreateConfigOperation",
      "type": "Change Variable Type"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/operation/CacheCreateConfigOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiTargetClientRequest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/client/MultiTargetClientRequest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractMultiTargetMessageTask.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/task/AbstractMultiTargetMessageTask.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "ExecutorServiceProxy.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/executor/impl/ExecutorServiceProxy.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MapProxySupport.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxySupport.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalPartitionServiceImpl.java",
    "refactorings": [
      {
        "rightSideLineNumber": 1178,
        "description": "Change Variable Type callback : Callback<Object> to callback : ExecutionCallback<Object> in method private checkReplicaSyncState() : boolean from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 1204,
        "description": "Change Parameter Type callback : Callback<Object> to callback : ExecutionCallback in method private submitSyncReplicaOperations(thisAddress Address, s Semaphore, ok AtomicBoolean, callback ExecutionCallback) : int from class com.hazelcast.partition.impl.InternalPartitionServiceImpl",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/partition/impl/InternalPartitionServiceImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "MigrationRequestOperation.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/partition/impl/MigrationRequestOperation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "SyncReplicaVersion.java",
    "refactorings": [
      {
        "rightSideLineNumber": 41,
        "description": "Change Attribute Type callback : Callback<Object> to callback : ExecutionCallback in class com.hazelcast.partition.impl.SyncReplicaVersion",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 51,
        "description": "Change Parameter Type callback : Callback<Object> to callback : ExecutionCallback in method public SyncReplicaVersion(syncReplicaIndex int, callback ExecutionCallback) from class com.hazelcast.partition.impl.SyncReplicaVersion",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "hazelcast/src/main/java/com/hazelcast/partition/impl/SyncReplicaVersion.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InvocationBuilder.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/InvocationBuilder.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleExecutionCallback.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/SimpleExecutionCallback.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "Invocation.java",
    "refactorings": [{
      "rightSideLineNumber": 124,
      "description": "Change Parameter Type callback : Object to callback : ExecutionCallback in method package Invocation(nodeEngine NodeEngineImpl, serviceName String, op Operation, partitionId int, replicaIndex int, tryCount int, tryPauseMillis long, callTimeout long, callback ExecutionCallback, resultDeserialized boolean) from class com.hazelcast.spi.impl.operationservice.impl.Invocation",
      "type": "Change Parameter Type"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/Invocation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InvocationBuilderImpl.java",
    "refactorings": [],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/InvocationBuilderImpl.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InvocationFuture.java",
    "refactorings": [{
      "rightSideLineNumber": 73,
      "description": "Change Parameter Type callback : Object to callback : ExecutionCallback in method package InvocationFuture(operationService OperationServiceImpl, invocation Invocation, callback ExecutionCallback) from class com.hazelcast.spi.impl.operationservice.impl.InvocationFuture",
      "type": "Change Parameter Type"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/InvocationFuture.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "PartitionInvocation.java",
    "refactorings": [{
      "rightSideLineNumber": 34,
      "description": "Change Parameter Type callback : Object to callback : ExecutionCallback in method public PartitionInvocation(nodeEngine NodeEngineImpl, serviceName String, op Operation, partitionId int, replicaIndex int, tryCount int, tryPauseMillis long, callTimeout long, callback ExecutionCallback, resultDeserialized boolean) from class com.hazelcast.spi.impl.operationservice.impl.PartitionInvocation",
      "type": "Change Parameter Type"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/PartitionInvocation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "TargetInvocation.java",
    "refactorings": [{
      "rightSideLineNumber": 37,
      "description": "Change Parameter Type callback : Object to callback : ExecutionCallback in method public TargetInvocation(nodeEngine NodeEngineImpl, serviceName String, op Operation, target Address, tryCount int, tryPauseMillis long, callTimeout long, callback ExecutionCallback, resultDeserialized boolean) from class com.hazelcast.spi.impl.operationservice.impl.TargetInvocation",
      "type": "Change Parameter Type"
    }],
    "filePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/TargetInvocation.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "main"
  },
  {
    "fileName": "InvocationBuilderTest.java",
    "refactorings": [],
    "filePath": "hazelcast/src/test/java/com/hazelcast/spi/InvocationBuilderTest.java",
    "commit": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "fileType": "test"
  },
  {
    "fileName": "ReloadWSDLPublisherTestCase.java",
    "refactorings": [],
    "filePath": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/ws/ReloadWSDLPublisherTestCase.java",
    "commit": "https://github.com/wildfly/wildfly/commit/37d842bfed9779e662321a5ee43c36b058386843",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "ServerReload.java",
    "refactorings": [
      {
        "rightSideLineNumber": 51,
        "description": "Extract Method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void extracted from public executeReloadAndWaitForCompletion(client ModelControllerClient) : void in class org.jboss.as.test.shared.ServerReload",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 56,
        "description": "Parameterize Attribute TIMEOUT : int to timeout : int in method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void from class org.jboss.as.test.shared.ServerReload",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "testsuite/shared/src/main/java/org/jboss/as/test/shared/ServerReload.java",
    "commit": "https://github.com/wildfly/wildfly/commit/37d842bfed9779e662321a5ee43c36b058386843",
    "repository": "https://github.com/wildfly/wildfly.git",
    "fileType": "test"
  },
  {
    "fileName": "DataIO.java",
    "refactorings": [{
      "rightSideLineNumber": 189,
      "description": "Rename Attribute PACK_LONG_BIDI_MASK : long to PACK_LONG_RESULT_MASK : long in class org.mapdb.DataIO",
      "type": "Rename Attribute"
    }],
    "filePath": "src/main/java/org/mapdb/DataIO.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "main"
  },
  {
    "fileName": "Store.java",
    "refactorings": [],
    "filePath": "src/main/java/org/mapdb/Store.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreAppend.java",
    "refactorings": [
      {
        "rightSideLineNumber": 387,
        "description": "Extract Method private insertOrUpdate(recid long, out DataIO.DataOutputByteArray, isInsert boolean) : void extracted from protected update2(recid long, out DataIO.DataOutputByteArray) : void in class org.mapdb.StoreAppend",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 365,
        "description": "Add Variable Modifier final in variable realSize : int in method private insertOrUpdate(recid long, out DataIO.DataOutputByteArray, isInsert boolean) : void from class org.mapdb.StoreAppend",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 389,
        "description": "Rename Variable len : int to realSize : int in method private insertOrUpdate(recid long, out DataIO.DataOutputByteArray, isInsert boolean) : void from class org.mapdb.StoreAppend",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Remove Variable Modifier final in variable recid : long in method protected initOpen() : void from class org.mapdb.StoreAppend",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Remove Variable Modifier final in variable recid : long in method protected initOpen() : void from class org.mapdb.StoreAppend",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Remove Variable Modifier final in variable recid : long in method protected initOpen() : void from class org.mapdb.StoreAppend",
        "type": "Remove Variable Modifier"
      },
      {
        "rightSideLineNumber": 213,
        "description": "Change Variable Type size : int to size : long in method protected initOpen() : void from class org.mapdb.StoreAppend",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 357,
        "description": "Change Variable Type size : int to size : long in method protected get2(recid long, serializer Serializer<A>) : A from class org.mapdb.StoreAppend",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 397,
        "description": "Add Variable Modifier final in variable headSize : int in method protected delete2(recid long, serializer Serializer<A>) : void from class org.mapdb.StoreAppend",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 404,
        "description": "Rename Variable plus : int to headSize : int in method protected delete2(recid long, serializer Serializer<A>) : void from class org.mapdb.StoreAppend",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 423,
        "description": "Add Variable Modifier final in variable headSize : int in method public preallocate() : long from class org.mapdb.StoreAppend",
        "type": "Add Variable Modifier"
      },
      {
        "rightSideLineNumber": 431,
        "description": "Rename Variable plus : int to headSize : int in method public preallocate() : long from class org.mapdb.StoreAppend",
        "type": "Rename Variable"
      }
    ],
    "filePath": "src/main/java/org/mapdb/StoreAppend.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreCached.java",
    "refactorings": [],
    "filePath": "src/main/java/org/mapdb/StoreCached.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreDirect.java",
    "refactorings": [{
      "rightSideLineNumber": 1177,
      "description": "Inline Attribute protected indexPageCRC : boolean in class org.mapdb.StoreDirect",
      "type": "Inline Attribute"
    }],
    "filePath": "src/main/java/org/mapdb/StoreDirect.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "main"
  },
  {
    "fileName": "StoreWAL.java",
    "refactorings": [],
    "filePath": "src/main/java/org/mapdb/StoreWAL.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "main"
  },
  {
    "fileName": "Volume.java",
    "refactorings": [],
    "filePath": "src/main/java/org/mapdb/Volume.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "main"
  },
  {
    "fileName": "DataIOTest.java",
    "refactorings": [],
    "filePath": "src/test/java/org/mapdb/DataIOTest.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreDirectTest.java",
    "refactorings": [],
    "filePath": "src/test/java/org/mapdb/StoreDirectTest.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "test"
  },
  {
    "fileName": "StoreDirectTest2.java",
    "refactorings": [],
    "filePath": "src/test/java/org/mapdb/StoreDirectTest2.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "test"
  },
  {
    "fileName": "VolumeTest.java",
    "refactorings": [],
    "filePath": "src/test/java/org/mapdb/VolumeTest.java",
    "commit": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "repository": "https://github.com/jankotek/MapDB.git",
    "fileType": "test"
  },
  {
    "fileName": "GoRunUtil.java",
    "refactorings": [],
    "filePath": "src/com/goide/runconfig/GoRunUtil.java",
    "commit": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "fileType": "main"
  },
  {
    "fileName": "GoTestRunConfigurationProducerBase.java",
    "refactorings": [{
      "rightSideLineNumber": 53,
      "description": "Extract Method protected isAvailableInModule(module Module) : boolean extracted from protected setupConfigurationFromContext(configuration GoTestRunConfigurationBase, context ConfigurationContext, sourceElement Ref) : boolean in class com.goide.runconfig.testing.GoTestRunConfigurationProducerBase",
      "type": "Extract Method"
    }],
    "filePath": "src/com/goide/runconfig/testing/GoTestRunConfigurationProducerBase.java",
    "commit": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "fileType": "test"
  },
  {
    "fileName": "GocheckRunConfiguration.java",
    "refactorings": [],
    "filePath": "src/com/goide/runconfig/testing/frameworks/gocheck/GocheckRunConfiguration.java",
    "commit": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "fileType": "test"
  },
  {
    "fileName": "GocheckRunConfigurationProducer.java",
    "refactorings": [],
    "filePath": "src/com/goide/runconfig/testing/frameworks/gocheck/GocheckRunConfigurationProducer.java",
    "commit": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "fileType": "test"
  },
  {
    "fileName": "UserException.java",
    "refactorings": [{
      "rightSideLineNumber": 504,
      "description": "Add Parameter logger : Logger in method public build(logger Logger) : UserException from class org.apache.drill.common.exceptions.UserException.Builder",
      "type": "Add Parameter"
    }],
    "filePath": "common/src/main/java/org/apache/drill/common/exceptions/UserException.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "HiveRecordReader.java",
    "refactorings": [],
    "filePath": "contrib/storage-hive/core/src/main/java/org/apache/drill/exec/store/hive/HiveRecordReader.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ListWriters.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/codegen/templates/ListWriters.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "PrintingResultsListener.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/client/PrintingResultsListener.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "AggregateErrorFunctions.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/AggregateErrorFunctions.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentContext.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/ops/FragmentContext.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ViewExpansionContext.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/ops/ViewExpansionContext.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ScanBatch.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/ScanBatch.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "HashAggBatch.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/aggregate/HashAggBatch.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "StreamingAggBatch.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/aggregate/StreamingAggBatch.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "FlattenRecordBatch.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/flatten/FlattenRecordBatch.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ExternalSortBatch.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/physical/impl/xsort/ExternalSortBatch.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "DrillOptiq.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/logical/DrillOptiq.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "DrillSqlWorker.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/DrillSqlWorker.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "SchemaUtilites.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/SchemaUtilites.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateTableHandler.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/CreateTableHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultSqlHandler.java",
    "refactorings": [
      {
        "rightSideLineNumber": 107,
        "description": "Change Attribute Access Modifier package to private in attribute private logger : Logger from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Add Parameter Modifier final in parameter name : String in method protected log(name String, node RelNode, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Add Parameter Modifier final in parameter node : RelNode in method protected log(name String, node RelNode, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Add Parameter logger : Logger in method protected log(name String, node RelNode, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Add Method Modifier static in method protected log(name String, node RelNode, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Add Parameter Modifier final in parameter name : String in method protected log(name String, node Prel, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Add Parameter Modifier final in parameter node : Prel in method protected log(name String, node Prel, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Add Parameter logger : Logger in method protected log(name String, node Prel, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 147,
        "description": "Add Parameter Modifier final in parameter name : String in method protected log(name String, plan PhysicalPlan, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 147,
        "description": "Add Parameter Modifier final in parameter plan : PhysicalPlan in method protected log(name String, plan PhysicalPlan, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter Modifier"
      },
      {
        "rightSideLineNumber": 147,
        "description": "Add Parameter logger : Logger in method protected log(name String, plan PhysicalPlan, logger Logger) : void from class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "type": "Add Parameter"
      }
    ],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/DefaultSqlHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "DescribeTableHandler.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/DescribeTableHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ExplainHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 46,
      "description": "Change Attribute Access Modifier package to private in attribute private logger : Logger from class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
      "type": "Change Attribute Access Modifier"
    }],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/ExplainHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ShowFileHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 43,
      "description": "Change Attribute Access Modifier package to private in attribute private logger : Logger from class org.apache.drill.exec.planner.sql.handlers.ShowFileHandler",
      "type": "Change Attribute Access Modifier"
    }],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/ShowFileHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ShowTablesHandler.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/ShowTablesHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "SqlHandlerUtil.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/SqlHandlerUtil.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ViewHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 43,
      "description": "Change Attribute Access Modifier package to private in attribute private logger : Logger from class org.apache.drill.exec.planner.sql.handlers.ViewHandler",
      "type": "Change Attribute Access Modifier"
    }],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/planner/sql/handlers/ViewHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractRecordBatch.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/record/AbstractRecordBatch.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "BasicServer.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/rpc/BasicServer.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "RpcBus.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/rpc/RpcBus.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryResultHandler.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/rpc/user/QueryResultHandler.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractSchema.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/store/AbstractSchema.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "TimedRunnable.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/store/TimedRunnable.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "WorkspaceSchemaFactory.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/store/dfs/WorkspaceSchemaFactory.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "JSONRecordReader.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/json/JSONRecordReader.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "TextReader.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/store/easy/text/compliant/TextReader.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "ParquetReaderUtility.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/store/parquet/ParquetReaderUtility.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "JsonReader.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/vector/complex/fn/JsonReader.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "Foreman.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/work/foreman/Foreman.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentExecutor.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/main/java/org/apache/drill/exec/work/fragment/FragmentExecutor.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "main"
  },
  {
    "fileName": "TestUserException.java",
    "refactorings": [],
    "filePath": "common/src/test/java/org/apache/drill/common/exceptions/TestUserException.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "test"
  },
  {
    "fileName": "ParquetResultListener.java",
    "refactorings": [],
    "filePath": "exec/java-exec/src/test/java/org/apache/drill/exec/store/parquet/ParquetResultListener.java",
    "commit": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "repository": "https://github.com/apache/drill.git",
    "fileType": "test"
  },
  {
    "fileName": "TcpInboundGateway.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpInboundGateway.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpOutboundGateway.java",
    "refactorings": [
      {
        "rightSideLineNumber": 211,
        "description": "Change Parameter Type connectionFactory : AbstractConnectionFactory to connectionFactory : AbstractClientConnectionFactory in method public setConnectionFactory(connectionFactory AbstractClientConnectionFactory) : void from class org.springframework.integration.ip.tcp.TcpOutboundGateway",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 112,
        "description": "Replace Variable With Attribute singleUseConnection : boolean to isSingleUse : boolean in method protected handleRequestMessage(requestMessage Message<?>) : Object from class org.springframework.integration.ip.tcp.TcpOutboundGateway",
        "type": "Replace Variable With Attribute"
      }
    ],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpOutboundGateway.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpReceivingChannelAdapter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 68,
        "description": "Add Method Annotation @Override in method public onMessage(message Message<?>) : boolean from class org.springframework.integration.ip.tcp.TcpReceivingChannelAdapter",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 210,
        "description": "Add Method Annotation @Override in method public isClientMode() : boolean from class org.springframework.integration.ip.tcp.TcpReceivingChannelAdapter",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 241,
        "description": "Add Method Annotation @Override in method public isClientModeConnected() : boolean from class org.springframework.integration.ip.tcp.TcpReceivingChannelAdapter",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 250,
        "description": "Add Method Annotation @Override in method public retryConnection() : void from class org.springframework.integration.ip.tcp.TcpReceivingChannelAdapter",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 257,
        "description": "Add Method Annotation @Override in method public beforeShutdown() : int from class org.springframework.integration.ip.tcp.TcpReceivingChannelAdapter",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 263,
        "description": "Add Method Annotation @Override in method public afterShutdown() : int from class org.springframework.integration.ip.tcp.TcpReceivingChannelAdapter",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpReceivingChannelAdapter.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpSendingMessageHandler.java",
    "refactorings": [{
      "rightSideLineNumber": 158,
      "description": "Change Return Type void to TcpConnection in method protected doWrite(message Message<?>) : TcpConnection from class org.springframework.integration.ip.tcp.TcpSendingMessageHandler",
      "type": "Change Return Type"
    }],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpSendingMessageHandler.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractClientConnectionFactory.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/AbstractClientConnectionFactory.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractConnectionFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 115,
        "description": "Change Attribute Type connections : List<TcpConnectionSupport> to connections : Map<String,TcpConnectionSupport> in class org.springframework.integration.ip.tcp.connection.AbstractConnectionFactory",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 489,
        "description": "Change Variable Type iterator : Iterator<TcpConnectionSupport> to iterator : Iterator<Entry<String,TcpConnectionSupport>> in method public stop() : void from class org.springframework.integration.ip.tcp.connection.AbstractConnectionFactory",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 794,
        "description": "Change Variable Type iterator : Iterator<TcpConnectionSupport> to iterator : Iterator<Entry<String,TcpConnectionSupport>> in method private removeClosedConnectionsAndReturnOpenConnectionIds() : List<String> from class org.springframework.integration.ip.tcp.connection.AbstractConnectionFactory",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 797,
        "description": "Change Variable Type connection : TcpConnection to connection : TcpConnectionSupport in method private removeClosedConnectionsAndReturnOpenConnectionIds() : List<String> from class org.springframework.integration.ip.tcp.connection.AbstractConnectionFactory",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/AbstractConnectionFactory.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractServerConnectionFactory.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/AbstractServerConnectionFactory.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "CachingClientConnectionFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 154,
      "description": "Inline Method private doClose() : void inlined to public close() : void in class org.springframework.integration.ip.tcp.connection.CachingClientConnectionFactory.CachedConnection",
      "type": "Inline Method"
    }],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "CloseDeferrable.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CloseDeferrable.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "FailoverClientConnectionFactory.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/FailoverClientConnectionFactory.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpConnection.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/TcpConnection.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpConnectionInterceptorSupport.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/TcpConnectionInterceptorSupport.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpConnectionSupport.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/TcpConnectionSupport.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpNetConnection.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/TcpNetConnection.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "TcpNioConnection.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/TcpNioConnection.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "main"
  },
  {
    "fileName": "ParserUnitTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/config/ParserUnitTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "ConnectionToConnectionTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/ConnectionToConnectionTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "SyslogdTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/SyslogdTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "TcpOutboundGatewayTests.java",
    "refactorings": [
      {
        "rightSideLineNumber": 125,
        "description": "Change Variable Type ccf : AbstractConnectionFactory to ccf : AbstractClientConnectionFactory in method public testGoodNetSingle() : void from class org.springframework.integration.ip.tcp.TcpOutboundGatewayTests",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 187,
        "description": "Change Variable Type ccf : AbstractConnectionFactory to ccf : AbstractClientConnectionFactory in method public testGoodNetMultiplex() : void from class org.springframework.integration.ip.tcp.TcpOutboundGatewayTests",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 242,
        "description": "Change Variable Type ccf : AbstractConnectionFactory to ccf : AbstractClientConnectionFactory in method public testGoodNetTimeout() : void from class org.springframework.integration.ip.tcp.TcpOutboundGatewayTests",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 372,
        "description": "Change Parameter Type ccf : AbstractConnectionFactory to ccf : AbstractClientConnectionFactory in method private testGoodNetGWTimeoutGuts(port int, ccf AbstractClientConnectionFactory) : void from class org.springframework.integration.ip.tcp.TcpOutboundGatewayTests",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/TcpOutboundGatewayTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "TcpSendingMessageHandlerTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/TcpSendingMessageHandlerTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "TcpSendingNoSocketTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/TcpSendingNoSocketTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "CachingClientConnectionFactoryTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactoryTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "FailoverClientConnectionFactoryTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/connection/FailoverClientConnectionFactoryTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "TcpNioConnectionTests.java",
    "refactorings": [],
    "filePath": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/connection/TcpNioConnectionTests.java",
    "commit": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "fileType": "test"
  },
  {
    "fileName": "OrcInputFormat.java",
    "refactorings": [
      {
        "rightSideLineNumber": 412,
        "description": "Extract Method package Context(conf Configuration, minSplits int) extracted from package Context(conf Configuration) in class org.apache.hadoop.hive.ql.io.orc.OrcInputFormat.Context",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 993,
        "description": "Extract Method package generateSplitsInfo(conf Configuration, numSplits int) : List<OrcSplit> extracted from package generateSplitsInfo(conf Configuration) : List<OrcSplit> in class org.apache.hadoop.hive.ql.io.orc.OrcInputFormat",
        "type": "Extract Method"
      }
    ],
    "filePath": "ql/src/java/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.java",
    "commit": "https://github.com/apache/hive/commit/5f78f9ef1e6c798849d34cc66721e6c1d9709b6f",
    "repository": "https://github.com/apache/hive.git",
    "fileType": "main"
  },
  {
    "fileName": "TestInputOutputFormat.java",
    "refactorings": [],
    "filePath": "ql/src/test/org/apache/hadoop/hive/ql/io/orc/TestInputOutputFormat.java",
    "commit": "https://github.com/apache/hive/commit/5f78f9ef1e6c798849d34cc66721e6c1d9709b6f",
    "repository": "https://github.com/apache/hive.git",
    "fileType": "test"
  }
]