[
  {
    "fileName": "MigrationExampleActivity.java",
    "refactorings": [
      {
        "description": "Extract Method private showStatus(txt String) : void extracted from private showStatus(realm Realm) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "type": "Extract Method"
      },
      {
        "description": "Parameterize Variable txt : String to txt : String in method private showStatus(txt String) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "type": "Parameterize Variable"
      },
      {
        "description": "Extract Variable config1 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "type": "Extract Variable"
      },
      {
        "description": "Extract Variable config2 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "type": "Extract Variable"
      },
      {
        "description": "Extract Variable config0 : RealmConfiguration in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "type": "Extract Variable"
      },
      {
        "description": "Replace Variable With Attribute realm : Realm to realm : Realm in method protected onCreate(savedInstanceState Bundle) : void from class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "type": "Replace Variable With Attribute"
      }
    ],
    "filePath": "examples/migrationExample/src/main/java/io/realm/examples/realmmigrationexample/MigrationExampleActivity.java",
    "commit": "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "repository": "https://github.com/realm/realm-java.git",
    "fileType": "main"
  },
  {
    "fileName": "Realm.java",
    "refactorings": [{
      "description": "Extract Variable realmMigration : RealmMigration in method public migrateRealm(configuration RealmConfiguration, migration RealmMigration) : void from class io.realm.Realm",
      "type": "Extract Variable"
    }],
    "filePath": "realm/src/main/java/io/realm/Realm.java",
    "commit": "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "repository": "https://github.com/realm/realm-java.git",
    "fileType": "main"
  },
  {
    "fileName": "SetVersionNumberMigration.java",
    "refactorings": [],
    "filePath": "realm/src/main/java/io/realm/internal/migration/SetVersionNumberMigration.java",
    "commit": "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "repository": "https://github.com/realm/realm-java.git",
    "fileType": "main"
  },
  {
    "fileName": "RealmConfigurationTest.java",
    "refactorings": [],
    "filePath": "realm/src/androidTest/java/io/realm/RealmConfigurationTest.java",
    "commit": "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "repository": "https://github.com/realm/realm-java.git",
    "fileType": "test"
  },
  {
    "fileName": "JavaDocExternalFilter.java",
    "refactorings": [
      {
        "description": "Change Attribute Type ourPackageInfoSettings : Trinity<Pattern,Pattern,Boolean> to ourPackageInfoSettings : ParseSettings in class com.intellij.codeInsight.javadoc.JavaDocExternalFilter",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Return Type Trinity<Pattern,Pattern,Boolean> to ParseSettings in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.javadoc.JavaDocExternalFilter",
        "type": "Change Return Type"
      }
    ],
    "filePath": "java/java-impl/src/com/intellij/codeInsight/javadoc/JavaDocExternalFilter.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractExternalFilter.java",
    "refactorings": [
      {
        "description": "Change Variable Type settings : Trinity<Pattern,Pattern,Boolean> to settings : ParseSettings in method protected doBuildFromStream(url String, input Reader, data StringBuilder, searchForEncoding boolean, matchStart boolean) : void from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable useDt : boolean to anchorPresent : boolean in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
        "type": "Rename Variable"
      },
      {
        "description": "Change Return Type Trinity<Pattern,Pattern,Boolean> to ParseSettings in method protected getParseSettings(url String) : ParseSettings from class com.intellij.codeInsight.documentation.AbstractExternalFilter",
        "type": "Change Return Type"
      }
    ],
    "filePath": "platform/lang-impl/src/com/intellij/codeInsight/documentation/AbstractExternalFilter.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "DocumentationManager.java",
    "refactorings": [],
    "filePath": "platform/lang-impl/src/com/intellij/codeInsight/documentation/DocumentationManager.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaExternalDocumentationTest.java",
    "refactorings": [
      {
        "description": "Inline Method private getImageDataFromDocumentationComponent(documentationComponent DocumentationComponent) : byte[] inlined to public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "type": "Inline Method"
      },
      {
        "description": "Extract Method private getDocumentationText(sourceEditorText String) : String extracted from public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private getDataFile(name String) : File extracted from private getJarFile(name String) : VirtualFile in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "type": "Extract Method"
      },
      {
        "description": "Change Variable Type documentationComponent : DocumentationComponent to documentationComponent : MockDocumentationComponent in method private getDocumentationText(sourceEditorText String) : String from class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Move Code from public testImagesInsideJavadocJar() : void to protected setUp() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "type": "Move Code"
      }
    ],
    "filePath": "java/java-tests/testSrc/com/intellij/codeInsight/JavaExternalDocumentationTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "DbClient.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/db/DbClient.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomMeasureDao.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/measure/custom/persistence/CustomMeasureDao.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/measure/custom/persistence/package-info.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomMeasuresWs.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/measure/custom/ws/CustomMeasuresWs.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomMeasuresWsAction.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/measure/custom/ws/CustomMeasuresWsAction.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomMeasuresWsModule.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/measure/custom/ws/CustomMeasuresWsModule.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteAction.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/measure/custom/ws/DeleteAction.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/measure/custom/ws/package-info.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PlatformLevel1.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/platform/platformlevel/PlatformLevel1.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PlatformLevel4.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/platform/platformlevel/PlatformLevel4.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomMeasureDaoTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/measure/custom/persistence/CustomMeasureDaoTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "CustomMeasureTesting.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/measure/custom/persistence/CustomMeasureTesting.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "CustomMeasuresWsModuleTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/measure/custom/ws/CustomMeasuresWsModuleTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "CustomMeasuresWsTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/measure/custom/ws/CustomMeasuresWsTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "DeleteActionTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/measure/custom/ws/DeleteActionTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateActionTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/metric/ws/CreateActionTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "DeleteActionTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/metric/ws/DeleteActionTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "UpdateActionTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/metric/ws/UpdateActionTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "SendIssueNotificationsStep.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/step/SendIssueNotificationsStep.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "NewAlerts.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/event/NewAlerts.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueBulkChangeService.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/IssueBulkChangeService.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueService.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/IssueService.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "ChangesOnMyIssueNotificationDispatcher.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/notification/ChangesOnMyIssueNotificationDispatcher.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DoNotFixNotificationDispatcher.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/notification/DoNotFixNotificationDispatcher.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "MyNewIssuesNotificationDispatcher.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/notification/MyNewIssuesNotificationDispatcher.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "NewIssuesNotificationDispatcher.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/issue/notification/NewIssuesNotificationDispatcher.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultNotificationManager.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/DefaultNotificationManager.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "NotificationCenter.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/NotificationCenter.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "NotificationDispatcher.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/NotificationDispatcher.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "NotificationDispatcherMetadata.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/NotificationDispatcherMetadata.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "NotificationManager.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/NotificationManager.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "NotificationService.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/NotificationService.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "AlertsEmailTemplate.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/email/AlertsEmailTemplate.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "EmailNotificationChannel.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/email/EmailNotificationChannel.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/email/package-info.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/notification/package-info.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PlatformLevel4.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/platform/platformlevel/PlatformLevel4.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "BatchComponents.java",
    "refactorings": [],
    "filePath": "sonar-batch/src/main/java/org/sonar/batch/bootstrap/BatchComponents.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "SendIssueNotificationsStepTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/step/SendIssueNotificationsStepTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NewAlertsTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/event/NewAlertsTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "ChangesOnMyIssueNotificationDispatcherTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/issue/notification/ChangesOnMyIssueNotificationDispatcherTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "DoNotFixNotificationDispatcherTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/issue/notification/DoNotFixNotificationDispatcherTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "MyNewIssuesNotificationDispatcherTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/issue/notification/MyNewIssuesNotificationDispatcherTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NewIssuesNotificationDispatcherTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/issue/notification/NewIssuesNotificationDispatcherTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultNotificationManagerTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/DefaultNotificationManagerTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NotificationCenterTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/NotificationCenterTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NotificationChannelTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/NotificationChannelTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NotificationDispatcherMetadataTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/NotificationDispatcherMetadataTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NotificationDispatcherTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/NotificationDispatcherTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NotificationServiceTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/NotificationServiceTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "NotificationTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/NotificationTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "AlertsEmailTemplateTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/email/AlertsEmailTemplateTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "EmailNotificationChannelTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/notification/email/EmailNotificationChannelTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "FilePublicKeyProvider.java",
    "refactorings": [
      {
        "description": "Extract Method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair extracted from public loadKeys() : Iterable<KeyPair> in class org.crsh.auth.FilePublicKeyProvider",
        "type": "Extract Method"
      },
      {
        "description": "Parameterize Variable keyPair : PEMKeyPair to pemKeyPair : PEMKeyPair in method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair from class org.crsh.auth.FilePublicKeyProvider",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "connectors/ssh/src/main/java/org/crsh/auth/FilePublicKeyProvider.java",
    "commit": "https://github.com/crashub/crash/commit/2801269c7e47bd6e243612654a74cee809d20959",
    "repository": "https://github.com/crashub/crash.git",
    "fileType": "main"
  },
  {
    "fileName": "FilePublicKeyProviderTest.java",
    "refactorings": [],
    "filePath": "connectors/ssh/src/test/java/org/crsh/auth/FilePublicKeyProviderTest.java",
    "commit": "https://github.com/crashub/crash/commit/2801269c7e47bd6e243612654a74cee809d20959",
    "repository": "https://github.com/crashub/crash.git",
    "fileType": "test"
  },
  {
    "fileName": "Activator.java",
    "refactorings": [],
    "filePath": "net.jeeeyul.eclipse.themes.test.e4app/src/net/jeeeyul/eclipse/themes/test/e4app/Activator.java",
    "commit": "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "repository": "https://github.com/jeeeyul/eclipse-themes.git",
    "fileType": "test"
  },
  {
    "fileName": "AboutHandler.java",
    "refactorings": [],
    "filePath": "net.jeeeyul.eclipse.themes.test.e4app/src/net/jeeeyul/eclipse/themes/test/e4app/handlers/AboutHandler.java",
    "commit": "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "repository": "https://github.com/jeeeyul/eclipse-themes.git",
    "fileType": "test"
  },
  {
    "fileName": "SplashHandler.java",
    "refactorings": [],
    "filePath": "net.jeeeyul.eclipse.themes.test.e4app/src/net/jeeeyul/eclipse/themes/test/e4app/handlers/SplashHandler.java",
    "commit": "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "repository": "https://github.com/jeeeyul/eclipse-themes.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHandler.java",
    "refactorings": [],
    "filePath": "net.jeeeyul.eclipse.themes.test.e4app/src/net/jeeeyul/eclipse/themes/test/e4app/handlers/TestHandler.java",
    "commit": "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "repository": "https://github.com/jeeeyul/eclipse-themes.git",
    "fileType": "test"
  },
  {
    "fileName": "TestView.java",
    "refactorings": [],
    "filePath": "net.jeeeyul.eclipse.themes.test.e4app/src/net/jeeeyul/eclipse/themes/test/e4app/views/TestView.java",
    "commit": "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "repository": "https://github.com/jeeeyul/eclipse-themes.git",
    "fileType": "test"
  },
  {
    "fileName": "HttpBase.java",
    "refactorings": [
      {
        "description": "Extract Method protected resolveFormEncoding() : String extracted from protected formBuffer() : Buffer in class jodd.http.HttpBase",
        "type": "Extract Method"
      },
      {
        "description": "Extract Variable utf8Stirng : String in method protected formBuffer() : Buffer from class jodd.http.HttpBase",
        "type": "Extract Variable"
      }
    ],
    "filePath": "jodd-http/src/main/java/jodd/http/HttpBase.java",
    "commit": "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "repository": "https://github.com/oblac/jodd.git",
    "fileType": "main"
  },
  {
    "fileName": "Echo2Servlet.java",
    "refactorings": [{
      "description": "Add Class Annotation @MultipartConfig in class jodd.http.Echo2Servlet",
      "type": "Add Class Annotation"
    }],
    "filePath": "jodd-http/src/test/java/jodd/http/Echo2Servlet.java",
    "commit": "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "repository": "https://github.com/oblac/jodd.git",
    "fileType": "test"
  },
  {
    "fileName": "EchoServlet.java",
    "refactorings": [],
    "filePath": "jodd-http/src/test/java/jodd/http/EchoServlet.java",
    "commit": "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "repository": "https://github.com/oblac/jodd.git",
    "fileType": "test"
  },
  {
    "fileName": "EncodingTest.java",
    "refactorings": [],
    "filePath": "jodd-http/src/test/java/jodd/http/EncodingTest.java",
    "commit": "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "repository": "https://github.com/oblac/jodd.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeDescription.java",
    "refactorings": [
      {
        "description": "Extract Attribute public ARRAY_INTERFACES : GenericTypeList in class net.bytebuddy.description.type.TypeDescription",
        "type": "Extract Attribute"
      },
      {
        "description": "Change Attribute Access Modifier private to public in attribute public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Remove Attribute Modifier final in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
        "type": "Remove Attribute Modifier"
      },
      {
        "description": "Remove Attribute Modifier static in attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection",
        "type": "Remove Attribute Modifier"
      },
      {
        "description": "Pull Up Attribute private ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to public ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription",
        "type": "Pull Up Attribute"
      }
    ],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/description/type/TypeDescription.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "TypeList.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/description/type/TypeList.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "GenericTypeDescription.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/description/type/generic/GenericTypeDescription.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "GenericTypeList.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/description/type/generic/GenericTypeList.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "DynamicType.java",
    "refactorings": [
      {
        "description": "Change Attribute Type returnType : TypeDescription to returnType : GenericTypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Type parameterTypes : List<TypeDescription> to parameterTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Type exceptionTypes : List<TypeDescription> to exceptionTypes : List<GenericTypeDescription> in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveReturnType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveParameterTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method protected resolveExceptionTypes(instrumentedType TypeDescription) : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type TypeDescription to GenericTypeDescription in method public getReturnType() : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getParameterTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type List<TypeDescription> to List<GenericTypeDescription> in method public getExceptionTypes() : List<GenericTypeDescription> from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type returnType : TypeDescription to returnType : GenericTypeDescription in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type parameterTypes : List<? extends TypeDescription> to parameterTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type exceptionTypes : List<? extends TypeDescription> to exceptionTypes : List<? extends GenericTypeDescription> in method public MethodToken(internalName String, returnType GenericTypeDescription, parameterTypes List<? extends GenericTypeDescription>, exceptionTypes List<? extends GenericTypeDescription>, modifiers int) from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Return Type TypeDescription to GenericTypeDescription in method protected resolveFieldType(instrumentedType TypeDescription) : GenericTypeDescription from class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken",
        "type": "Change Return Type"
      }
    ],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/DynamicType.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "TargetType.java",
    "refactorings": [
      {
        "description": "Rename Variable resolved : List<GenericTypeDescription> to substituted : List<GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Parameter typeList : List<? extends GenericTypeDescription> to typeDescriptions : List<? extends GenericTypeDescription> in method public resolve(typeDescriptions List<? extends GenericTypeDescription>, substitute TypeDescription) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
        "type": "Rename Parameter"
      },
      {
        "description": "Remove Parameter substitutionMatcher : ElementMatcher<? super TypeDescription> in method public resolve(typeList List<? extends GenericTypeDescription>, substitute TypeDescription, substitutionMatcher ElementMatcher<? super TypeDescription>) : GenericTypeList from class net.bytebuddy.dynamic.TargetType",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/TargetType.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "InstrumentedType.java",
    "refactorings": [
      {
        "description": "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private FieldToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, fieldDescription FieldDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.FieldToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.TypeVariableToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected ParameterToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, parameterDescription ParameterDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken.ParameterToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private MethodToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, methodDescription MethodDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.MethodToken",
        "type": "Rename Parameter"
      },
      {
        "description": "Extract Variable substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method protected AbstractBase(loadedTypeInitializer LoadedTypeInitializer, typeInitializer TypeInitializer, matcher ElementMatcher<? super TypeDescription>, typeVariables List<? extends GenericTypeDescription>, fieldDescriptions List<? extends FieldDescription>, methodDescriptions List<? extends MethodDescription>) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase",
        "type": "Extract Variable"
      },
      {
        "description": "Rename Parameter matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type matcher : ElementMatcher<? super TypeDescription> to substitutor : GenericTypeDescription.Visitor<GenericTypeDescription> in method private TypeVariableToken(substitutor GenericTypeDescription.Visitor<GenericTypeDescription>, typeVariable GenericTypeDescription) from class net.bytebuddy.dynamic.scaffold.InstrumentedType.AbstractBase.TypeVariableToken",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/scaffold/InstrumentedType.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "TypeWriter.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/scaffold/TypeWriter.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "InlineInstrumentedType.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/dynamic/scaffold/inline/InlineInstrumentedType.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "FieldAccessor.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/implementation/FieldAccessor.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "FieldProxy.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bind/annotation/FieldProxy.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "Super.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bind/annotation/Super.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "CollectionRawTypeMatcher.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/matcher/CollectionRawTypeMatcher.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "ElementMatchers.java",
    "refactorings": [{
      "description": "Change Parameter Type exceptionMatcher : ElementMatcher<? super List<? extends TypeDescription>> to exceptionMatcher : ElementMatcher<? super Iterable<? extends TypeDescription>> in method public declaresException(exceptionMatcher ElementMatcher<? super Iterable<? extends TypeDescription>>) : ElementMatcher.Junction<T> from class net.bytebuddy.matcher.ElementMatchers",
      "type": "Change Parameter Type"
    }],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/matcher/ElementMatchers.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "TypePool.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractGenericTypeDescriptionTest.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/test/java/net/bytebuddy/description/type/generic/AbstractGenericTypeDescriptionTest.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "test"
  },
  {
    "fileName": "DynamicTypeBuilderTokenTest.java",
    "refactorings": [
      {
        "description": "Change Attribute Type parameterTypes : TypeList to parameterTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Type exceptionTypes : TypeList to exceptionTypes : GenericTypeList in class net.bytebuddy.dynamic.DynamicTypeBuilderTokenTest",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "byte-buddy-dep/src/test/java/net/bytebuddy/dynamic/DynamicTypeBuilderTokenTest.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "test"
  },
  {
    "fileName": "TargetTypeTest.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/test/java/net/bytebuddy/dynamic/TargetTypeTest.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractInstrumentedTypeTest.java",
    "refactorings": [],
    "filePath": "byte-buddy-dep/src/test/java/net/bytebuddy/dynamic/scaffold/AbstractInstrumentedTypeTest.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "test"
  },
  {
    "fileName": "InlineInstrumentedTypeTest.java",
    "refactorings": [{
      "description": "Rename Attribute targetType : TypeDescription to levelType : TypeDescription in class net.bytebuddy.dynamic.scaffold.inline.InlineInstrumentedTypeTest",
      "type": "Rename Attribute"
    }],
    "filePath": "byte-buddy-dep/src/test/java/net/bytebuddy/dynamic/scaffold/inline/InlineInstrumentedTypeTest.java",
    "commit": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "repository": "https://github.com/raphw/byte-buddy.git",
    "fileType": "test"
  },
  {
    "fileName": "ChannelProcessor.java",
    "refactorings": [],
    "filePath": "quasar-reactive-streams/src/main/java/co/paralleluniverse/strands/channels/reactivestreams/ChannelProcessor.java",
    "commit": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "repository": "https://github.com/puniverse/quasar.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelPublisher.java",
    "refactorings": [
      {
        "description": "Extract Method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void extracted from public subscribe(s Subscriber<? super T>) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
        "type": "Extract Method"
      },
      {
        "description": "Change Variable Type e : Exception to t : Throwable in method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void from class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
        "type": "Change Variable Type"
      },
      {
        "description": "Parameterize Variable e : Exception to t : Throwable in method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void from class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
        "type": "Parameterize Variable"
      }
    ],
    "filePath": "quasar-reactive-streams/src/main/java/co/paralleluniverse/strands/channels/reactivestreams/ChannelPublisher.java",
    "commit": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "repository": "https://github.com/puniverse/quasar.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelSubscriber.java",
    "refactorings": [{
      "description": "Extract Method protected failedSubscribe(s Subscription) : void extracted from public onSubscribe(s Subscription) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelSubscriber",
      "type": "Extract Method"
    }],
    "filePath": "quasar-reactive-streams/src/main/java/co/paralleluniverse/strands/channels/reactivestreams/ChannelSubscriber.java",
    "commit": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "repository": "https://github.com/puniverse/quasar.git",
    "fileType": "main"
  },
  {
    "fileName": "ReactiveStreams.java",
    "refactorings": [],
    "filePath": "quasar-reactive-streams/src/main/java/co/paralleluniverse/strands/channels/reactivestreams/ReactiveStreams.java",
    "commit": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "repository": "https://github.com/puniverse/quasar.git",
    "fileType": "main"
  },
  {
    "fileName": "ChannelProcessorTest.java",
    "refactorings": [],
    "filePath": "quasar-reactive-streams/src/test/java/co/paralleluniverse/strands/channels/reactivestreams/ChannelProcessorTest.java",
    "commit": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "repository": "https://github.com/puniverse/quasar.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHelper.java",
    "refactorings": [],
    "filePath": "quasar-reactive-streams/src/test/java/co/paralleluniverse/strands/channels/reactivestreams/TestHelper.java",
    "commit": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "repository": "https://github.com/puniverse/quasar.git",
    "fileType": "test"
  },
  {
    "fileName": "ResolvedArtifact.java",
    "refactorings": [],
    "filePath": "subprojects/core/src/main/groovy/org/gradle/api/artifacts/ResolvedArtifact.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ComponentArtifactIdentifier.java",
    "refactorings": [],
    "filePath": "subprojects/core/src/main/groovy/org/gradle/api/artifacts/component/ComponentArtifactIdentifier.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ArtifactDependencyResolver.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ArtifactDependencyResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ConfigurationResolver.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ConfigurationResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultResolvedArtifact.java",
    "refactorings": [{
      "description": "Add Parameter artifactId : ComponentArtifactIdentifier in method public DefaultResolvedArtifact(owner ResolvedModuleVersion, artifact IvyArtifactName, artifactId ComponentArtifactIdentifier, artifactSource Factory<File>) from class org.gradle.api.internal.artifacts.DefaultResolvedArtifact",
      "type": "Add Parameter"
    }],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/DefaultResolvedArtifact.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultResolverResults.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/DefaultResolverResults.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ResolverResults.java",
    "refactorings": [{
      "description": "Change Type Declaration Kind class to interface in type org.gradle.api.internal.artifacts.ResolverResults",
      "type": "Change Type Declaration Kind"
    }],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ResolverResults.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultConfiguration.java",
    "refactorings": [{
      "description": "Change Attribute Type cachedResolverResults : ResolverResults to cachedResolverResults : DefaultResolverResults in class org.gradle.api.internal.artifacts.configurations.DefaultConfiguration",
      "type": "Change Attribute Type"
    }],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/configurations/DefaultConfiguration.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheLockingArtifactDependencyResolver.java",
    "refactorings": [
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.CacheLockingArtifactDependencyResolver",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.CacheLockingArtifactDependencyResolver",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/CacheLockingArtifactDependencyResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultConfigurationResolver.java",
    "refactorings": [
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(configuration ConfigurationInternal, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.DefaultConfigurationResolver",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/DefaultConfigurationResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ErrorHandlingArtifactDependencyResolver.java",
    "refactorings": [
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingArtifactDependencyResolver",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ErrorHandlingArtifactDependencyResolver",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/ErrorHandlingArtifactDependencyResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "SelfResolvingDependencyResolver.java",
    "refactorings": [
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.SelfResolvingDependencyResolver",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(contextInternal ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.SelfResolvingDependencyResolver",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/SelfResolvingDependencyResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ShortcircuitEmptyConfigsArtifactDependencyResolver.java",
    "refactorings": [
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ShortcircuitEmptyConfigsArtifactDependencyResolver",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.ShortcircuitEmptyConfigsArtifactDependencyResolver",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/ShortcircuitEmptyConfigsArtifactDependencyResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "InMemoryArtifactsCache.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/ivyresolve/memcache/InMemoryArtifactsCache.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultDependencyResolver.java",
    "refactorings": [
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolve(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type results : ResolverResults to results : DefaultResolverResults in method public resolveArtifacts(resolveContext ResolveContext, repositories List<? extends ResolutionAwareRepository>, metadataHandler GlobalDependencyResolutionRules, results DefaultResolverResults) : void from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/DefaultDependencyResolver.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractArtifactSet.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/graph/AbstractArtifactSet.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ConfigurationArtifactSet.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/graph/ConfigurationArtifactSet.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DependencyArtifactSet.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/graph/DependencyArtifactSet.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ResolvedConfigurationDependencyGraphVisitor.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/graph/ResolvedConfigurationDependencyGraphVisitor.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ResolvedArtifactResults.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/oldresult/ResolvedArtifactResults.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ResolvedArtifactsContainer.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/api/internal/artifacts/ivyservice/resolveengine/result/ResolvedArtifactsContainer.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ModuleComponentArtifactIdentifier.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/internal/component/external/model/ModuleComponentArtifactIdentifier.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalComponentArtifactIdentifier.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/internal/component/local/model/LocalComponentArtifactIdentifier.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ComponentArtifactMetaData.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/internal/component/model/ComponentArtifactMetaData.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ArtifactNotFoundException.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/internal/resolve/ArtifactNotFoundException.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "ArtifactResolveException.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/internal/resolve/ArtifactResolveException.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "BuildableArtifactResolveResult.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/internal/resolve/result/BuildableArtifactResolveResult.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultBuildableArtifactResolveResult.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/main/java/org/gradle/internal/resolve/result/DefaultBuildableArtifactResolveResult.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaLanguagePlugin.java",
    "refactorings": [
      {
        "description": "Change Parameter Type resolverResults : ResolverResults to resolverResults : DefaultResolverResults in method public execute(resolverResults DefaultResolverResults) : void from class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath.assertResolved.resolve.new Action<DefaultResolverResults>",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type onResolve : Action<ResolverResults> to onResolve : Action<DefaultResolverResults> in method public resolve(resolveContext ResolveContext, onResolve Action<DefaultResolverResults>) : void from class org.gradle.language.java.plugins.JavaLanguagePlugin.DependencyResolvingClasspath",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "subprojects/language-java/src/main/java/org/gradle/language/java/plugins/JavaLanguagePlugin.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultResolvedDependencyTest.java",
    "refactorings": [],
    "filePath": "subprojects/dependency-management/src/test/groovy/org/gradle/api/internal/artifacts/DefaultResolvedDependencyTest.java",
    "commit": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "repository": "https://github.com/gradle/gradle.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateTestAction.java",
    "refactorings": [{
      "description": "Inline Method private checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>, processed Set<Module>) : void inlined to protected checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>) : void in class com.intellij.testIntegration.createTest.CreateTestAction",
      "type": "Inline Method"
    }],
    "filePath": "java/java-impl/src/com/intellij/testIntegration/createTest/CreateTestAction.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/04397f41107bd6de41b31d45a4e8e2ed65628bbe",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "UnnecessaryBoxingInspection.java",
    "refactorings": [{
      "description": "Extract Method private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean extracted from private canBeUnboxed(expression PsiExpression) : boolean in class com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor",
      "type": "Extract Method"
    }],
    "filePath": "plugins/InspectionGadgets/InspectionGadgetsAnalysis/src/com/siyeh/ig/migration/UnnecessaryBoxingInspection.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "ExpressionUtils.java",
    "refactorings": [],
    "filePath": "plugins/InspectionGadgets/InspectionGadgetsAnalysis/src/com/siyeh/ig/psiutils/ExpressionUtils.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "SwitchUtils.java",
    "refactorings": [],
    "filePath": "plugins/InspectionGadgets/InspectionGadgetsAnalysis/src/com/siyeh/ig/psiutils/SwitchUtils.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "UnnecessaryBoxing.java",
    "refactorings": [],
    "filePath": "plugins/InspectionGadgets/test/com/siyeh/igtest/migration/unnecessary_boxing/UnnecessaryBoxing.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "PersistComponentsStep.java",
    "refactorings": [
      {
        "description": "Add Parameter system2 : System2 in method public PersistComponentsStep(dbClient DbClient, treeRootHolder TreeRootHolder, reportReader BatchReportReader, dbIdsRepository DbIdsRepository, system2 System2) from class org.sonar.server.computation.step.PersistComponentsStep",
        "type": "Add Parameter"
      },
      {
        "description": "Remove Method Modifier static in method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
        "type": "Move Method"
      }
    ],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/step/PersistComponentsStep.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PersistComponentsStepTest.java",
    "refactorings": [{
      "description": "Change Attribute Type now : long to now : Date in class org.sonar.server.computation.step.PersistComponentsStepTest",
      "type": "Change Attribute Type"
    }],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/step/PersistComponentsStepTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "DynamicConnectionPool.java",
    "refactorings": [],
    "filePath": "driver-core/src/main/java/com/datastax/driver/core/DynamicConnectionPool.java",
    "commit": "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "PoolingOptions.java",
    "refactorings": [
      {
        "description": "Rename Attribute DEFAULT_MAX_REQUESTS_PER_CONNECTION : int to DEFAULT_NEW_CONNECTION_THRESHOLD : int in class com.datastax.driver.core.PoolingOptions",
        "type": "Rename Attribute"
      },
      {
        "description": "Rename Attribute DEFAULT_MAX_REQUESTS_PER_HOST_LOCAL : int to DEFAULT_MAX_REQUESTS_PER_CONNECTION_LOCAL : int in class com.datastax.driver.core.PoolingOptions",
        "type": "Rename Attribute"
      },
      {
        "description": "Rename Attribute DEFAULT_MAX_REQUESTS_PER_HOST_REMOTE : int to DEFAULT_MAX_REQUESTS_PER_CONNECTION_REMOTE : int in class com.datastax.driver.core.PoolingOptions",
        "type": "Rename Attribute"
      },
      {
        "description": "Extract Method public getNewConnectionThreshold(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method public getMaxRequestsPerConnection(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
        "type": "Extract Method"
      },
      {
        "description": "Rename Parameter newMaxSimultaneousRequests : int to newValue : int in method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
        "type": "Rename Parameter"
      },
      {
        "description": "Add Method Annotation @Deprecated in method public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int from class com.datastax.driver.core.PoolingOptions",
        "type": "Add Method Annotation"
      },
      {
        "description": "Add Method Annotation @Deprecated in method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
        "type": "Add Method Annotation"
      },
      {
        "description": "Remove Method Modifier synchronized in method public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Add Method Annotation @Deprecated in method public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int from class com.datastax.driver.core.PoolingOptions",
        "type": "Add Method Annotation"
      },
      {
        "description": "Add Method Annotation @Deprecated in method public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions from class com.datastax.driver.core.PoolingOptions",
        "type": "Add Method Annotation"
      },
      {
        "description": "Rename Attribute maxSimultaneousRequestsPerConnection : int[] to newConnectionThreshold : int[] in class com.datastax.driver.core.PoolingOptions",
        "type": "Rename Attribute"
      },
      {
        "description": "Rename Attribute maxSimultaneousRequestsPerHostLocal : int to maxRequestsPerConnectionLocal : int in class com.datastax.driver.core.PoolingOptions",
        "type": "Rename Attribute"
      },
      {
        "description": "Rename Attribute maxSimultaneousRequestsPerHostRemote : int to maxRequestsPerConnectionRemote : int in class com.datastax.driver.core.PoolingOptions",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "driver-core/src/main/java/com/datastax/driver/core/PoolingOptions.java",
    "commit": "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "SingleConnectionPool.java",
    "refactorings": [],
    "filePath": "driver-core/src/main/java/com/datastax/driver/core/SingleConnectionPool.java",
    "commit": "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "Stress.java",
    "refactorings": [],
    "filePath": "driver-examples/stress/src/main/java/com/datastax/driver/stress/Stress.java",
    "commit": "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "SingleConnectionPoolTest.java",
    "refactorings": [],
    "filePath": "driver-core/src/test/java/com/datastax/driver/core/SingleConnectionPoolTest.java",
    "commit": "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "AnnotationMetadataSourceProcessorImpl.java",
    "refactorings": [
      {
        "description": "Extract Method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void extracted from public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) in class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void extracted from public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) in class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "type": "Extract Method"
      },
      {
        "description": "Remove Variable Modifier final in variable clazz : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "type": "Remove Variable Modifier"
      },
      {
        "description": "Parameterize Variable clazz : Class to annotatedClass : Class in method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "type": "Parameterize Variable"
      },
      {
        "description": "Parameterize Variable annotateClass : Class to annotatedClass : Class in method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "type": "Parameterize Variable"
      },
      {
        "description": "Rename Variable clazz : Class to annotatedClass : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable annotateClass : Class to annotatedClass : Class in method public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) from class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "type": "Rename Variable"
      }
    ],
    "filePath": "hibernate-core/src/main/java/org/hibernate/boot/model/source/internal/annotations/AnnotationMetadataSourceProcessorImpl.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityNonEntityTest.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/entitynonentity/EntityNonEntityTest.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "WordCount.java",
    "refactorings": [],
    "filePath": "examples/hadoop_word_count/src/WordCount.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "WordCountCounters.java",
    "refactorings": [],
    "filePath": "examples/hadoop_word_count/src/WordCountCounters.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "WordCountSetup.java",
    "refactorings": [],
    "filePath": "examples/hadoop_word_count/src/WordCountSetup.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractColumnFamilyInputFormat.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/AbstractColumnFamilyInputFormat.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "BulkOutputFormat.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/BulkOutputFormat.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "BulkRecordWriter.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/BulkRecordWriter.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ColumnFamilyInputFormat.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/ColumnFamilyInputFormat.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ColumnFamilyOutputFormat.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/ColumnFamilyOutputFormat.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ColumnFamilyRecordReader.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordReader.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "ColumnFamilyRecordWriter.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CqlBulkRecordWriter.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/cql3/CqlBulkRecordWriter.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CqlInputFormat.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/cql3/CqlInputFormat.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CqlOutputFormat.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/cql3/CqlOutputFormat.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CqlRecordWriter.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/cql3/CqlRecordWriter.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CassandraStorage.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/hadoop/pig/CassandraStorage.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "PigTestBase.java",
    "refactorings": [
      {
        "description": "Change Variable Type client : Cassandra.Client to client : Session in method protected executeCQLStatements(statements String[]) : void from class org.apache.cassandra.pig.PigTestBase",
        "type": "Change Variable Type"
      },
      {
        "description": "Remove Thrown Exception Type TException in method protected executeCQLStatements(statements String[]) : void from class org.apache.cassandra.pig.PigTestBase",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Change Return Type Cassandra.Client to Session in method protected getClient() : Session from class org.apache.cassandra.pig.PigTestBase",
        "type": "Change Return Type"
      },
      {
        "description": "Remove Thrown Exception Type TTransportException in method protected getClient() : Cassandra.Client from class org.apache.cassandra.pig.PigTestBase",
        "type": "Remove Thrown Exception Type"
      }
    ],
    "filePath": "test/pig/org/apache/cassandra/pig/PigTestBase.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "ThriftColumnFamilyDataTypeTest.java",
    "refactorings": [
      {
        "description": "Remove Thrown Exception Type TException in method public setup() : void from class org.apache.cassandra.pig.ThriftColumnFamilyDataTypeTest",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Change Variable Type column : Tuple to column : Object in method public testCassandraStorageDataType() : void from class org.apache.cassandra.pig.ThriftColumnFamilyDataTypeTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "test/pig/org/apache/cassandra/pig/ThriftColumnFamilyDataTypeTest.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "ThriftColumnFamilyTest.java",
    "refactorings": [
      {
        "description": "Rename Method public testCassandraStorageSchema() : void renamed to public testCqlNativeStorageSchema() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageFullCopy() : void renamed to public testCqlNativeStorageFullCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageSingleTupleCopy() : void renamed to public testCqlNativeStorageSingleTupleCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageBagOnlyCopy() : void renamed to public testCqlNativeStorageBagOnlyCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageFilter() : void renamed to public testCqlNativeStorageFilter() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageJoin() : void renamed to public testCqlNativeStorageJoin() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageCounterCF() : void renamed to public testCqlNativeStorageCounterCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageCompositeColumnCF() : void renamed to public testCqlNativeStorageCompositeColumnCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testCassandraStorageCompositeKeyCF() : void renamed to public testCqlNativeStorageCompositeKeyCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Method"
      },
      {
        "description": "Remove Thrown Exception Type TException in method public setup() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Change Variable Type got : ColumnOrSuperColumn to row : Row in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type client : Cassandra.Client to client : Session in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable got : ColumnOrSuperColumn to row : Row in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Rename Variable"
      },
      {
        "description": "Remove Thrown Exception Type TException in method private getColumnValue(ks String, cf String, colName String, key String, validator String) : String from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Remove Thrown Exception Type TException in method public testCassandraStorageFullCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Remove Thrown Exception Type TException in method public testCassandraStorageSingleTupleCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Remove Thrown Exception Type TException in method public testCassandraStorageBagOnlyCopy() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Remove Thrown Exception Type TException in method public testCassandraStorageFilter() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Remove Thrown Exception Type"
      },
      {
        "description": "Inline Variable column : String in method public testCassandraStorageJoin() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Inline Variable"
      },
      {
        "description": "Inline Variable column : String in method public testCassandraStorageJoin() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Inline Variable"
      },
      {
        "description": "Inline Variable key : Tuple in method public testCassandraStorageCompositeKeyCF() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Inline Variable"
      },
      {
        "description": "Inline Variable key : Tuple in method public testCassandraStorageCompositeKeyCF() : void from class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "type": "Inline Variable"
      }
    ],
    "filePath": "test/pig/org/apache/cassandra/pig/ThriftColumnFamilyTest.java",
    "commit": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "SnapshotDao.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/component/db/SnapshotDao.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PeriodsHolder.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/period/PeriodsHolder.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PeriodsHolderImpl.java",
    "refactorings": [
      {
        "description": "Change Attribute Type periods : List<Period> to periods : ImmutableList<Period> in class org.sonar.server.computation.period.PeriodsHolderImpl",
        "type": "Change Attribute Type"
      },
      {
        "description": "Add Attribute Annotation @CheckForNull in attribute private periods : ImmutableList<Period> from class org.sonar.server.computation.period.PeriodsHolderImpl",
        "type": "Add Attribute Annotation"
      }
    ],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/period/PeriodsHolderImpl.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "FeedPeriodsStep.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/step/FeedPeriodsStep.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PersistComponentsStep.java",
    "refactorings": [
      {
        "description": "Rename Class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent renamed to org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
        "type": "Rename Class"
      },
      {
        "description": "Change Variable Type persisComponent : PersisComponent to persistComponentExecutor : PersistComponentExecutor in method public execute() : void from class org.sonar.server.computation.step.PersistComponentsStep",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable persisComponent : PersisComponent to persistComponentExecutor : PersistComponentExecutor in method public execute() : void from class org.sonar.server.computation.step.PersistComponentsStep",
        "type": "Rename Variable"
      },
      {
        "description": "Change Method Access Modifier private to public in method public recursivelyProcessComponent(component Component, lastModule ComponentDto) : void from class org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/step/PersistComponentsStep.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "QualityGateVerifier.java",
    "refactorings": [
      {
        "description": "Remove Parameter resourceCache : BatchComponentCache in method public QualityGateVerifier(qualityGate QualityGate, resourceCache BatchComponentCache, periods Periods, i18n I18n, durations Durations) from class org.sonar.batch.qualitygate.QualityGateVerifier",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter periods : Periods in method public QualityGateVerifier(qualityGate QualityGate, resourceCache BatchComponentCache, periods Periods, i18n I18n, durations Durations) from class org.sonar.batch.qualitygate.QualityGateVerifier",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "sonar-batch/src/main/java/org/sonar/batch/qualitygate/QualityGateVerifier.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "SnapshotMapper.java",
    "refactorings": [],
    "filePath": "sonar-core/src/main/java/org/sonar/core/component/db/SnapshotMapper.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "SnapshotQuery.java",
    "refactorings": [],
    "filePath": "sonar-core/src/main/java/org/sonar/core/component/db/SnapshotQuery.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "SnapshotDaoTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/component/db/SnapshotDaoTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "PeriodsHolderImplTest.java",
    "refactorings": [{
      "description": "Rename Method public fail_to_get_periods_if_not_initialized() : void renamed to public get_periods_throws_illegal_state_exception_if_not_initialized() : void in class org.sonar.server.computation.period.PeriodsHolderImplTest",
      "type": "Rename Method"
    }],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/period/PeriodsHolderImplTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "PeriodsHolderRule.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/period/PeriodsHolderRule.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "PersistComponentsStepTest.java",
    "refactorings": [{
      "description": "Rename Method public not_update_create_at() : void renamed to public do_not_update_created_at_on_existing_component() : void in class org.sonar.server.computation.step.PersistComponentsStepTest",
      "type": "Rename Method"
    }],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/step/PersistComponentsStepTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "PersistSnapshotsStepTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/step/PersistSnapshotsStepTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "QualityGateVerifierTest.java",
    "refactorings": [],
    "filePath": "sonar-batch/src/test/java/org/sonar/batch/qualitygate/QualityGateVerifierTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "SnapshotQueryTest.java",
    "refactorings": [],
    "filePath": "sonar-core/src/test/java/org/sonar/core/component/db/SnapshotQueryTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "PersistComponentsStep.java",
    "refactorings": [
      {
        "description": "Add Parameter system2 : System2 in method public PersistComponentsStep(dbClient DbClient, treeRootHolder TreeRootHolder, reportReader BatchReportReader, dbIdsRepository DbIdsRepository, system2 System2) from class org.sonar.server.computation.step.PersistComponentsStep",
        "type": "Add Parameter"
      },
      {
        "description": "Remove Method Modifier static in method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
        "type": "Move Method"
      }
    ],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/step/PersistComponentsStep.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "PersistComponentsStepTest.java",
    "refactorings": [{
      "description": "Change Attribute Type now : long to now : Date in class org.sonar.server.computation.step.PersistComponentsStepTest",
      "type": "Change Attribute Type"
    }],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/step/PersistComponentsStepTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "ExistsFieldQueryExtension.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "ExistsQueryBuilder.java",
    "refactorings": [
      {
        "description": "Encapsulate Attribute private name : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
        "type": "Encapsulate Attribute"
      },
      {
        "description": "Add Attribute Modifier final in attribute private name : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
        "type": "Add Attribute Modifier"
      },
      {
        "description": "Encapsulate Attribute private queryName : String from class org.elasticsearch.index.query.ExistsQueryBuilder",
        "type": "Encapsulate Attribute"
      }
    ],
    "filePath": "core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "ExistsQueryParser.java",
    "refactorings": [
      {
        "description": "Rename Method public parse(parseContext QueryParseContext) : Query renamed to public fromXContent(parseContext QueryParseContext) : QueryBuilder in class org.elasticsearch.index.query.ExistsQueryParser",
        "type": "Rename Method"
      },
      {
        "description": "Change Return Type Query to QueryBuilder in method public fromXContent(parseContext QueryParseContext) : QueryBuilder from class org.elasticsearch.index.query.ExistsQueryParser",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/main/java/org/elasticsearch/index/query/ExistsQueryParser.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "GeoShapeQueryParser.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/query/GeoShapeQueryParser.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseQueryTestCase.java",
    "refactorings": [{
      "description": "Change Variable Type deserializedQuery : QB to deserializedQuery : QueryBuilder in method public testSerialization() : void from class org.elasticsearch.index.query.BaseQueryTestCase",
      "type": "Change Variable Type"
    }],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/BaseQueryTestCase.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "BoolQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/BoolQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "ExistsQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "IdsQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/IdsQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "LimitQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/LimitQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "MatchAllQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/MatchAllQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "RangeQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "SpanTermQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/SpanTermQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "TermQueryBuilderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/TermQueryBuilderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "IndexService.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/IndexService.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "EngineConfig.java",
    "refactorings": [
      {
        "description": "Rename Method public getMergePolicyProvider() : MergePolicyProvider renamed to public getMergePolicy() : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
        "type": "Rename Method"
      },
      {
        "description": "Change Parameter Type mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in method public EngineConfig(shardId ShardId, threadPool ThreadPool, indexingService ShardIndexingService, indexSettingsService IndexSettingsService, warmer IndicesWarmer, store Store, deletionPolicy SnapshotDeletionPolicy, mergePolicy MergePolicy, mergeScheduler MergeSchedulerProvider, analyzer Analyzer, similarity Similarity, codecService CodecService, failedEngineListener Engine.FailedEngineListener, translogRecoveryPerformer TranslogRecoveryPerformer, filterCache QueryCache, filterCachingPolicy QueryCachingPolicy, translogConfig TranslogConfig) from class org.elasticsearch.index.engine.EngineConfig",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in method public EngineConfig(shardId ShardId, threadPool ThreadPool, indexingService ShardIndexingService, indexSettingsService IndexSettingsService, warmer IndicesWarmer, store Store, deletionPolicy SnapshotDeletionPolicy, mergePolicy MergePolicy, mergeScheduler MergeSchedulerProvider, analyzer Analyzer, similarity Similarity, codecService CodecService, failedEngineListener Engine.FailedEngineListener, translogRecoveryPerformer TranslogRecoveryPerformer, filterCache QueryCache, filterCachingPolicy QueryCachingPolicy, translogConfig TranslogConfig) from class org.elasticsearch.index.engine.EngineConfig",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Return Type MergePolicyProvider to MergePolicy in method public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
        "type": "Change Return Type"
      },
      {
        "description": "Rename Attribute mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
        "type": "Rename Attribute"
      },
      {
        "description": "Change Attribute Type mergePolicyProvider : MergePolicyProvider to mergePolicy : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalEngine.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractMergePolicyProvider.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/merge/policy/AbstractMergePolicyProvider.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "LogByteSizeMergePolicyProvider.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "LogDocMergePolicyProvider.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/merge/policy/LogDocMergePolicyProvider.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "MergePolicyModule.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/merge/policy/MergePolicyModule.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "MergePolicyProvider.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/merge/policy/MergePolicyProvider.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "TieredMergePolicyProvider.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/merge/policy/TieredMergePolicyProvider.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexDynamicSettingsModule.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "ElasticsearchMergePolicy.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/shard/ElasticsearchMergePolicy.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "FilterDocValuesProducer.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/shard/FilterDocValuesProducer.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "IndexShard.java",
    "refactorings": [
      {
        "description": "Remove Parameter mergePolicyProvider : MergePolicyProvider in method public IndexShard(shardId ShardId, indexSettingsService IndexSettingsService, indicesLifecycle IndicesLifecycle, store Store, mergeScheduler MergeSchedulerProvider, threadPool ThreadPool, mapperService MapperService, queryParserService IndexQueryParserService, indexCache IndexCache, indexAliasesService IndexAliasesService, indexingService ShardIndexingService, getService ShardGetService, searchService ShardSearchService, shardWarmerService ShardIndexWarmerService, shardFilterCache ShardFilterCache, shardFieldData ShardFieldData, percolatorQueriesRegistry PercolatorQueriesRegistry, shardPercolateService ShardPercolateService, codecService CodecService, termVectorsService ShardTermVectorsService, indexFieldDataService IndexFieldDataService, indexService IndexService, shardSuggestService ShardSuggestService, shardQueryCache ShardQueryCache, shardBitsetFilterCache ShardBitsetFilterCache, warmer IndicesWarmer, deletionPolicy SnapshotDeletionPolicy, similarityService SimilarityService, mergePolicyProvider MergePolicyProvider, factory EngineFactory, clusterService ClusterService, nodeEnv NodeEnvironment, path ShardPath, bigArrays BigArrays) from class org.elasticsearch.index.shard.IndexShard",
        "type": "Remove Parameter"
      },
      {
        "description": "Rename Attribute mergePolicyProvider : MergePolicyProvider to mergePolicyConfig : MergePolicyConfig in class org.elasticsearch.index.shard.IndexShard",
        "type": "Rename Attribute"
      },
      {
        "description": "Change Attribute Type mergePolicyProvider : MergePolicyProvider to mergePolicyConfig : MergePolicyConfig in class org.elasticsearch.index.shard.IndexShard",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "core/src/main/java/org/elasticsearch/index/shard/IndexShard.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "MergePolicyConfig.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/shard/MergePolicyConfig.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "ShadowIndexShard.java",
    "refactorings": [{
      "description": "Remove Parameter mergePolicyProvider : MergePolicyProvider in method public ShadowIndexShard(shardId ShardId, indexSettingsService IndexSettingsService, indicesLifecycle IndicesLifecycle, store Store, mergeScheduler MergeSchedulerProvider, threadPool ThreadPool, mapperService MapperService, queryParserService IndexQueryParserService, indexCache IndexCache, indexAliasesService IndexAliasesService, indexingService ShardIndexingService, getService ShardGetService, searchService ShardSearchService, shardWarmerService ShardIndexWarmerService, shardFilterCache ShardFilterCache, shardFieldData ShardFieldData, percolatorQueriesRegistry PercolatorQueriesRegistry, shardPercolateService ShardPercolateService, codecService CodecService, termVectorsService ShardTermVectorsService, indexFieldDataService IndexFieldDataService, indexService IndexService, shardSuggestService ShardSuggestService, shardQueryCache ShardQueryCache, shardBitsetFilterCache ShardBitsetFilterCache, warmer IndicesWarmer, deletionPolicy SnapshotDeletionPolicy, similarityService SimilarityService, mergePolicyProvider MergePolicyProvider, factory EngineFactory, clusterService ClusterService, nodeEnv NodeEnvironment, path ShardPath, bigArrays BigArrays) from class org.elasticsearch.index.shard.ShadowIndexShard",
      "type": "Remove Parameter"
    }],
    "filePath": "core/src/main/java/org/elasticsearch/index/shard/ShadowIndexShard.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "VersionFieldUpgrader.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/shard/VersionFieldUpgrader.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "OldIndexBackwardsCompatibilityTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "VersionsTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/common/lucene/uid/VersionsTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "InternalEngineMergeTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/engine/InternalEngineMergeTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "InternalEngineTests.java",
    "refactorings": [
      {
        "description": "Add Thrown Exception Type IOException in method public testForceMerge() : void from class org.elasticsearch.index.engine.InternalEngineTests",
        "type": "Add Thrown Exception Type"
      },
      {
        "description": "Add Parameter mergePolicy : MergePolicy in method protected createEngine(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : InternalEngine from class org.elasticsearch.index.engine.InternalEngineTests",
        "type": "Add Parameter"
      },
      {
        "description": "Add Parameter mergePolicy : MergePolicy in method public config(indexSettingsService IndexSettingsService, store Store, translogPath Path, mergeSchedulerProvider MergeSchedulerProvider, mergePolicy MergePolicy) : EngineConfig from class org.elasticsearch.index.engine.InternalEngineTests",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "ShadowEngineTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/engine/ShadowEngineTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "MergePolicySettingsTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "MergePolicySettingsTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/shard/MergePolicySettingsTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "VersionFieldUpgraderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/shard/VersionFieldUpgraderTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "CorruptedFileTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "UpdateSettingsTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "IndexStatsTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "ParentFieldLoadingBwcTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/search/child/ParentFieldLoadingBwcTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "ParentFieldLoadingTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/search/child/ParentFieldLoadingTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "ElasticsearchIntegrationTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "NoMergePolicyProvider.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/test/index/merge/NoMergePolicyProvider.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "UpdateTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/update/UpdateTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "FilterStreamInput.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/common/io/stream/FilterStreamInput.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "NamedWriteable.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/common/io/stream/NamedWriteable.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "NamedWriteableRegistry.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/common/io/stream/NamedWriteableRegistry.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "StreamInput.java",
    "refactorings": [
      {
        "description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public readMap() : Map<String,Object> from class org.elasticsearch.common.io.stream.StreamInput",
        "type": "Add Method Annotation"
      },
      {
        "description": "Extract Variable object : T in method public readThrowable() : T from class org.elasticsearch.common.io.stream.StreamInput",
        "type": "Extract Variable"
      }
    ],
    "filePath": "core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "StreamOutput.java",
    "refactorings": [
      {
        "description": "Add Variable Annotation @SuppressWarnings(\"unchecked\") in variable map : Map<String,Object> in method public writeGenericValue(value Object) : void from class org.elasticsearch.common.io.stream.StreamOutput",
        "type": "Add Variable Annotation"
      },
      {
        "description": "Rename Parameter value : int[] to values : int[] in method public writeIntArray(values int[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter value : long[] to values : long[] in method public writeLongArray(values long[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter value : float[] to values : float[] in method public writeFloatArray(values float[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter value : double[] to values : double[] in method public writeDoubleArray(values double[]) : void from class org.elasticsearch.common.io.stream.StreamOutput",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "FQueryFilterBuilder.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/query/FQueryFilterBuilder.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "FQueryFilterParser.java",
    "refactorings": [{
      "description": "Change Return Type QueryFilterBuilder to FQueryFilterBuilder in method public getBuilderPrototype() : FQueryFilterBuilder from class org.elasticsearch.index.query.FQueryFilterParser",
      "type": "Change Return Type"
    }],
    "filePath": "core/src/main/java/org/elasticsearch/index/query/FQueryFilterParser.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryBuilder.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/index/query/QueryBuilder.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryFilterBuilder.java",
    "refactorings": [{
      "description": "Extract Method protected buildFQuery(builder XContentBuilder, params Params) : void extracted from protected doXContent(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder",
      "type": "Extract Method"
    }],
    "filePath": "core/src/main/java/org/elasticsearch/index/query/QueryFilterBuilder.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "IndicesQueriesModule.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "IndicesQueriesRegistry.java",
    "refactorings": [{
      "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public IndicesQueriesRegistry(settings Settings, injectedQueryParsers Set<QueryParser>, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.indices.query.IndicesQueriesRegistry",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/elasticsearch/indices/query/IndicesQueriesRegistry.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportModule.java",
    "refactorings": [],
    "filePath": "core/src/main/java/org/elasticsearch/transport/TransportModule.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalTransport.java",
    "refactorings": [{
      "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public LocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.local.LocalTransport",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/elasticsearch/transport/local/LocalTransport.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageChannelHandler.java",
    "refactorings": [{
      "description": "Extract Method public MessageChannelHandler(transport NettyTransport, logger ESLogger, profileName String, namedWriteableRegistry NamedWriteableRegistry) extracted from public MessageChannelHandler(transport NettyTransport, logger ESLogger, profileName String) in class org.elasticsearch.transport.netty.MessageChannelHandler",
      "type": "Extract Method"
    }],
    "filePath": "core/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "NettyTransport.java",
    "refactorings": [
      {
        "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ServerChannelPipelineFactory(nettyTransport NettyTransport, name String, settings Settings, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransport.ServerChannelPipelineFactory",
        "type": "Add Parameter"
      },
      {
        "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public NettyTransport(settings Settings, threadPool ThreadPool, networkService NetworkService, bigArrays BigArrays, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransport",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/org/elasticsearch/transport/netty/NettyTransport.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "main"
  },
  {
    "fileName": "BenchmarkNettyLargeMessages.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/benchmark/transport/BenchmarkNettyLargeMessages.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "TransportBenchmark.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/benchmark/transport/TransportBenchmark.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "ClusterStateDiffPublishingTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/cluster/ClusterStateDiffPublishingTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "BytesStreamsTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/common/io/streams/BytesStreamsTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "ZenFaultDetectionTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "MulticastZenPingTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPingTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "UnicastZenPingTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseQueryTestCase.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/index/query/BaseQueryTestCase.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "PluggableTransportModuleTests.java",
    "refactorings": [{
      "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public CountingAssertingLocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.plugins.PluggableTransportModuleTests.CountingAssertingLocalTransport",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/test/java/org/elasticsearch/plugins/PluggableTransportModuleTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "AssertingLocalTransport.java",
    "refactorings": [{
      "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public AssertingLocalTransport(settings Settings, threadPool ThreadPool, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.test.transport.AssertingLocalTransport",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/test/java/org/elasticsearch/test/transport/AssertingLocalTransport.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractSimpleTransportTests.java",
    "refactorings": [{
      "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected abstract build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.AbstractSimpleTransportTests",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/test/java/org/elasticsearch/transport/AbstractSimpleTransportTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "NettySizeHeaderFrameDecoderTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/transport/NettySizeHeaderFrameDecoderTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "SimpleLocalTransportTests.java",
    "refactorings": [{
      "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.local.SimpleLocalTransportTests",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/test/java/org/elasticsearch/transport/local/SimpleLocalTransportTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "NettyScheduledPingTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/transport/netty/NettyScheduledPingTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "NettyTransportMultiPortTests.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "NettyTransportTests.java",
    "refactorings": [
      {
        "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ErrorPipelineFactory(exceptionThrowingNettyTransport ExceptionThrowingNettyTransport, name String, groupSettings Settings, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransportTests.ExceptionThrowingNettyTransport.ErrorPipelineFactory",
        "type": "Add Parameter"
      },
      {
        "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method public ExceptionThrowingNettyTransport(settings Settings, threadPool ThreadPool, networkService NetworkService, bigArrays BigArrays, version Version, namedWriteableRegistry NamedWriteableRegistry) from class org.elasticsearch.transport.netty.NettyTransportTests.ExceptionThrowingNettyTransport",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/test/java/org/elasticsearch/transport/netty/NettyTransportTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "SimpleNettyTransportTests.java",
    "refactorings": [{
      "description": "Add Parameter namedWriteableRegistry : NamedWriteableRegistry in method protected build(settings Settings, version Version, namedWriteableRegistry NamedWriteableRegistry) : MockTransportService from class org.elasticsearch.transport.netty.SimpleNettyTransportTests",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/test/java/org/elasticsearch/transport/netty/SimpleNettyTransportTests.java",
    "commit": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "repository": "https://github.com/elastic/elasticsearch.git",
    "fileType": "test"
  },
  {
    "fileName": "BeanPropertyWriter.java",
    "refactorings": [
      {
        "description": "Encapsulate Attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
        "type": "Encapsulate Attribute"
      },
      {
        "description": "Remove Attribute Modifier final in attribute protected _typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
        "type": "Remove Attribute Modifier"
      }
    ],
    "filePath": "src/main/java/com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "main"
  },
  {
    "fileName": "BeanSerializerFactory.java",
    "refactorings": [],
    "filePath": "src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "main"
  },
  {
    "fileName": "TestExternalId.java",
    "refactorings": [],
    "filePath": "src/test/java/com/fasterxml/jackson/databind/jsontype/TestExternalId.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "test"
  },
  {
    "fileName": "TestExternalTypeId222.java",
    "refactorings": [],
    "filePath": "src/test/java/com/fasterxml/jackson/failing/TestExternalTypeId222.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "test"
  },
  {
    "fileName": "ClientInterface.java",
    "refactorings": [
      {
        "description": "Extract Method private writeResponseToConnection(response ClientResponseImpl) : void extracted from public run() : void in class org.voltdb.ClientInterface.processFinishedCompilerWork.ft.create.new Runnable",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private writeResponseToConnection(response ClientResponseImpl) : void extracted from public run() : void in class org.voltdb.ClientInterface.processFinishedCompilerWork.ft.create.new Runnable",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private writeResponseToConnection(response ClientResponseImpl) : void extracted from public run() : void in class org.voltdb.ClientInterface.processFinishedCompilerWork.ft.create.new Runnable",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private writeResponseToConnection(response ClientResponseImpl) : void extracted from public run() : void in class org.voltdb.ClientInterface.processFinishedCompilerWork.ft.create.new Runnable",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/frontend/org/voltdb/ClientInterface.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "AdHocPlannedStmtBatch.java",
    "refactorings": [{
      "description": "Extract Method public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[], readOnly boolean, isAdmin boolean) : AdHocPlannedStmtBatch extracted from public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[]) : AdHocPlannedStmtBatch in class org.voltdb.compiler.AdHocPlannedStmtBatch",
      "type": "Extract Method"
    }],
    "filePath": "src/frontend/org/voltdb/compiler/AdHocPlannedStmtBatch.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "AdHocPlannerWork.java",
    "refactorings": [{
      "description": "Extract Method public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler, isAdmin boolean) : AdHocPlannerWork extracted from public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler) : AdHocPlannerWork in class org.voltdb.compiler.AdHocPlannerWork",
      "type": "Extract Method"
    }],
    "filePath": "src/frontend/org/voltdb/compiler/AdHocPlannerWork.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "main"
  },
  {
    "fileName": "TestClientInterface.java",
    "refactorings": [{
      "description": "Extract Method private runPausedMode(isAdmin boolean) : void extracted from public testPausedMode() : void in class org.voltdb.TestClientInterface",
      "type": "Extract Method"
    }],
    "filePath": "tests/frontend/org/voltdb/TestClientInterface.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "TestJSONInterface.java",
    "refactorings": [],
    "filePath": "tests/frontend/org/voltdb/TestJSONInterface.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "LocalCluster.java",
    "refactorings": [{
      "description": "Extract Method private getListenerAddress(hostId int, useAdmin boolean) : String extracted from public getListenerAddress(hostId int) : String in class org.voltdb.regressionsuites.LocalCluster",
      "type": "Extract Method"
    }],
    "filePath": "tests/frontend/org/voltdb/regressionsuites/LocalCluster.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "LocalSingleProcessServer.java",
    "refactorings": [],
    "filePath": "tests/frontend/org/voltdb/regressionsuites/LocalSingleProcessServer.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "RegressionSuite.java",
    "refactorings": [{
      "description": "Extract Method public getClient(timeout long, scheme ClientAuthHashScheme, useAdmin boolean) : Client extracted from public getClient(timeout long, scheme ClientAuthHashScheme) : Client in class org.voltdb.regressionsuites.RegressionSuite",
      "type": "Extract Method"
    }],
    "filePath": "tests/frontend/org/voltdb/regressionsuites/RegressionSuite.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "TestSystemProcedureSuite.java",
    "refactorings": [],
    "filePath": "tests/frontend/org/voltdb/regressionsuites/TestSystemProcedureSuite.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "VoltServerConfig.java",
    "refactorings": [],
    "filePath": "tests/frontend/org/voltdb/regressionsuites/VoltServerConfig.java",
    "commit": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "repository": "https://github.com/VoltDB/voltdb.git",
    "fileType": "test"
  },
  {
    "fileName": "AnnotationParser.java",
    "refactorings": [],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/AnnotationParser.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityMapper.java",
    "refactorings": [{
      "description": "Add Parameter strategyType : StrategyType in method protected EntityMapper(entityClass Class<T>, keyspace String, table String, writeConsistency ConsistencyLevel, readConsistency ConsistencyLevel, strategyType StrategyType) from class com.datastax.driver.mapping.EntityMapper",
      "type": "Add Parameter"
    }],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/EntityMapper.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "Mapper.java",
    "refactorings": [
      {
        "description": "Extract Method package getPreparedQuery(type QueryType, columns Set<ColumnMapper<?>>, options Option...) : PreparedStatement extracted from package getPreparedQuery(type QueryType, options Option...) : PreparedStatement in class com.datastax.driver.mapping.Mapper",
        "type": "Extract Method"
      },
      {
        "description": "Merge Variable [value : Object, cm : ColumnMapper<T>] to entry : Map.Entry<ColumnMapper<?>,Object> in method public saveQuery(entity T, options Option...) : Statement from class com.datastax.driver.mapping.Mapper",
        "type": "Merge Variable"
      }
    ],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/Mapper.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryType.java",
    "refactorings": [{
      "description": "Add Parameter columns : Set<ColumnMapper<?>> in method package makePreparedQueryString(table TableMetadata, mapper EntityMapper<?>, columns Set<ColumnMapper<?>>, options Mapper.Option...) : String from class com.datastax.driver.mapping.QueryType",
      "type": "Add Parameter"
    }],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/QueryType.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "ReflectionMapper.java",
    "refactorings": [
      {
        "description": "Add Parameter strategyType : StrategyType in method public create(entityClass Class<T>, keyspace String, table String, writeConsistency ConsistencyLevel, readConsistency ConsistencyLevel, strategyType StrategyType) : EntityMapper<T> from class com.datastax.driver.mapping.ReflectionMapper.ReflectionFactory",
        "type": "Add Parameter"
      },
      {
        "description": "Add Parameter strategyType : StrategyType in method private ReflectionMapper(entityClass Class<T>, keyspace String, table String, writeConsistency ConsistencyLevel, readConsistency ConsistencyLevel, strategyType StrategyType) from class com.datastax.driver.mapping.ReflectionMapper",
        "type": "Add Parameter"
      }
    ],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/ReflectionMapper.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "StrategyType.java",
    "refactorings": [],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/StrategyType.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "Table.java",
    "refactorings": [],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/annotations/Table.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "UDT.java",
    "refactorings": [],
    "filePath": "driver-mapping/src/main/java/com/datastax/driver/mapping/annotations/UDT.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "main"
  },
  {
    "fileName": "MapperOptionTest.java",
    "refactorings": [],
    "filePath": "driver-mapping/src/test/java/com/datastax/driver/mapping/MapperOptionTest.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "MapperPersistenceStrategiesTest.java",
    "refactorings": [],
    "filePath": "driver-mapping/src/test/java/com/datastax/driver/mapping/MapperPersistenceStrategiesTest.java",
    "commit": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "repository": "https://github.com/datastax/java-driver.git",
    "fileType": "test"
  },
  {
    "fileName": "FxmlReferencesContributor.java",
    "refactorings": [
      {
        "description": "Extract Method private setNewName(newText String) : PsiElement extracted from public handleElementRename(newElementName String) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private getOldName() : String extracted from public handleElementRename(newElementName String) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private setNewName(newText String) : PsiElement extracted from public bindToElement(element PsiElement) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private getOldName() : String extracted from public bindToElement(element PsiElement) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "type": "Extract Method"
      }
    ],
    "filePath": "plugins/javaFX/src/org/jetbrains/plugins/javaFX/fxml/refs/FxmlReferencesContributor.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/a97341973c3b683d62d1422e5404ed5c7ccf45f8",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaFXRenameTest.java",
    "refactorings": [],
    "filePath": "plugins/javaFX/javaFX-CE/testSrc/org/jetbrains/plugins/javaFX/fxml/JavaFXRenameTest.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/a97341973c3b683d62d1422e5404ed5c7ccf45f8",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "InRoot.java",
    "refactorings": [],
    "filePath": "plugins/javaFX/testData/rename/InRoot.java",
    "commit": "https://github.com/JetBrains/intellij-community/commit/a97341973c3b683d62d1422e5404ed5c7ccf45f8",
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "fileType": "test"
  },
  {
    "fileName": "BatchMeasureToMeasure.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/measure/BatchMeasureToMeasure.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "Measure.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/measure/Measure.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "MeasureDtoToMeasure.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/measure/MeasureDtoToMeasure.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "QualityGateEventsStep.java",
    "refactorings": [
      {
        "description": "Change Variable Type baseStatus : Measure.QualityGateStatus to baseStatus : QualityGateStatus in method private checkQualityGateStatusChange(project Component, metric Metric, rawStatus QualityGateStatus) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Parameter Type rawStatus : Measure.QualityGateStatus to rawStatus : QualityGateStatus in method private checkQualityGateStatusChange(project Component, metric Metric, rawStatus QualityGateStatus) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type rawStatus : Measure.QualityGateStatus to rawStatus : QualityGateStatus in method private checkNewQualityGate(project Component, rawStatus QualityGateStatus) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type rawStatus : Measure.QualityGateStatus to rawStatus : QualityGateStatus in method private notifyUsers(project Component, label String, rawStatus QualityGateStatus, isNewAlert boolean) : void from class org.sonar.server.computation.step.QualityGateEventsStep",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/step/QualityGateEventsStep.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "main"
  },
  {
    "fileName": "QualityGateStatus.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/main/java/org/sonar/server/computation/measure/QualityGateStatus.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "MeasureImplTest.java",
    "refactorings": [{
      "description": "Change Variable Type someStatus : Measure.QualityGateStatus to someStatus : QualityGateStatus in method public getAlertStatus_returns_argument_from_setAlertStatus() : void from class org.sonar.server.computation.measure.MeasureImplTest",
      "type": "Change Variable Type"
    }],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/measure/MeasureImplTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "QualityGateStatusTest.java",
    "refactorings": [],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/measure/QualityGateStatusTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "QualityGateEventsStepTest.java",
    "refactorings": [
      {
        "description": "Change Attribute Type OK_QUALITY_GATE_STATUS : Measure.QualityGateStatus to OK_QUALITY_GATE_STATUS : QualityGateStatus in class org.sonar.server.computation.step.QualityGateEventsStepTest",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Type WARN_QUALITY_GATE_STATUS : Measure.QualityGateStatus to WARN_QUALITY_GATE_STATUS : QualityGateStatus in class org.sonar.server.computation.step.QualityGateEventsStepTest",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Type ERROR_QUALITY_GATE_STATUS : Measure.QualityGateStatus to ERROR_QUALITY_GATE_STATUS : QualityGateStatus in class org.sonar.server.computation.step.QualityGateEventsStepTest",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Variable Type someQGStatus : Measure.QualityGateStatus to someQGStatus : QualityGateStatus in method public no_event_created_if_no_base_ALERT_STATUS_and_raw_is_OK() : void from class org.sonar.server.computation.step.QualityGateEventsStepTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type someQGStatus : Measure.QualityGateStatus to someQGStatus : QualityGateStatus in method private verify_event_created_if_no_base_ALERT_STATUS_measure(rawAlterStatus Measure.Level, expectedLabel String) : void from class org.sonar.server.computation.step.QualityGateEventsStepTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Parameter Type newQualityGateStatus : Measure.QualityGateStatus to newQualityGateStatus : QualityGateStatus in method private verify_event_created_if_base_ALERT_STATUS_measure_exists_and_status_has_changed(previousAlertStatus Measure.Level, newQualityGateStatus QualityGateStatus, expectedLabel String) : void from class org.sonar.server.computation.step.QualityGateEventsStepTest",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "server/sonar-server/src/test/java/org/sonar/server/computation/step/QualityGateEventsStepTest.java",
    "commit": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "fileType": "test"
  },
  {
    "fileName": "UndertowLogger.java",
    "refactorings": [],
    "filePath": "core/src/main/java/io/undertow/UndertowLogger.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "ContainsPredicate.java",
    "refactorings": [
      {
        "description": "Change Class Access Modifier package to public in class io.undertow.predicate.ContainsPredicate",
        "type": "Change Class Access Modifier"
      },
      {
        "description": "Encapsulate Attribute private attribute : ExchangeAttribute from class io.undertow.predicate.ContainsPredicate",
        "type": "Encapsulate Attribute"
      }
    ],
    "filePath": "core/src/main/java/io/undertow/predicate/ContainsPredicate.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "PredicateParser.java",
    "refactorings": [],
    "filePath": "core/src/main/java/io/undertow/predicate/PredicateParser.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "PredicatesHandler.java",
    "refactorings": [
      {
        "description": "Add Parameter elseBranch : HttpHandler in method private Holder(predicate Predicate, handler HttpHandler, elseBranch HttpHandler) from class io.undertow.predicate.PredicatesHandler.Holder",
        "type": "Add Parameter"
      },
      {
        "description": "Extract Method public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper, elseBranch HandlerWrapper) : PredicatesHandler extracted from public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper) : PredicatesHandler in class io.undertow.predicate.PredicatesHandler",
        "type": "Extract Method"
      }
    ],
    "filePath": "core/src/main/java/io/undertow/predicate/PredicatesHandler.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "AllowedMethodsHandler.java",
    "refactorings": [],
    "filePath": "core/src/main/java/io/undertow/server/handlers/AllowedMethodsHandler.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "SetHeaderHandler.java",
    "refactorings": [
      {
        "description": "Encapsulate Attribute private header : HttpString from class io.undertow.server.handlers.SetHeaderHandler",
        "type": "Encapsulate Attribute"
      },
      {
        "description": "Encapsulate Attribute private value : ExchangeAttribute from class io.undertow.server.handlers.SetHeaderHandler",
        "type": "Encapsulate Attribute"
      }
    ],
    "filePath": "core/src/main/java/io/undertow/server/handlers/SetHeaderHandler.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "HandlerParser.java",
    "refactorings": [{
      "description": "Remove Method Modifier final in method public parse(string String, classLoader ClassLoader) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser",
      "type": "Remove Method Modifier"
    }],
    "filePath": "core/src/main/java/io/undertow/server/handlers/builder/HandlerParser.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "PredicatedHandler.java",
    "refactorings": [{
      "description": "Extract Method public PredicatedHandler(predicate Predicate, handler HandlerWrapper, elseHandler HandlerWrapper) extracted from public PredicatedHandler(predicate Predicate, handler HandlerWrapper) in class io.undertow.server.handlers.builder.PredicatedHandler",
      "type": "Extract Method"
    }],
    "filePath": "core/src/main/java/io/undertow/server/handlers/builder/PredicatedHandler.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "PredicatedHandlersParser.java",
    "refactorings": [],
    "filePath": "core/src/main/java/io/undertow/server/handlers/builder/PredicatedHandlersParser.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "PredicateTokeniser.java",
    "refactorings": [],
    "filePath": "core/src/main/java/io/undertow/util/PredicateTokeniser.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "main"
  },
  {
    "fileName": "PredicatedHandlersTestCase.java",
    "refactorings": [],
    "filePath": "core/src/test/java/io/undertow/server/handlers/PredicatedHandlersTestCase.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "test"
  },
  {
    "fileName": "PredicatedHandlersParserTestCase.java",
    "refactorings": [],
    "filePath": "core/src/test/java/io/undertow/server/handlers/builder/PredicatedHandlersParserTestCase.java",
    "commit": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "repository": "https://github.com/undertow-io/undertow.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractWebIntegrationTests.java",
    "refactorings": [{
      "description": "Extract Method protected setupMockMvc() : void extracted from public setUp() : void in class org.springframework.data.rest.webmvc.AbstractWebIntegrationTests",
      "type": "Extract Method"
    }],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/AbstractWebIntegrationTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "CommonWebTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/CommonWebTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "TestMvcClient.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/TestMvcClient.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "AlpsControllerIntegrationTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/alps/AlpsControllerIntegrationTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "JpaWebTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/jpa/JpaWebTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "MongoWebTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/mongodb/MongoWebTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "Neo4jWebTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/neo4j/Neo4jWebTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "Order.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/security/Order.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "Person.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/security/Person.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "PreAuthorizedOrderRepository.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/security/PreAuthorizedOrderRepository.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "SecureJpaConfiguration.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/security/SecureJpaConfiguration.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "SecuredPersonRepository.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/security/SecuredPersonRepository.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "SecurityConfiguration.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/security/SecurityConfiguration.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "SecurityIntegrationTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/security/SecurityIntegrationTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "SolrWebTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/solr/SolrWebTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "ExceptionHandlingCustomizationIntegrationTests.java",
    "refactorings": [],
    "filePath": "spring-data-rest-webmvc/src/test/java/org/springframework/data/rest/webmvc/support/ExceptionHandlingCustomizationIntegrationTests.java",
    "commit": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "fileType": "test"
  },
  {
    "fileName": "DatagramServerHandler.java",
    "refactorings": [
      {
        "description": "Rename Parameter server : DatagramSocketImpl to socket : DatagramSocketImpl in method package DatagramServerHandler(vertx VertxInternal, socket DatagramSocketImpl) from class io.vertx.core.datagram.impl.DatagramServerHandler",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Attribute server : DatagramSocketImpl to socket : DatagramSocketImpl in class io.vertx.core.datagram.impl.DatagramServerHandler",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/datagram/impl/DatagramServerHandler.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientConnection.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/http/impl/ClientConnection.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpClientImpl.java",
    "refactorings": [{
      "description": "Add Parameter vertx : VertxInternal in method public ClientHandler(vertx VertxInternal, context ContextImpl) from class io.vertx.core.http.impl.HttpClientImpl.ClientHandler",
      "type": "Add Parameter"
    }],
    "filePath": "src/main/java/io/vertx/core/http/impl/HttpClientImpl.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpClientRequestImpl.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/http/impl/HttpClientRequestImpl.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpServerImpl.java",
    "refactorings": [{
      "description": "Add Parameter vertx : VertxInternal in method public ServerHandler(vertx VertxInternal) from class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
      "type": "Add Parameter"
    }],
    "filePath": "src/main/java/io/vertx/core/http/impl/HttpServerImpl.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxHttpHandler.java",
    "refactorings": [
      {
        "description": "Rename Attribute vertx : VertxInternal to connectionMap : Map<Channel,C> in class io.vertx.core.http.impl.VertxHttpHandler",
        "type": "Rename Attribute"
      },
      {
        "description": "Change Attribute Type vertx : VertxInternal to connectionMap : Map<Channel,C> in class io.vertx.core.http.impl.VertxHttpHandler",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Access Modifier private to protected in attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.http.impl.VertxHttpHandler",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Remove Attribute Modifier final in attribute private vertx : VertxInternal from class io.vertx.core.http.impl.VertxHttpHandler",
        "type": "Remove Attribute Modifier"
      }
    ],
    "filePath": "src/main/java/io/vertx/core/http/impl/VertxHttpHandler.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxChannelFactory.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/impl/VertxChannelFactory.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxHandler.java",
    "refactorings": [{
      "description": "Remove Parameter connectionMap : Map<Channel,C> in method protected VertxHandler(vertx VertxInternal, connectionMap Map<Channel,C>) from class io.vertx.core.net.impl.VertxHandler",
      "type": "Remove Parameter"
    }],
    "filePath": "src/main/java/io/vertx/core/net/impl/VertxHandler.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxNetHandler.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/impl/VertxNetHandler.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxNioServerSocketChannel.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/impl/VertxNioServerSocketChannel.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxNioSocketChannel.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/impl/VertxNioSocketChannel.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "VertxServerChannelFactory.java",
    "refactorings": [],
    "filePath": "src/main/java/io/vertx/core/net/impl/VertxServerChannelFactory.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "main"
  },
  {
    "fileName": "NetTest.java",
    "refactorings": [],
    "filePath": "src/test/java/io/vertx/test/core/NetTest.java",
    "commit": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "repository": "https://github.com/eclipse/vert.x.git",
    "fileType": "test"
  },
  {
    "fileName": "KieContainerImpl.java",
    "refactorings": [],
    "filePath": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieContainerImpl.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "RuleBaseConfiguration.java",
    "refactorings": [{
      "description": "Extract Method private configureReteComponentFactory() : void extracted from public getComponentFactory() : KieComponentFactory in class org.drools.core.RuleBaseConfiguration",
      "type": "Extract Method"
    }],
    "filePath": "drools-core/src/main/java/org/drools/core/RuleBaseConfiguration.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "AgendaGroupQueueImpl.java",
    "refactorings": [
      {
        "description": "Change Attribute Access Modifier private to protected in attribute protected priorityQueue : BinaryHeapQueue from class org.drools.core.common.AgendaGroupQueueImpl",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Extract Method protected initPriorityQueue(kBase InternalKnowledgeBase) : BinaryHeapQueue extracted from public AgendaGroupQueueImpl(name String, kBase InternalKnowledgeBase) in class org.drools.core.common.AgendaGroupQueueImpl",
        "type": "Extract Method"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/common/AgendaGroupQueueImpl.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultAgenda.java",
    "refactorings": [
      {
        "description": "Change Attribute Type queries : ConcurrentMap<QueryImpl,RuleAgendaItem> to queries : Map<QueryImpl,RuleAgendaItem> in class org.drools.core.common.DefaultAgenda",
        "type": "Change Attribute Type"
      },
      {
        "description": "Remove Method Modifier synchronized in method public fireActivation(activation Activation) : void from class org.drools.core.common.DefaultAgenda",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method private fireActivationEvent(activation Activation, event Consequence) : void from class org.drools.core.common.DefaultAgenda",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Inline Variable fired : boolean in method public fireUntilHalt(agendaFilter AgendaFilter) : void from class org.drools.core.common.DefaultAgenda",
        "type": "Inline Variable"
      },
      {
        "description": "Extract And Move Method public isFiring() : boolean extracted from public isFiring() : boolean in class org.drools.core.common.DefaultAgenda & moved to class org.drools.core.common.DefaultAgenda.ExecutionState",
        "type": "Extract And Move Method"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/common/DefaultAgenda.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultAgendaFactory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/DefaultAgendaFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalAgenda.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/InternalAgenda.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalWorkingMemory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/InternalWorkingMemory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PhreakPropagationContextFactory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/PhreakPropagationContextFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PhreakWorkingMemoryFactory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/PhreakWorkingMemoryFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PriorityQueueAgendaGroupFactory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/PriorityQueueAgendaGroupFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "Scheduler.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/Scheduler.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "TupleEntryQueue.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/TupleEntryQueue.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "TupleEntryQueueImpl.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/common/TupleEntryQueueImpl.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractConflictResolver.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/conflict/AbstractConflictResolver.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "DepthConflictResolver.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/conflict/DepthConflictResolver.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PhreakConflictResolver.java",
    "refactorings": [{
      "description": "Merge Conditional [return 1;, if(s1 > s2)] to return s1 != s2 ? (s1 > s2 ? 1 : -1) : adding.getRule().getLoadOrder() - existing.getRule().getLoadOrder(); in method public doCompare(existing Activation, adding Activation) : int from class org.drools.core.conflict.PhreakConflictResolver",
      "type": "Merge Conditional"
    }],
    "filePath": "drools-core/src/main/java/org/drools/core/conflict/PhreakConflictResolver.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "StatefulKnowledgeSessionImpl.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/impl/StatefulKnowledgeSessionImpl.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtobufInputMarshaller.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/marshalling/impl/ProtobufInputMarshaller.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtobufOutputMarshaller.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/marshalling/impl/ProtobufOutputMarshaller.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "AddRemoveRule.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/AddRemoveRule.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ExecutableEntry.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/ExecutableEntry.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PhreakTimerNode.java",
    "refactorings": [{
      "description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PhreakTimerNode.TimerAction",
      "type": "Rename Method"
    }],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/PhreakTimerNode.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PropagationEntry.java",
    "refactorings": [
      {
        "description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry.AbstractPropagationEntry",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry",
        "type": "Rename Method"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/PropagationEntry.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PropagationList.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/PropagationList.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "RuleExecutor.java",
    "refactorings": [
      {
        "description": "Rename Method public isHighestSalience(nextRule RuleAgendaItem) : boolean renamed to private isHigherSalience(nextRule RuleAgendaItem) : boolean in class org.drools.core.phreak.RuleExecutor",
        "type": "Rename Method"
      },
      {
        "description": "Remove Method Modifier synchronized in method public evaluateNetwork(wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleExecutor",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public evaluateNetworkAndFire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int) : int from class org.drools.core.phreak.RuleExecutor",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method public fire(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Method Modifier synchronized in method public fire(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method private fire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int, outerStack LinkedList<StackEntry>, agenda InternalAgenda) : int from class org.drools.core.phreak.RuleExecutor",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method public reEvaluateNetwork(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Method Modifier synchronized in method public reEvaluateNetwork(wm InternalWorkingMemory, outerStack LinkedList<StackEntry>) : void from class org.drools.core.phreak.RuleExecutor",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Split Conditional return !agenda.isFiring() || ((nextRule != null) && (!ruleAgendaItem.getAgendaGroup().equals(nextRule.getAgendaGroup()) || !isHighestSalience(nextRule))) || (fireLimit >= 0 && (localFireCount + fireCount >= fireLimit)); to [return nextRule != null && (!ruleAgendaItem.getAgendaGroup().equals(nextRule.getAgendaGroup()) || !isHigherSalience(nextRule));, if(!agenda.isFiring() || (fireLimit >= 0 && (localFireCount + fireCount >= fireLimit)))] in method private haltRuleFiring(fireCount int, fireLimit int, localFireCount int, agenda InternalAgenda) : boolean from class org.drools.core.phreak.RuleExecutor",
        "type": "Split Conditional"
      },
      {
        "description": "Localize Parameter nextRule : RuleAgendaItem to nextRule : RuleAgendaItem in method private haltRuleFiring(fireCount int, fireLimit int, localFireCount int, agenda InternalAgenda) : boolean from class org.drools.core.phreak.RuleExecutor",
        "type": "Localize Parameter"
      },
      {
        "description": "Change Method Access Modifier public to private in method private isHigherSalience(nextRule RuleAgendaItem) : boolean from class org.drools.core.phreak.RuleExecutor",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/RuleExecutor.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "RuleNetworkEvaluator.java",
    "refactorings": [
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method public evaluateNetwork(pmem PathMemory, outerStack LinkedList<StackEntry>, executor RuleExecutor, wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method public outerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter visitedRules : Set<String> in method public outerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method public evalStackEntry(entry StackEntry, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, executor RuleExecutor, wm InternalWorkingMemory) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method public innerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter visitedRules : Set<String> in method public innerEval(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter visitedRules : Set<String> in method private evalQueryNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, bit long, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, visitedRules Set<String>, srcTuples LeftTupleSets, sink LeftTupleSinkNode, stagedLeftTuples LeftTupleSets) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method private evalBetaNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor, srcTuples LeftTupleSets, stagedLeftTuples LeftTupleSets, sink LeftTupleSinkNode) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter visitedRules : Set<String> in method private evalBetaNode(liaNode LeftInputAdapterNode, pmem PathMemory, node NetworkNode, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, wm InternalWorkingMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, processRian boolean, executor RuleExecutor, srcTuples LeftTupleSets, stagedLeftTuples LeftTupleSets, sink LeftTupleSinkNode) : boolean from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter outerStack : LinkedList<StackEntry> in method private doRiaNode(wm InternalWorkingMemory, liaNode LeftInputAdapterNode, pmem PathMemory, srcTuples LeftTupleSets, betaNode BetaNode, sink LeftTupleSinkNode, smems SegmentMemory[], smemIndex int, nodeMem Memory, bm BetaMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter visitedRules : Set<String> in method private doRiaNode(wm InternalWorkingMemory, liaNode LeftInputAdapterNode, pmem PathMemory, srcTuples LeftTupleSets, betaNode BetaNode, sink LeftTupleSinkNode, smems SegmentMemory[], smemIndex int, nodeMem Memory, bm BetaMemory, stack LinkedList<StackEntry>, outerStack LinkedList<StackEntry>, visitedRules Set<String>, executor RuleExecutor) : void from class org.drools.core.phreak.RuleNetworkEvaluator",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/RuleNetworkEvaluator.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "SegmentUtilities.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/SegmentUtilities.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "StackEntry.java",
    "refactorings": [{
      "description": "Remove Parameter visitedRules : Set<String> in method public StackEntry(liaNode LeftInputAdapterNode, node NetworkNode, bit long, sink LeftTupleSinkNode, pmem PathMemory, nodeMem Memory, smems SegmentMemory[], smemIndex int, trgTuples LeftTupleSets, visitedRules Set<String>, resumeFromNextNode boolean, processRian boolean) from class org.drools.core.phreak.StackEntry",
      "type": "Remove Parameter"
    }],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/StackEntry.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "SynchronizedBypassPropagationList.java",
    "refactorings": [{
      "description": "Remove Method Modifier synchronized in method public addEntry(propagationEntry PropagationEntry) : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
      "type": "Remove Method Modifier"
    }],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/SynchronizedBypassPropagationList.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "SynchronizedPropagationList.java",
    "refactorings": [
      {
        "description": "Split Method private internalFlush() : void to [public takeAll() : PropagationEntry, public flush(workingMemory InternalWorkingMemory, currentHead PropagationEntry) : void] in class org.drools.core.phreak.SynchronizedPropagationList",
        "type": "Split Method"
      },
      {
        "description": "Parameterize Variable currentHead : PropagationEntry to currentHead : PropagationEntry in method public flush(workingMemory InternalWorkingMemory, currentHead PropagationEntry) : void from class org.drools.core.phreak.SynchronizedPropagationList",
        "type": "Parameterize Variable"
      },
      {
        "description": "Extract Method private internalAddEntry(entry PropagationEntry) : void extracted from public addEntry(entry PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
        "type": "Extract Method"
      },
      {
        "description": "Add Method Modifier synchronized in method public isEmpty() : boolean from class org.drools.core.phreak.SynchronizedPropagationList",
        "type": "Add Method Modifier"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/phreak/SynchronizedPropagationList.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "KieComponentFactory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/reteoo/KieComponentFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "LIANodePropagation.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/reteoo/LIANodePropagation.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PathMemory.java",
    "refactorings": [
      {
        "description": "Remove Method Modifier synchronized in method public getOrCreateRuleAgendaItem(wm InternalWorkingMemory) : RuleAgendaItem from class org.drools.core.reteoo.PathMemory",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public doLinkRule(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public doUnlinkRule(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Inline Variable agenda : InternalAgenda in method public queueRuleAgendaItem(wm InternalWorkingMemory) : void from class org.drools.core.reteoo.PathMemory",
        "type": "Inline Variable"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/reteoo/PathMemory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "PhreakNodeFactory.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/reteoo/builder/PhreakNodeFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "SlidingTimeWindow.java",
    "refactorings": [
      {
        "description": "Change Attribute Access Modifier public to private in attribute private queue : PriorityQueue<EventFactHandle> from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Change Attribute Access Modifier public to private in attribute private expiringHandle : EventFactHandle from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Encapsulate Attribute private expiringHandle : EventFactHandle from class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Encapsulate Attribute"
      },
      {
        "description": "Remove Parameter pctx : PropagationContext in method public BehaviorJobContext(nodeId int, workingMemory InternalWorkingMemory, behavior Behavior, behaviorContext Object, pctx PropagationContext) from class org.drools.core.rule.SlidingTimeWindow.BehaviorJobContext",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter pctx : PropagationContext in method public BehaviorExpireWMAction(nodeId int, behavior Behavior, context Object, pctx PropagationContext) from class org.drools.core.rule.SlidingTimeWindow.BehaviorExpireWMAction",
        "type": "Remove Parameter"
      },
      {
        "description": "Change Method Access Modifier private to protected in method protected isExpired(currentTime long, handle EventFactHandle) : boolean from class org.drools.core.rule.SlidingTimeWindow",
        "type": "Change Method Access Modifier"
      },
      {
        "description": "Remove Parameter pctx : PropagationContext in method protected updateNextExpiration(fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory, context Object, nodeId int) : void from class org.drools.core.rule.SlidingTimeWindow",
        "type": "Remove Parameter"
      },
      {
        "description": "Extract And Move Method public setExpiringHandle(expiringHandle EventFactHandle) : void extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Extract And Move Method"
      },
      {
        "description": "Extract And Move Method public add(handle EventFactHandle) : void extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Extract And Move Method"
      },
      {
        "description": "Extract And Move Method public remove(handle EventFactHandle) : void extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Extract And Move Method"
      },
      {
        "description": "Extract And Move Method public peek() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Extract And Move Method"
      },
      {
        "description": "Extract And Move Method public poll() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Extract And Move Method"
      },
      {
        "description": "Extract And Move Method public remove() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "type": "Extract And Move Method"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/rule/SlidingTimeWindow.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ConflictResolver.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/spi/ConflictResolver.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "CronTimer.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/time/impl/CronTimer.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "CronTrigger.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/time/impl/CronTrigger.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "IntervalTimer.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/time/impl/IntervalTimer.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "IntervalTrigger.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/time/impl/IntervalTrigger.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryHeapQueue.java",
    "refactorings": [
      {
        "description": "Change Attribute Type comparator : Comparator to comparator : Comparator<Activation> in class org.drools.core.util.BinaryHeapQueue",
        "type": "Change Attribute Type"
      },
      {
        "description": "Remove Method Modifier synchronized in method public clear() : void from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public isEmpty() : boolean from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public isFull() : boolean from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public size() : int from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public peek() : Activation from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public enqueue(element Activation) : void from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public dequeue() : Activation from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public dequeue(activation Activation) : Activation from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method package dequeue(index int) : Activation from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier synchronized in method public toArray(a Object[]) : Object[] from class org.drools.core.util.BinaryHeapQueue",
        "type": "Remove Method Modifier"
      }
    ],
    "filePath": "drools-core/src/main/java/org/drools/core/util/BinaryHeapQueue.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassUtils.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/util/ClassUtils.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ThreadSafeJavaIteratorAdapter.java",
    "refactorings": [],
    "filePath": "drools-core/src/main/java/org/drools/core/util/ThreadSafeJavaIteratorAdapter.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ReteNodeFactory.java",
    "refactorings": [],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/builder/ReteNodeFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ReteAgenda.java",
    "refactorings": [
      {
        "description": "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda",
        "type": "Rename Method"
      },
      {
        "description": "Remove Parameter saveForLater : boolean in method public fireTimedActivation(activation Activation, saveForLater boolean) : boolean from class org.drools.reteoo.common.ReteAgenda",
        "type": "Remove Parameter"
      },
      {
        "description": "Change Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
        "type": "Change Return Type"
      },
      {
        "description": "Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void from class org.drools.reteoo.common.ReteAgenda",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/common/ReteAgenda.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ReteAgendaFactory.java",
    "refactorings": [],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/common/ReteAgendaFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ReteAgendaGroupQueueImpl.java",
    "refactorings": [],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/common/ReteAgendaGroupQueueImpl.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "RetePriorityQueueAgendaGroupFactory.java",
    "refactorings": [],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/common/RetePriorityQueueAgendaGroupFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "RetePropagationContextFactory.java",
    "refactorings": [],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/common/RetePropagationContextFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ReteWorkingMemory.java",
    "refactorings": [],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/common/ReteWorkingMemory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ReteWorkingMemoryFactory.java",
    "refactorings": [],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/common/ReteWorkingMemoryFactory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "ReteSlidingTimeWindow.java",
    "refactorings": [{
      "description": "Remove Parameter pctx : PropagationContext in method protected updateNextExpiration(fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory, context Object, nodeId int) : void from class org.drools.reteoo.nodes.ReteSlidingTimeWindow",
      "type": "Remove Parameter"
    }],
    "filePath": "drools-reteoo/src/main/java/org/drools/reteoo/nodes/ReteSlidingTimeWindow.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "main"
  },
  {
    "fileName": "CepEspTest.java",
    "refactorings": [{
      "description": "Modify Method Annotation @Test to @Test(timeout = 10000) in method public testEventExpirationInSlidingWindow() : void from class org.drools.compiler.integrationtests.CepEspTest",
      "type": "Modify Method Annotation"
    }],
    "filePath": "drools-compiler/src/test/java/org/drools/compiler/integrationtests/CepEspTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "CepFireUntilHaltTimerTest.java",
    "refactorings": [{
      "description": "Add Class Annotation @Ignore in class org.drools.compiler.integrationtests.CepFireUntilHaltTimerTest",
      "type": "Add Class Annotation"
    }],
    "filePath": "drools-compiler/src/test/java/org/drools/compiler/integrationtests/CepFireUntilHaltTimerTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "DynamicRulesTest.java",
    "refactorings": [{
      "description": "Change Variable Type e : NoClassDefFoundError to e : Throwable in method public testDynamicFunction() : void from class org.drools.compiler.integrationtests.DynamicRulesTest",
      "type": "Change Variable Type"
    }],
    "filePath": "drools-compiler/src/test/java/org/drools/compiler/integrationtests/DynamicRulesTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "Misc2Test.java",
    "refactorings": [],
    "filePath": "drools-compiler/src/test/java/org/drools/compiler/integrationtests/Misc2Test.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "MockWorkingMemory.java",
    "refactorings": [],
    "filePath": "drools-compiler/src/test/java/org/drools/compiler/testframework/MockWorkingMemory.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "ReteooWorkingMemoryTest.java",
    "refactorings": [{
      "description": "Add Method Annotation @Ignore in method public testExecuteQueueActions() : void from class org.drools.core.reteoo.ReteooWorkingMemoryTest",
      "type": "Add Method Annotation"
    }],
    "filePath": "drools-core/src/test/java/org/drools/core/reteoo/ReteooWorkingMemoryTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "BinaryHeapQueueTest.java",
    "refactorings": [
      {
        "description": "Change Parameter Type existing : Item to existing : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type adding : Item to adding : Activation in method public compare(existing Activation, adding Activation) : int from class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "drools-core/src/test/java/org/drools/core/util/BinaryHeapQueueTest.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "NaturalComparator.java",
    "refactorings": [
      {
        "description": "Change Parameter Type a : Object to a : T in method public compare(a T, b T) : int from class org.drools.core.util.NaturalComparator",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type b : Object to b : T in method public compare(a T, b T) : int from class org.drools.core.util.NaturalComparator",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "drools-core/src/test/java/org/drools/core/util/NaturalComparator.java",
    "commit": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "repository": "https://github.com/droolsjbpm/drools.git",
    "fileType": "test"
  },
  {
    "fileName": "EntityScanRegistrar.java",
    "refactorings": [
      {
        "description": "Extract Method private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
        "type": "Extract Method"
      },
      {
        "description": "Extract Variable packagesToScan : Set<String> in method public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void from class org.springframework.boot.orm.jpa.EntityScanRegistrar",
        "type": "Extract Variable"
      },
      {
        "description": "Change Return Type String[] to Set<String> in method private getPackagesToScan(metadata AnnotationMetadata) : Set<String> from class org.springframework.boot.orm.jpa.EntityScanRegistrar",
        "type": "Change Return Type"
      }
    ],
    "filePath": "spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityScanRegistrar.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityScanTests.java",
    "refactorings": [],
    "filePath": "spring-boot/src/test/java/org/springframework/boot/orm/jpa/EntityScanTests.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "test"
  },
  {
    "fileName": "ODatabaseImport.java",
    "refactorings": [
      {
        "description": "Extract Method protected rewriteLinksInDocument(document ODocument, rewrite OIndex<OIdentifiable>) : void extracted from private rewriteLinksInDocument(document ODocument) : void in class com.orientechnologies.orient.core.db.tool.ODatabaseImport",
        "type": "Extract Method"
      },
      {
        "description": "Parameterize Attribute exportImportHashTable : OIndex<OIdentifiable> to rewrite : OIndex<OIdentifiable> in method protected rewriteLinksInDocument(document ODocument, rewrite OIndex<OIdentifiable>) : void from class com.orientechnologies.orient.core.db.tool.ODatabaseImport",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "core/src/main/java/com/orientechnologies/orient/core/db/tool/ODatabaseImport.java",
    "commit": "https://github.com/orientechnologies/orientdb/commit/1089957b645bde069d3864563bbf1f7c7da8045c",
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "fileType": "main"
  },
  {
    "fileName": "TestImportRewriteLinks.java",
    "refactorings": [],
    "filePath": "core/src/test/java/com/orientechnologies/orient/core/db/tool/TestImportRewriteLinks.java",
    "commit": "https://github.com/orientechnologies/orientdb/commit/1089957b645bde069d3864563bbf1f7c7da8045c",
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "fileType": "test"
  },
  {
    "fileName": "FixedMembershipToken.java",
    "refactorings": [
      {
        "description": "Change Attribute Type memberList : List<String> to memberList : List<InetSocketAddress> in class org.jgroups.auth.FixedMembershipToken",
        "type": "Change Attribute Type"
      },
      {
        "description": "Add Attribute Modifier final in attribute private memberList : List<InetSocketAddress> from class org.jgroups.auth.FixedMembershipToken",
        "type": "Add Attribute Modifier"
      },
      {
        "description": "Extract Method public match(sender IpAddress, addr InetSocketAddress) : boolean extracted from public authenticate(token AuthToken, msg Message) : boolean in class org.jgroups.auth.FixedMembershipToken",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method public isInMembersList(sender IpAddress) : boolean extracted from public authenticate(token AuthToken, msg Message) : boolean in class org.jgroups.auth.FixedMembershipToken",
        "type": "Extract Method"
      },
      {
        "description": "Change Variable Type member : String to addr : InetSocketAddress in method public isInMembersList(sender IpAddress) : boolean from class org.jgroups.auth.FixedMembershipToken",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable member : String to addr : InetSocketAddress in method public isInMembersList(sender IpAddress) : boolean from class org.jgroups.auth.FixedMembershipToken",
        "type": "Rename Variable"
      },
      {
        "description": "Add Thrown Exception Type UnknownHostException in method public setMemberList(list String) : void from class org.jgroups.auth.FixedMembershipToken",
        "type": "Add Thrown Exception Type"
      }
    ],
    "filePath": "src/org/jgroups/auth/FixedMembershipToken.java",
    "commit": "https://github.com/belaban/JGroups/commit/f1533756133dec84ce8218202585ac85904da7c9",
    "repository": "https://github.com/belaban/JGroups.git",
    "fileType": "main"
  },
  {
    "fileName": "AUTHTest.java",
    "refactorings": [],
    "filePath": "tests/junit-functional/org/jgroups/protocols/AUTHTest.java",
    "commit": "https://github.com/belaban/JGroups/commit/f1533756133dec84ce8218202585ac85904da7c9",
    "repository": "https://github.com/belaban/JGroups.git",
    "fileType": "test"
  },
  {
    "fileName": "SshIntegrationTestBase.java",
    "refactorings": [],
    "filePath": "src/test/java/com/hierynomus/sshj/SshIntegrationTestBase.java",
    "commit": "https://github.com/hierynomus/sshj/commit/7c26ac669a4e17ca1d2319a5049a56424fd33104",
    "repository": "https://github.com/hierynomus/sshj.git",
    "fileType": "test"
  },
  {
    "fileName": "ChannelCloseEofTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/hierynomus/sshj/connection/channel/ChannelCloseEofTest.java",
    "commit": "https://github.com/hierynomus/sshj/commit/7c26ac669a4e17ca1d2319a5049a56424fd33104",
    "repository": "https://github.com/hierynomus/sshj.git",
    "fileType": "test"
  },
  {
    "fileName": "Cnd.java",
    "refactorings": [
      {
        "description": "Extract Method public from(dao Dao, obj Object, filter FieldFilter, ignoreNull boolean, ignoreZero boolean, ignoreDate boolean, ignoreId boolean, ignoreName boolean, ignorePk boolean) : Cnd extracted from public from(dao Dao, obj Object, filter FieldFilter) : Cnd in class org.nutz.dao.Cnd",
        "type": "Extract Method"
      },
      {
        "description": "Split Conditional if(val == null || (val instanceof Number && ((Number)val).doubleValue() == 0.0)) to [if(val == null), if(val instanceof Number && ((Number)val).doubleValue() == 0.0)] in method public from(dao Dao, obj Object, filter FieldFilter, ignoreNull boolean, ignoreZero boolean, ignoreDate boolean, ignoreId boolean, ignoreName boolean, ignorePk boolean) : Cnd from class org.nutz.dao.Cnd",
        "type": "Split Conditional"
      },
      {
        "description": "Remove Method Annotation @SuppressWarnings({\"rawtypes\",\"unchecked\"}) in method public from(dao Dao, obj Object, filter FieldFilter) : Cnd from class org.nutz.dao.Cnd",
        "type": "Remove Method Annotation"
      }
    ],
    "filePath": "src/org/nutz/dao/Cnd.java",
    "commit": "https://github.com/nutzam/nutz/commit/6599c748ef35d38085703cf3bd41b9b5b6af5f32",
    "repository": "https://github.com/nutzam/nutz.git",
    "fileType": "main"
  },
  {
    "fileName": "CndTest.java",
    "refactorings": [],
    "filePath": "test/org/nutz/dao/texp/CndTest.java",
    "commit": "https://github.com/nutzam/nutz/commit/6599c748ef35d38085703cf3bd41b9b5b6af5f32",
    "repository": "https://github.com/nutzam/nutz.git",
    "fileType": "test"
  },
  {
    "fileName": "AdbHelper.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/android/AdbHelper.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AdbOptions.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/android/AdbOptions.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "TargetDeviceOptions.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/android/TargetDeviceOptions.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AdbCommandLineOptions.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cli/AdbCommandLineOptions.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "ExopackageInstaller.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cli/ExopackageInstaller.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "InstallCommand.java",
    "refactorings": [
      {
        "description": "Change Attribute Type adbOptions : AdbOptions to adbOptions : AdbCommandLineOptions in class com.facebook.buck.cli.InstallCommand",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Type deviceOptions : TargetDeviceOptions to deviceOptions : TargetDeviceCommandLineOptions in class com.facebook.buck.cli.InstallCommand",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "src/com/facebook/buck/cli/InstallCommand.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "TargetDeviceCommandLineOptions.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cli/TargetDeviceCommandLineOptions.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "UninstallCommand.java",
    "refactorings": [
      {
        "description": "Change Attribute Type adbOptions : AdbOptions to adbOptions : AdbCommandLineOptions in class com.facebook.buck.cli.UninstallCommand",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Attribute Type deviceOptions : TargetDeviceOptions to deviceOptions : TargetDeviceCommandLineOptions in class com.facebook.buck.cli.UninstallCommand",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "src/com/facebook/buck/cli/UninstallCommand.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "InstallEvent.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/event/InstallEvent.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "StartActivityEvent.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/event/StartActivityEvent.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "UninstallEvent.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/event/UninstallEvent.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractConsoleEventBusListener.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/event/listener/AbstractConsoleEventBusListener.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "ChromeTraceBuildListener.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/event/listener/ChromeTraceBuildListener.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleConsoleEventBusListener.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/event/listener/SimpleConsoleEventBusListener.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "TestCommand.java",
    "refactorings": [{
      "description": "Change Attribute Type targetDeviceOptions : TargetDeviceOptions to targetDeviceOptions : TargetDeviceCommandLineOptions in class com.facebook.buck.cli.TestCommand",
      "type": "Change Attribute Type"
    }],
    "filePath": "src/com/facebook/buck/cli/TestCommand.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AdbHelperTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/android/AdbHelperTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "TestDevice.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/android/TestDevice.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "InstallCommandOptionsTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cli/InstallCommandOptionsTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "TargetDeviceCommandLineOptionsTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cli/TargetDeviceCommandLineOptionsTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "InstallEventTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/event/InstallEventTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "StartActivityEventTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/event/StartActivityEventTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "UninstallEventTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/event/UninstallEventTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "SimpleConsoleEventBusListenerTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/event/listener/SimpleConsoleEventBusListenerTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "SuperConsoleEventBusListenerTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/event/listener/SuperConsoleEventBusListenerTest.java",
    "commit": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "JavaCodeGeneratorBase.java",
    "refactorings": [],
    "filePath": "generator/src/main/java/com/linkedin/pegasus/generator/JavaCodeGeneratorBase.java",
    "commit": "https://github.com/linkedin/rest.li/commit/bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaDataTemplateGenerator.java",
    "refactorings": [
      {
        "description": "Extract Method protected extendWrappingArrayBaseClass(itemJClass JClass, arrayClass JDefinedClass) : void extracted from protected generateArray(arrayClass JDefinedClass, arrayDataTemplateSpec ArrayTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method protected extendWrappingMapBaseClass(valueJClass JClass, mapClass JDefinedClass) : void extracted from protected generateMap(mapClass JDefinedClass, mapSpec MapTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method protected extendRecordBaseClass(templateClass JDefinedClass) : void extracted from protected generateRecord(templateClass JDefinedClass, recordSpec RecordTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method protected extendUnionBaseClass(unionClass JDefinedClass) : void extracted from protected generateUnion(unionClass JDefinedClass, unionSpec UnionTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "type": "Extract Method"
      },
      {
        "description": "Add Parameter recordFieldRemove : boolean in method private JavaDataTemplateGenerator(defaultPackage String, recordFieldAccessorWithMode boolean, recordFieldRemove boolean, pathSpecMethods boolean, copierMethods boolean) from class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "type": "Add Parameter"
      },
      {
        "description": "Add Parameter pathSpecMethods : boolean in method private JavaDataTemplateGenerator(defaultPackage String, recordFieldAccessorWithMode boolean, recordFieldRemove boolean, pathSpecMethods boolean, copierMethods boolean) from class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "type": "Add Parameter"
      },
      {
        "description": "Add Parameter copierMethods : boolean in method private JavaDataTemplateGenerator(defaultPackage String, recordFieldAccessorWithMode boolean, recordFieldRemove boolean, pathSpecMethods boolean, copierMethods boolean) from class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "type": "Add Parameter"
      }
    ],
    "filePath": "generator/src/main/java/com/linkedin/pegasus/generator/JavaDataTemplateGenerator.java",
    "commit": "https://github.com/linkedin/rest.li/commit/bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomJavaDataTemplateGenerator.java",
    "refactorings": [],
    "filePath": "generator/src/test/java/com/linkedin/pegasus/generator/CustomJavaDataTemplateGenerator.java",
    "commit": "https://github.com/linkedin/rest.li/commit/bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestCustomJavaDataTemplateGenerator.java",
    "refactorings": [],
    "filePath": "generator/src/test/java/com/linkedin/pegasus/generator/TestCustomJavaDataTemplateGenerator.java",
    "commit": "https://github.com/linkedin/rest.li/commit/bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "AccountsDbAdapter.java",
    "refactorings": [{
      "description": "Replace Generic With Diamond LinkedList<Account> with LinkedList<> in method public getAllAccounts() : List<Account> from class org.gnucash.android.db.AccountsDbAdapter",
      "type": "Replace Generic With Diamond"
    }],
    "filePath": "app/src/main/java/org/gnucash/android/db/AccountsDbAdapter.java",
    "commit": "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "repository": "https://github.com/codinguser/gnucash-android.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/org/gnucash/android/db/DatabaseAdapter.java",
    "commit": "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "repository": "https://github.com/codinguser/gnucash-android.git",
    "fileType": "main"
  },
  {
    "fileName": "TransactionsDbAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/org/gnucash/android/db/TransactionsDbAdapter.java",
    "commit": "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "repository": "https://github.com/codinguser/gnucash-android.git",
    "fileType": "main"
  },
  {
    "fileName": "GncXmlExporter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/org/gnucash/android/export/xml/GncXmlExporter.java",
    "commit": "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "repository": "https://github.com/codinguser/gnucash-android.git",
    "fileType": "main"
  },
  {
    "fileName": "ExportTransactionsTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/org/gnucash/android/test/ui/ExportTransactionsTest.java",
    "commit": "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "repository": "https://github.com/codinguser/gnucash-android.git",
    "fileType": "test"
  },
  {
    "fileName": "AccountsDbAdapterTest.java",
    "refactorings": [
      {
        "description": "Rename Method public testAlphabeticalSorting() : void renamed to public shouldBeAlphabeticallySortedByDefault() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testAddAccountWithTransaction() : void renamed to public shouldAddAccountsToDatabase() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public testDeletingAccountShouldDeleteSplits() : void renamed to public shouldDeleteSplitsWhenAccountDeleted() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
        "type": "Rename Method"
      }
    ],
    "filePath": "app/src/test/java/org/gnucash/android/test/unit/db/AccountsDbAdapterTest.java",
    "commit": "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "repository": "https://github.com/codinguser/gnucash-android.git",
    "fileType": "test"
  },
  {
    "fileName": "GlobalTypeInfo.java",
    "refactorings": [
      {
        "description": "Inline Method private getRawTypeFromJSType(t JSType) : RawNominalType inlined to private visitOtherPropertyDeclaration(getProp Node) : void in class com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope",
        "type": "Inline Method"
      },
      {
        "description": "Extract Variable recvType : JSType in method private visitOtherPropertyDeclaration(getProp Node) : void from class com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope",
        "type": "Extract Variable"
      }
    ],
    "filePath": "src/com/google/javascript/jscomp/GlobalTypeInfo.java",
    "commit": "https://github.com/google/closure-compiler/commit/ba5e6d44526a2491a7004423ca2ad780c6992c46",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "ObjectType.java",
    "refactorings": [{
      "description": "Change Method Access Modifier public to package in method package getNominalType() : NominalType from class com.google.javascript.jscomp.newtypes.ObjectType",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "src/com/google/javascript/jscomp/newtypes/ObjectType.java",
    "commit": "https://github.com/google/closure-compiler/commit/ba5e6d44526a2491a7004423ca2ad780c6992c46",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "NewTypeInferenceES5OrLowerTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/NewTypeInferenceES5OrLowerTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/ba5e6d44526a2491a7004423ca2ad780c6992c46",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "ContextPreparer.java",
    "refactorings": [
      {
        "description": "Rename Parameter countNode : CountNode to node : CountNode in method public visitCountNode(node CountNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
        "type": "Rename Parameter"
      },
      {
        "description": "Remove Parameter Modifier final in parameter node : MergeNode in method public visitMergeNode(node MergeNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
        "type": "Remove Parameter Modifier"
      },
      {
        "description": "Remove Parameter Modifier final in parameter context : PreparerContext in method public visitMergeNode(node MergeNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
        "type": "Remove Parameter Modifier"
      },
      {
        "description": "Remove Parameter Modifier final in parameter node : CollectNode in method public visitCollectNode(node CollectNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
        "type": "Remove Parameter Modifier"
      },
      {
        "description": "Remove Parameter Modifier final in parameter context : PreparerContext in method public visitCollectNode(node CollectNode, context PreparerContext) : Void from class io.crate.action.job.ContextPreparer.InnerPreparer",
        "type": "Remove Parameter Modifier"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/action/job/ContextPreparer.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "Job.java",
    "refactorings": [{
      "description": "Change Parameter Type tasks : Collection<Task> to tasks : Collection<? extends Task> in method public addTasks(tasks Collection<? extends Task>) : void from class io.crate.executor.Job",
      "type": "Change Parameter Type"
    }],
    "filePath": "sql/src/main/java/io/crate/executor/Job.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ExecutionNodesTask.java",
    "refactorings": [
      {
        "description": "Remove Parameter mergeNodes : List<MergeNode> in method protected ExecutionNodesTask(jobId UUID, clusterService ClusterService, contextPreparer ContextPreparer, jobContextService JobContextService, pageDownstreamFactory PageDownstreamFactory, threadPool ThreadPool, transportJobAction TransportJobAction, transportCloseContextNodeAction TransportCloseContextNodeAction, streamerVisitor StreamerVisitor, circuitBreaker CircuitBreaker, mergeNodes List<MergeNode>, groupedExecutionNodes List<List<ExecutionNode>>) from class io.crate.executor.transport.ExecutionNodesTask",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter groupedExecutionNodes : List<List<ExecutionNode>> in method protected ExecutionNodesTask(jobId UUID, clusterService ClusterService, contextPreparer ContextPreparer, jobContextService JobContextService, pageDownstreamFactory PageDownstreamFactory, threadPool ThreadPool, transportJobAction TransportJobAction, transportCloseContextNodeAction TransportCloseContextNodeAction, streamerVisitor StreamerVisitor, circuitBreaker CircuitBreaker, mergeNodes List<MergeNode>, groupedExecutionNodes List<List<ExecutionNode>>) from class io.crate.executor.transport.ExecutionNodesTask",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Attribute Modifier final in attribute private hasDirectResponse : boolean from class io.crate.executor.transport.ExecutionNodesTask",
        "type": "Remove Attribute Modifier"
      },
      {
        "description": "Move Code from protected ExecutionNodesTask(jobId UUID, clusterService ClusterService, contextPreparer ContextPreparer, jobContextService JobContextService, pageDownstreamFactory PageDownstreamFactory, threadPool ThreadPool, transportJobAction TransportJobAction, transportCloseContextNodeAction TransportCloseContextNodeAction, streamerVisitor StreamerVisitor, circuitBreaker CircuitBreaker, mergeNodes List<MergeNode>, groupedExecutionNodes List<List<ExecutionNode>>) to public result() : List<? extends ListenableFuture<TaskResult>> in class io.crate.executor.transport.ExecutionNodesTask",
        "type": "Move Code"
      },
      {
        "description": "Rename Attribute mergeNodes : List<MergeNode> to finalMergeNodes : List<MergeNode> in class io.crate.executor.transport.ExecutionNodesTask",
        "type": "Rename Attribute"
      },
      {
        "description": "Add Attribute Modifier final in attribute private finalMergeNodes : List<MergeNode> from class io.crate.executor.transport.ExecutionNodesTask",
        "type": "Add Attribute Modifier"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/executor/transport/ExecutionNodesTask.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportExecutor.java",
    "refactorings": [
      {
        "description": "Rename Method public visitGlobalAggregate(plan GlobalAggregate, job Job) : List<Task> renamed to protected visitPlan(plan Plan, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Rename Method"
      },
      {
        "description": "Inline Method private createExecutableNodesTask(job Job, executionNode ExecutionNode, localMergeNode MergeNode) : Task inlined to protected visitPlan(plan Plan, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Inline Method"
      },
      {
        "description": "Extract Variable task : ExecutionNodesTask in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Extract Variable"
      },
      {
        "description": "Change Return Type List<Task> to List<? extends Task> in method public visitUpsert(plan Upsert, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type tasks : List<Task> to tasks : List<? extends Task> in method public visitInsertByQuery(node InsertFromSubQuery, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type List<Task> to List<? extends Task> in method public visitInsertByQuery(node InsertFromSubQuery, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type List<Task> to List<? extends Task> in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type plan : GlobalAggregate to plan : Plan in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Method Access Modifier public to protected in method protected visitPlan(plan Plan, job Job) : List<? extends Task> from class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor",
        "type": "Change Method Access Modifier"
      },
      {
        "description": "Change Variable Type tasks : List<Task> to tasks : List<? extends Task> in method public newJob(plan Plan) : Job from class io.crate.executor.transport.TransportExecutor",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/executor/transport/TransportExecutor.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedResultRequest.java",
    "refactorings": [{
      "description": "Add Parameter executionNodeInputId : byte in method public DistributedResultRequest(jobId UUID, executionNodeId int, executionNodeInputId byte, bucketIdx int, streamers Streamer<?>[]) from class io.crate.executor.transport.distributed.DistributedResultRequest",
      "type": "Add Parameter"
    }],
    "filePath": "sql/src/main/java/io/crate/executor/transport/distributed/DistributedResultRequest.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributingDownstream.java",
    "refactorings": [
      {
        "description": "Add Parameter targetInputId : byte in method public Downstream(node String, jobId UUID, targetExecutionNodeId int, targetInputId byte, bucketIdx int, streamers Streamer<?>[]) from class io.crate.executor.transport.distributed.DistributingDownstream.Downstream",
        "type": "Add Parameter"
      },
      {
        "description": "Add Parameter targetInputId : byte in method public DistributingDownstream(jobId UUID, targetExecutionNodeId int, targetInputId byte, bucketIdx int, downstreamNodeIds Collection<String>, transportDistributedResultAction TransportDistributedResultAction, streamers Streamer<?>[]) from class io.crate.executor.transport.distributed.DistributingDownstream",
        "type": "Add Parameter"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/executor/transport/distributed/DistributingDownstream.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "TransportDistributedResultAction.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/executor/transport/distributed/TransportDistributedResultAction.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "DownstreamExecutionSubContext.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/jobs/DownstreamExecutionSubContext.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NestedLoopContext.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/jobs/NestedLoopContext.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "PageDownstreamContext.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/jobs/PageDownstreamContext.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "JobCollectContext.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/operation/collect/JobCollectContext.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "MapSideDataCollectOperation.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/operation/collect/MapSideDataCollectOperation.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NestedLoopOperation.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/operation/join/NestedLoopOperation.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalResultProviderFactory.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/operation/projectors/InternalResultProviderFactory.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "PlanNodeBuilder.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/PlanNodeBuilder.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "PlanVisitor.java",
    "refactorings": [
      {
        "description": "Rename Parameter node : QueryAndFetch to plan : QueryAndFetch in method public visitQueryAndFetch(plan QueryAndFetch, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter node : QueryThenFetch to plan : QueryThenFetch in method public visitQueryThenFetch(plan QueryThenFetch, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter node : NonDistributedGroupBy to plan : NonDistributedGroupBy in method public visitNonDistributedGroupBy(plan NonDistributedGroupBy, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter node : Upsert to plan : Upsert in method public visitUpsert(plan Upsert, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter node : DistributedGroupBy to plan : DistributedGroupBy in method public visitDistributedGroupBy(plan DistributedGroupBy, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter node : InsertFromSubQuery to plan : InsertFromSubQuery in method public visitInsertByQuery(plan InsertFromSubQuery, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter countPlan : CountPlan to plan : CountPlan in method public visitCountPlan(plan CountPlan, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter killPlan : KillPlan to plan : KillPlan in method public visitKillPlan(plan KillPlan, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter nestedLoop : NestedLoop to plan : NestedLoop in method public visitNestedLoop(plan NestedLoop, context C) : R from class io.crate.planner.PlanVisitor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/PlanVisitor.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ExecutionNode.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/ExecutionNode.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "ExecutionNodeVisitor.java",
    "refactorings": [
      {
        "description": "Rename Parameter countNode : CountNode to node : CountNode in method public visitCountNode(node CountNode, context C) : R from class io.crate.planner.node.ExecutionNodeVisitor",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Parameter nestedLoopNode : NestedLoopNode to node : NestedLoopNode in method public visitNestedLoopNode(node NestedLoopNode, context C) : R from class io.crate.planner.node.ExecutionNodeVisitor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/node/ExecutionNodeVisitor.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "StreamerVisitor.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/StreamerVisitor.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractDQLPlanNode.java",
    "refactorings": [
      {
        "description": "Change Attribute Access Modifier private to protected in attribute protected inputTypes : List<DataType> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Inline Variable numCols : int in method public writeTo(out StreamOutput) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "type": "Inline Variable"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/AbstractDQLPlanNode.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CollectNode.java",
    "refactorings": [{
      "description": "Replace Attribute With Variable downstreamNodes : List<String> to downstreamNodes : List<String> in method public hasDistributingDownstreams() : boolean from class io.crate.planner.node.dql.CollectNode",
      "type": "Replace Attribute With Variable"
    }],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/CollectNode.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CountNode.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/CountNode.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "CountPlan.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/CountPlan.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "MergeNode.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/MergeNode.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "QueryAndFetch.java",
    "refactorings": [
      {
        "description": "Add Attribute Annotation @Nullable in attribute private localMergeNode : MergeNode from class io.crate.planner.node.dql.QueryAndFetch",
        "type": "Add Attribute Annotation"
      },
      {
        "description": "Add Method Annotation @Nullable in method public localMergeNode() : MergeNode from class io.crate.planner.node.dql.QueryAndFetch",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/QueryAndFetch.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NestedLoop.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/join/NestedLoop.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "NestedLoopNode.java",
    "refactorings": [],
    "filePath": "sql/src/main/java/io/crate/planner/node/dql/join/NestedLoopNode.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseTransportExecutorTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/BaseTransportExecutorTest.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "TransportExecutorTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/TransportExecutorTest.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "DistributingDownstreamTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/distributed/DistributingDownstreamTest.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "DistributedResultRequestTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/executor/transport/merge/DistributedResultRequestTest.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "Setup.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/integrationtests/Setup.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "NestedLoopOperationTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/operation/join/NestedLoopOperationTest.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "NestedLoopNodeTest.java",
    "refactorings": [],
    "filePath": "sql/src/test/java/io/crate/planner/node/dql/NestedLoopNodeTest.java",
    "commit": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "repository": "https://github.com/crate/crate.git",
    "fileType": "test"
  },
  {
    "fileName": "Directory.java",
    "refactorings": [{
      "description": "Extract Variable fileList : File[] in method public prepare(m ProgressMonitor) : void from class org.geoserver.importer.Directory",
      "type": "Extract Variable"
    }],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/Directory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Importer.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/Importer.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractCommandLineTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/AbstractCommandLineTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractInlineVectorTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/AbstractInlineVectorTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/AbstractTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AttributeRemapTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/AttributeRemapTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateIndexTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/CreateIndexTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalAddoTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/GdalAddoTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalTranslateTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/GdalTranslateTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalWarpTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/GdalWarpTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "KMLPlacemarkTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/KMLPlacemarkTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "PostTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/PostTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "PreTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/PreTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "RasterTransformChain.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/RasterTransformChain.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ReprojectTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/ReprojectTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "TransformChain.java",
    "refactorings": [
      {
        "description": "Rename Parameter task : ImportTask to item : ImportTask in method public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
        "type": "Rename Parameter"
      },
      {
        "description": "Remove Method Modifier abstract in method public abstract pre(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
        "type": "Remove Method Modifier"
      },
      {
        "description": "Remove Method Modifier abstract in method public abstract post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
        "type": "Remove Method Modifier"
      }
    ],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/TransformChain.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "VectorTransformChain.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/VectorTransformChain.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportJSONReader.java",
    "refactorings": [],
    "filePath": "src/extension/importer/rest/src/main/java/org/geoserver/importer/rest/ImportJSONReader.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportJSONWriter.java",
    "refactorings": [],
    "filePath": "src/extension/importer/rest/src/main/java/org/geoserver/importer/rest/ImportJSONWriter.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "CatalogBuilder.java",
    "refactorings": [],
    "filePath": "src/main/src/main/java/org/geoserver/catalog/CatalogBuilder.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AttributesToPointGeometryTransform.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/main/java/org/geoserver/importer/transform/AttributesToPointGeometryTransform.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalTransformTest.java",
    "refactorings": [],
    "filePath": "src/extension/importer/core/src/test/java/org/geoserver/importer/transform/GdalTransformTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalTransformTest.java",
    "refactorings": [],
    "filePath": "src/extension/importer/rest/src/test/java/org/geoserver/importer/rest/GdalTransformTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "WebMvcProperties.java",
    "refactorings": [],
    "filePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "main"
  },
  {
    "fileName": "WebMvcAutoConfigurationTests.java",
    "refactorings": [
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public handerAdaptersCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public handerAdaptersCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public handerMappingsCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public handerMappingsCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public resourceHandlerMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public resourceHandlerMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public resourceHandlerMappingOverrideWebjars() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public resourceHandlerMappingOverrideAll() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public resourceHandlerMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public resourceHandlerMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public noLocaleResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public overrideLocale() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public noDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public overrideDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public noMessageCodesResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public overrideMessageCodesFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public ignoreDefaultModelOnRedirectIsTrue() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public ignoreDefaultModelOnRedirectIsTrue() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public customViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public customContentNegotiatingViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public faviconMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public faviconMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public faviconMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public faviconMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public defaultAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public defaultAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(config Class<?>, environment String...) : void extracted from public customAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private load(environment String...) : void extracted from public customAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "type": "Extract Method"
      }
    ],
    "filePath": "spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfigurationTests.java",
    "commit": "https://github.com/spring-projects/spring-boot/commit/cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphHopper.java",
    "refactorings": [
      {
        "description": "Rename Method public getGraph() : GraphStorage renamed to public getGraphHopperStorage() : GraphHopperStorage in class com.graphhopper.GraphHopper",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method public setGraph(graph GraphStorage) : void renamed to public setGraphHopperStorage(ghStorage GraphHopperStorage) : void in class com.graphhopper.GraphHopper",
        "type": "Rename Method"
      },
      {
        "description": "Split Conditional if(chEnabled && !vehicle.equalsIgnoreCase(getDefaultVehicle().toString())) to [if(!vehicle.equalsIgnoreCase(getDefaultVehicle().toString())), if(chEnabled)] in method protected getPaths(request GHRequest, rsp GHResponse) : List<Path> from class com.graphhopper.GraphHopper",
        "type": "Split Conditional"
      },
      {
        "description": "Change Variable Type newGraph : GraphStorage to newGraph : GraphHopperStorage in method protected optimize() : void from class com.graphhopper.GraphHopper",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method protected loadGraph(g GraphHopperStorage) : GraphHopper from class com.graphhopper.GraphHopper",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public getGraphHopperStorage() : GraphHopperStorage from class com.graphhopper.GraphHopper",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter graph : GraphStorage to ghStorage : GraphHopperStorage in method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void from class com.graphhopper.GraphHopper",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter tmpGraph : GraphStorage to ghStorage : GraphHopperStorage in method protected createReader(ghStorage GraphHopperStorage) : DataReader from class com.graphhopper.GraphHopper",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Attribute graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
        "type": "Rename Attribute"
      },
      {
        "description": "Change Attribute Type graph : GraphStorage to ghStorage : GraphHopperStorage in class com.graphhopper.GraphHopper",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/GraphHopper.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "OSMReader.java",
    "refactorings": [
      {
        "description": "Add Attribute Modifier final in attribute private exitOnlyPillarNodeException : boolean from class com.graphhopper.reader.OSMReader",
        "type": "Add Attribute Modifier"
      },
      {
        "description": "Add Attribute Modifier final in attribute private outExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
        "type": "Add Attribute Modifier"
      },
      {
        "description": "Add Attribute Modifier final in attribute private inExplorerMap : Map<FlagEncoder,EdgeExplorer> from class com.graphhopper.reader.OSMReader",
        "type": "Add Attribute Modifier"
      },
      {
        "description": "Rename Parameter storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type storage : GraphStorage to ghStorage : GraphHopperStorage in method public OSMReader(ghStorage GraphHopperStorage) from class com.graphhopper.reader.OSMReader",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Attribute graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
        "type": "Rename Attribute"
      },
      {
        "description": "Change Attribute Type graphStorage : GraphStorage to graph : Graph in class com.graphhopper.reader.OSMReader",
        "type": "Change Attribute Type"
      },
      {
        "description": "Rename Attribute graphStorage : GraphStorage to ghStorage : GraphStorage in class com.graphhopper.reader.OSMReader",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/reader/OSMReader.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "PrepareContractionHierarchies.java",
    "refactorings": [
      {
        "description": "Change Attribute Type prepareGraph : LevelGraph to prepareGraph : LevelGraphImpl in class com.graphhopper.routing.ch.PrepareContractionHierarchies",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Parameter Type g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter g : LevelGraph to baseGraph : Graph in method public PrepareContractionHierarchies(dir Directory, baseGraph Graph, levelGraph LevelGraph, encoder FlagEncoder, weighting Weighting, traversalMode TraversalMode) from class com.graphhopper.routing.ch.PrepareContractionHierarchies",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "LevelEdgeFilter.java",
    "refactorings": [],
    "filePath": "core/src/main/java/com/graphhopper/routing/util/LevelEdgeFilter.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "PrepareRoutingSubnetworks.java",
    "refactorings": [
      {
        "description": "Change Parameter Type g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter g : GraphStorage to ghStorage : GraphHopperStorage in method public PrepareRoutingSubnetworks(ghStorage GraphHopperStorage, em EncodingManager) from class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Attribute g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
        "type": "Rename Attribute"
      },
      {
        "description": "Change Attribute Type g : GraphStorage to baseGraph : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworks",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/routing/util/PrepareRoutingSubnetworks.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "TarjansStronglyConnectedComponentsAlgorithm.java",
    "refactorings": [
      {
        "description": "Change Parameter Type g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
        "type": "Change Parameter Type"
      },
      {
        "description": "Remove Parameter Modifier final in parameter g : GraphStorage in method public TarjansStronglyConnectedComponentsAlgorithm(g GraphStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
        "type": "Remove Parameter Modifier"
      },
      {
        "description": "Rename Parameter g : GraphStorage to graph : GraphHopperStorage in method public TarjansStronglyConnectedComponentsAlgorithm(graph GraphHopperStorage, edgeFilter EdgeFilter) from class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
        "type": "Rename Parameter"
      },
      {
        "description": "Rename Attribute g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
        "type": "Rename Attribute"
      },
      {
        "description": "Change Attribute Type g : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/routing/util/TarjansStronglyConnectedComponentsAlgorithm.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseGraph.java",
    "refactorings": [
      {
        "description": "Remove Parameter Modifier final in parameter filter : EdgeFilter in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.BaseGraph",
        "type": "Remove Parameter Modifier"
      },
      {
        "description": "Rename Parameter bothDirections : boolean to bothDirection : boolean in method public edge(a int, b int, distance double, bothDirection boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/storage/BaseGraph.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "GHNodeAccess.java",
    "refactorings": [
      {
        "description": "Change Attribute Type that : GraphHopperStorage to that : BaseGraph in class com.graphhopper.storage.GHNodeAccess",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Parameter Type that : GraphHopperStorage to that : BaseGraph in method public GHNodeAccess(that BaseGraph, withElevation boolean) from class com.graphhopper.storage.GHNodeAccess",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/storage/GHNodeAccess.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "Graph.java",
    "refactorings": [],
    "filePath": "core/src/main/java/com/graphhopper/storage/Graph.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphBuilder.java",
    "refactorings": [
      {
        "description": "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphBuild() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type LevelGraphStorage to LevelGraph in method public levelGraphCreate() : LevelGraph from class com.graphhopper.storage.GraphBuilder",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public build() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public create() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public load() : GraphHopperStorage from class com.graphhopper.storage.GraphBuilder",
        "type": "Change Return Type"
      },
      {
        "description": "Rename Attribute level : boolean to levelGraph : boolean in class com.graphhopper.storage.GraphBuilder",
        "type": "Rename Attribute"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/storage/GraphBuilder.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphExtension.java",
    "refactorings": [
      {
        "description": "Rename Class com.graphhopper.storage.GraphExtension.NoExtendedStorage renamed to com.graphhopper.storage.GraphExtension.NoOpExtension",
        "type": "Rename Class"
      },
      {
        "description": "Change Parameter Type grap : GraphStorage to grap : Graph in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
        "type": "Change Parameter Type"
      },
      {
        "description": "Add Parameter dir : Directory in method public init(grap Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension.NoOpExtension",
        "type": "Add Parameter"
      },
      {
        "description": "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
        "type": "Change Parameter Type"
      },
      {
        "description": "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.GraphExtension",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/storage/GraphExtension.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphHopperStorage.java",
    "refactorings": [
      {
        "description": "Add Class Modifier final in class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Class Modifier"
      },
      {
        "description": "Add Method Modifier final in method public getNodes() : int from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public getNodeAccess() : NodeAccess from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public getBounds() : BBox from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public edge(a int, b int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public getAllEdges() : AllEdgesIterator from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public getEdgeProps(edgeId int, adjNode int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public createEdgeExplorer(filter EdgeFilter) : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public createEdgeExplorer() : EdgeExplorer from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public copyTo(g Graph) : Graph from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Add Method Modifier final in method public getExtension() : GraphExtension from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public create(byteCount long) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Change Return Type"
      },
      {
        "description": "Add Method Annotation @Override in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
        "type": "Add Method Annotation"
      },
      {
        "description": "Change Method Access Modifier package to public in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
        "type": "Change Method Access Modifier"
      },
      {
        "description": "Add Method Modifier final in method public reverseFlags(edgePointer long, flags long) : long from class com.graphhopper.storage.GraphHopperStorage.GraphHopperStorage.baseGraphPropAccess.new InternalGraphPropertyAccess",
        "type": "Add Method Modifier"
      },
      {
        "description": "Rename Parameter bothDirection : boolean to bothDirections : boolean in method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Rename Parameter"
      },
      {
        "description": "Add Method Modifier final in method public edge(a int, b int, distance double, bothDirections boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage",
        "type": "Add Method Modifier"
      },
      {
        "description": "Merge Attribute [nodes : DataAccess, nodeAccess : NodeAccess] to baseGraph : BaseGraph in class com.graphhopper.storage.GraphHopperStorage",
        "type": "Merge Attribute"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "GraphStorage.java",
    "refactorings": [],
    "filePath": "core/src/main/java/com/graphhopper/storage/GraphStorage.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalGraphEventListener.java",
    "refactorings": [],
    "filePath": "core/src/main/java/com/graphhopper/storage/InternalGraphEventListener.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "InternalGraphPropertyAccess.java",
    "refactorings": [],
    "filePath": "core/src/main/java/com/graphhopper/storage/InternalGraphPropertyAccess.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "LevelGraphImpl.java",
    "refactorings": [],
    "filePath": "core/src/main/java/com/graphhopper/storage/LevelGraphImpl.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "TurnCostExtension.java",
    "refactorings": [
      {
        "description": "Change Parameter Type graph : GraphStorage to graph : Graph in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
        "type": "Change Parameter Type"
      },
      {
        "description": "Add Parameter dir : Directory in method public init(graph Graph, dir Directory) : void from class com.graphhopper.storage.TurnCostExtension",
        "type": "Add Parameter"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/storage/TurnCostExtension.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "LocationIndexTree.java",
    "refactorings": [],
    "filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTree.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "GHUtility.java",
    "refactorings": [
      {
        "description": "Inline Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage inlined to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
        "type": "Inline Method"
      },
      {
        "description": "Localize Parameter outdir : Directory to outdir : Directory in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
        "type": "Localize Parameter"
      },
      {
        "description": "Extract Variable outdir : Directory in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
        "type": "Extract Variable"
      },
      {
        "description": "Change Parameter Type store : GraphStorage to store : GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public newStorage(store GraphHopperStorage) : GraphHopperStorage from class com.graphhopper.util.GHUtility",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "Measurement.java",
    "refactorings": [
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package start(args CmdArgs) : void from class com.graphhopper.tools.Measurement",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Parameter Type g : GraphStorage to g : GraphHopperStorage in method private printGraphDetails(g GraphHopperStorage, vehicleStr String) : void from class com.graphhopper.tools.Measurement",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "tools/src/main/java/com/graphhopper/tools/Measurement.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "MiniGraphUI.java",
    "refactorings": [],
    "filePath": "tools/src/main/java/com/graphhopper/ui/MiniGraphUI.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultModule.java",
    "refactorings": [],
    "filePath": "web/src/main/java/com/graphhopper/http/DefaultModule.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "InfoServlet.java",
    "refactorings": [],
    "filePath": "web/src/main/java/com/graphhopper/http/InfoServlet.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "main"
  },
  {
    "fileName": "TestAlgoCollector.java",
    "refactorings": [{
      "description": "Add Parameter baseGraph : Graph in method public AlgoHelperEntry(g Graph, baseGraph Graph, opts AlgorithmOptions, idx LocationIndex) from class com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/com/graphhopper/routing/util/TestAlgoCollector.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphHopperAPITest.java",
    "refactorings": [
      {
        "description": "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testLoad() : void from class com.graphhopper.GraphHopperAPITest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testDisconnected179() : void from class com.graphhopper.GraphHopperAPITest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/GraphHopperAPITest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphHopperTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "OSMReaderTest.java",
    "refactorings": [
      {
        "description": "Change Variable Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected importData() : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.GraphHopperTest",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Variable Type graph : GraphStorage to graph : GraphHopperStorage in method public testMain() : void from class com.graphhopper.reader.OSMReaderTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testWithBounds.hopper.new GraphHopperTest",
        "type": "Change Parameter Type"
      },
      {
        "description": "Extract Variable ghStorage : GraphHopperStorage in method public testRelation() : void from class com.graphhopper.reader.OSMReaderTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type graph : GraphStorage to graph : Graph in method public testTurnRestrictions() : void from class com.graphhopper.reader.OSMReaderTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testEstimatedCenter() : void from class com.graphhopper.reader.OSMReaderTest",
        "type": "Rename Variable"
      },
      {
        "description": "Change Parameter Type tmpGraph : GraphStorage to tmpGraph : GraphHopperStorage in method protected createReader(tmpGraph GraphHopperStorage) : DataReader from class com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM.hopper.importOrLoad.setElevation.new GraphHopperTest",
        "type": "Change Parameter Type"
      },
      {
        "description": "Extract Variable ghStorage : GraphHopperStorage in method public testTurnFlagCombination() : void from class com.graphhopper.reader.OSMReaderTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method package newGraph(directory String, encodingManager EncodingManager, is3D boolean, turnRestrictionsImport boolean) : GraphHopperStorage from class com.graphhopper.reader.OSMReaderTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/reader/OSMReaderTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "OSMTurnRelationTest.java",
    "refactorings": [
      {
        "description": "Change Variable Type graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graph : GraphStorage to ghStorage : GraphHopperStorage in method public testGetRestrictionAsEntries() : void from class com.graphhopper.reader.OSMTurnRelationTest",
        "type": "Rename Variable"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/reader/OSMTurnRelationTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "AStarBidirectionTest.java",
    "refactorings": [{
      "description": "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarBidirectionTest",
      "type": "Change Parameter Type"
    }],
    "filePath": "core/src/test/java/com/graphhopper/routing/AStarBidirectionTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "AStarTest.java",
    "refactorings": [{
      "description": "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.AStarTest",
      "type": "Change Parameter Type"
    }],
    "filePath": "core/src/test/java/com/graphhopper/routing/AStarTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractRoutingAlgorithmTester.java",
    "refactorings": [
      {
        "description": "Rename Method protected createGraph(em EncodingManager, is3D boolean) : Graph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method protected createGraph(is3D boolean) : Graph renamed to protected createGHStorage(is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method protected createTestGraph() : Graph renamed to protected createTestStorage() : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method package calcPathViaQuery(graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method package calcPathViaQuery(weighting String, graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Method"
      },
      {
        "description": "Change Attribute Type matrixGraph : Graph to matrixGraph : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testCalcShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWeightLimit() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWeightLimit_issue380() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graphShortest : Graph to graphShortest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graphFastest : Graph to graphFastest : GraphHopperStorage in method public testCalcFastestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graphShortest : Graph to ghStorage : GraphHopperStorage in method public testCalcFootPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testNoPathFound() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testWikipediaShortestPath() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testBidirectional2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testCannotCalculateSP() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug1() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testDirectedGraphBug2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testWithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_FromEqualsTo() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_BiGraph() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable graph : Graph to ghStorage : GraphHopperStorage in method public testViaEdges_WithCoordinates() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testViaEdges_SpecialCases() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testQueryGraphAndFastest() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public test0SpeedButUnblocked_Issue242() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testTwoWeightsPerEdge2() : void from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method protected createWikipediaTestGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method public getMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type tmpGraph : Graph to tmpGraph : GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method private createMatrixAlikeGraph() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method protected createGHStorage(is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type g : Graph to g : GraphHopperStorage in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Method Access Modifier public to protected in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Method Access Modifier"
      },
      {
        "description": "Add Method Modifier final in method protected createAlgo(g GraphHopperStorage) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Add Method Modifier"
      },
      {
        "description": "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Method Access Modifier public to protected in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Method Access Modifier"
      },
      {
        "description": "Add Method Modifier final in method protected createAlgo(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithm from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Add Method Modifier"
      },
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method protected createTestStorage() : GraphHopperStorage from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter graph : Graph to ghStorage : GraphHopperStorage in method package calcPath(ghStorage GraphHopperStorage, fromNode1 int, fromNode2 int, toNode1 int, toNode2 int) : Path from class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "DijkstraBidirectionRefTest.java",
    "refactorings": [{
      "description": "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraBidirectionRefTest",
      "type": "Change Parameter Type"
    }],
    "filePath": "core/src/test/java/com/graphhopper/routing/DijkstraBidirectionRefTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "DijkstraOneToManyTest.java",
    "refactorings": [
      {
        "description": "Change Variable Type g : Graph to g : GraphHopperStorage in method public testIssue239_and362() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : Graph to g : GraphHopperStorage in method public testDifferentEdgeFilter() : void from class com.graphhopper.routing.DijkstraOneToManyTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraOneToManyTest",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/DijkstraOneToManyTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "DijkstraTest.java",
    "refactorings": [{
      "description": "Change Parameter Type prepareGraph : Graph to prepareGraph : GraphHopperStorage in method public createFactory(prepareGraph GraphHopperStorage, prepareOpts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.DijkstraTest",
      "type": "Change Parameter Type"
    }],
    "filePath": "core/src/test/java/com/graphhopper/routing/DijkstraTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "EdgeBasedRoutingAlgorithmTest.java",
    "refactorings": [
      {
        "description": "Rename Method protected createGraph(em EncodingManager) : GraphStorage renamed to protected createStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
        "type": "Rename Method"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnRestriction() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testUTurns() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testBasicTurnCosts() : void from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method protected createStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/EdgeBasedRoutingAlgorithmTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "PathTest.java",
    "refactorings": [
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFound() : void from class com.graphhopper.routing.PathTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTime() : void from class com.graphhopper.routing.PathTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testWayList() : void from class com.graphhopper.routing.PathTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/PathTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "QueryGraphTest.java",
    "refactorings": [
      {
        "description": "Change Attribute Type g : GraphStorage to g : GraphHopperStorage in class com.graphhopper.routing.QueryGraphTest",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Variable Type graphWithTurnCosts : GraphStorage to graphWithTurnCosts : GraphHopperStorage in method public testTurnCostsProperlyPropagated_Issue282() : void from class com.graphhopper.routing.QueryGraphTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "RoutingAlgorithmIT.java",
    "refactorings": [
      {
        "description": "Change Variable Type graph : Graph to graph : GraphHopperStorage in method public testPerformance() : void from class com.graphhopper.routing.RoutingAlgorithmIT",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
        "type": "Rename Parameter"
      },
      {
        "description": "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method package createAlgos(ghStorage GraphHopperStorage, idx LocationIndex, encoder FlagEncoder, withCh boolean, tMode TraversalMode, weighting Weighting, manager EncodingManager) : List<AlgoHelperEntry> from class com.graphhopper.routing.RoutingAlgorithmIT",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "DijkstraBidirectionCHTest.java",
    "refactorings": [
      {
        "description": "Rename Method protected createGraph(em EncodingManager, is3D boolean) : LevelGraph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Rename Method"
      },
      {
        "description": "Change Attribute Type preparedMatrixGraph : Graph to preparedMatrixGraph : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Variable Type g2 : LevelGraphStorage to g2 : LevelGraphImpl in method public testPathRecursiveUnpacking() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable g : Graph to ghStorage : GraphHopperStorage in method public testBaseGraph() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type g : Graph to g : GraphHopperStorage in method public testBaseGraphMultipleVehicles() : void from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable lg : LevelGraph to ghStorage : GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Rename Variable"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method public getMatrixGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type LevelGraph to GraphHopperStorage in method protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Change Parameter Type"
      },
      {
        "description": "Rename Parameter g : Graph to ghStorage : GraphHopperStorage in method public createFactory(ghStorage GraphHopperStorage, opts AlgorithmOptions) : RoutingAlgorithmFactory from class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/ch/DijkstraBidirectionCHTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "PrepareContractionHierarchiesTest.java",
    "refactorings": [
      {
        "description": "Rename Method package createGraph() : LevelGraph renamed to package createGHStorage() : GraphHopperStorage in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Rename Method"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathSkipNode2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testShortestPathLimit() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testAddShortcuts() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testMoreComplexGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph2() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testDirectedGraph3() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testRoundaboutUnpacking() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testFindShortcuts_Roundabout() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraphStorage to g : GraphHopperStorage in method public testUnpackingOrder_Fastest() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testCircleBug() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testBug178() : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type LevelGraph to GraphHopperStorage in method package createExampleGraph() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage() : GraphHopperStorage from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type g : LevelGraphStorage to g : LevelGraph in method package initUnpackingGraph(g LevelGraph, w Weighting) : void from class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareContractionHierarchiesTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "Bike2WeightFlagEncoderTest.java",
    "refactorings": [{
      "description": "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method private initExampleGraph() : Graph from class com.graphhopper.routing.util.Bike2WeightFlagEncoderTest",
      "type": "Change Variable Type"
    }],
    "filePath": "core/src/test/java/com/graphhopper/routing/util/Bike2WeightFlagEncoderTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "CarFlagEncoderTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "PrepareRoutingSubnetworksTest.java",
    "refactorings": [
      {
        "description": "Rename Method package createGraph(eman EncodingManager) : GraphStorage renamed to package createStorage(eman EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method package createSubnetworkTestGraph() : GraphStorage renamed to package createSubnetworkTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method package createSubnetworkTestGraph2(em EncodingManager) : GraphStorage renamed to package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method package createDeadEndUnvisitedNetworkGraph(em EncodingManager) : GraphStorage renamed to package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method package createTarjanTestGraph() : GraphStorage renamed to package createTarjanTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Rename Method"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testFindSubnetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testKeepLargestNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveSubnetworkIfOnlyOneVehicle() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testRemoveDeadEndUnvisitedNetworks() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testTarjan() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method public testNodeOrderingRegression() : void from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method package createStorage(eman EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method package createTarjanTestStorage() : GraphHopperStorage from class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/routing/util/PrepareRoutingSubnetworksTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractGraphStorageTester.java",
    "refactorings": [
      {
        "description": "Rename Method protected createGraph() : GraphStorage renamed to protected createGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method protected newRAMGraph() : GraphStorage renamed to protected newRAMGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Rename Method"
      },
      {
        "description": "Change Attribute Type graph : GraphStorage to graph : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public testCopyTo() : void from class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type g : GraphStorage to g : GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method protected createGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Change Return Type"
      },
      {
        "description": "Add Method Modifier final in method protected newRAMGHStorage() : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Add Method Modifier"
      },
      {
        "description": "Rename Method package abstract createGraph(location String, is3D boolean) : GraphStorage renamed to package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Rename Method"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method package abstract createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.AbstractGraphStorageTester",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphStorageTester.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphHopperStorageCHTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphHopperStorageTest.java",
    "refactorings": [
      {
        "description": "Rename Method public createGraph(location String, enabled3D boolean) : GraphStorage renamed to public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Method protected newGraph(dir Directory, enabled3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
        "type": "Rename Method"
      },
      {
        "description": "Rename Variable graph : GraphHopperStorage to storage : GraphHopperStorage in method public internalDisconnect() : void from class com.graphhopper.storage.GraphHopperStorageTest",
        "type": "Rename Variable"
      },
      {
        "description": "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
        "type": "Change Return Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphHopperStorageWithTurnCostsTest.java",
    "refactorings": [
      {
        "description": "Rename Method protected newGraph(dir Directory, is3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
        "type": "Rename Method"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageWithTurnCostsTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "GraphStorageViaMMapTest.java",
    "refactorings": [
      {
        "description": "Rename Method public createGraph(location String, is3D boolean) : GraphStorage renamed to public createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphStorageViaMMapTest",
        "type": "Rename Method"
      },
      {
        "description": "Change Variable Type gs : GraphStorage to gs : GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type GraphStorage to GraphHopperStorage in method public createGHStorage(location String, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.GraphStorageViaMMapTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/storage/GraphStorageViaMMapTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractLocationIndexTester.java",
    "refactorings": [
      {
        "description": "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : Graph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
        "type": "Rename Method"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
        "type": "Change Return Type"
      },
      {
        "description": "Rename Method package createGraph(encodingManager EncodingManager) : Graph renamed to package createGHStorage(encodingManager EncodingManager) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
        "type": "Rename Method"
      },
      {
        "description": "Change Return Type Graph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.AbstractLocationIndexTester",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/storage/index/AbstractLocationIndexTester.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "Location2IDQuadtreeTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/com/graphhopper/storage/index/Location2IDQuadtreeTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "LocationIndexTreeForLevelGraphTest.java",
    "refactorings": [
      {
        "description": "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : LevelGraph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "type": "Rename Method"
      },
      {
        "description": "Extract Variable lg : LevelGraph in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "type": "Extract Variable"
      },
      {
        "description": "Change Variable Type g : LevelGraph to g : GraphHopperStorage in method public testLevelGraph() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Rename Variable lg : LevelGraphStorage to g : GraphHopperStorage in method public testLevelGraphBug() : void from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "type": "Rename Variable"
      },
      {
        "description": "Change Return Type LevelGraph to GraphHopperStorage in method package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage from class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "type": "Change Return Type"
      }
    ],
    "filePath": "core/src/test/java/com/graphhopper/storage/index/LocationIndexTreeForLevelGraphTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "LocationIndexTreeTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/com/graphhopper/storage/index/LocationIndexTreeTest.java",
    "commit": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractPubSubSupport.java",
    "refactorings": [{
      "description": "Change Method Access Modifier public to protected in method protected handlePublicationError(error PublicationError) : void from class net.engio.mbassy.bus.AbstractPubSubSupport",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "src/main/java/net/engio/mbassy/bus/AbstractPubSubSupport.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "main"
  },
  {
    "fileName": "ErrorHandlingSupport.java",
    "refactorings": [],
    "filePath": "src/main/java/net/engio/mbassy/bus/common/ErrorHandlingSupport.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "main"
  },
  {
    "fileName": "IMessageBus.java",
    "refactorings": [],
    "filePath": "src/main/java/net/engio/mbassy/bus/common/IMessageBus.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "main"
  },
  {
    "fileName": "Properties.java",
    "refactorings": [{
      "description": "Rename Attribute PublicationError : String to PublicationErrorHandlers : String in class net.engio.mbassy.bus.common.Properties.Handler",
      "type": "Rename Attribute"
    }],
    "filePath": "src/main/java/net/engio/mbassy/bus/common/Properties.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "main"
  },
  {
    "fileName": "StandardELResolutionContext.java",
    "refactorings": [],
    "filePath": "src/main/java/net/engio/mbassy/dispatch/el/StandardELResolutionContext.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "main"
  },
  {
    "fileName": "IMessageFilter.java",
    "refactorings": [],
    "filePath": "src/main/java/net/engio/mbassy/listener/IMessageFilter.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "main"
  },
  {
    "fileName": "SubscriptionFactory.java",
    "refactorings": [],
    "filePath": "src/main/java/net/engio/mbassy/subscription/SubscriptionFactory.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "main"
  },
  {
    "fileName": "AllTests.java",
    "refactorings": [{
      "description": "Modify Class Annotation @Suite.SuiteClasses({StrongConcurrentSetTest.class,WeakConcurrentSetTest.class,SyncAsyncTest.class,SyncBusTest.MBassadorTest.class,SyncBusTest.SyncMessageBusTest.class,FilterTest.class,MetadataReaderTest.class,MethodDispatchTest.class,DeadMessageTest.class,SynchronizedHandlerTest.class,SubscriptionManagerTest.class,AsyncFIFOBusTest.class,ConditionalHandlers.class}) to @Suite.SuiteClasses({StrongConcurrentSetTest.class,WeakConcurrentSetTest.class,SyncAsyncTest.class,SyncBusTest.MBassadorTest.class,SyncBusTest.SyncMessageBusTest.class,FilterTest.class,MetadataReaderTest.class,MethodDispatchTest.class,DeadMessageTest.class,SynchronizedHandlerTest.class,SubscriptionManagerTest.class,AsyncFIFOBusTest.class,ConditionalHandlerTest.class}) in class net.engio.mbassy.AllTests",
      "type": "Modify Class Annotation"
    }],
    "filePath": "src/test/java/net/engio/mbassy/AllTests.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "ConditionalHandlerTest.java",
    "refactorings": [],
    "filePath": "src/test/java/net/engio/mbassy/ConditionalHandlerTest.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "SubscriptionManagerTest.java",
    "refactorings": [],
    "filePath": "src/test/java/net/engio/mbassy/SubscriptionManagerTest.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "SyncAsyncTest.java",
    "refactorings": [{
      "description": "Rename Variable publishAndCheck : Runnable to asynchronousPublication : Runnable in method public testExceptionInHandlerInvocation() : void from class net.engio.mbassy.SyncAsyncTest",
      "type": "Rename Variable"
    }],
    "filePath": "src/test/java/net/engio/mbassy/SyncAsyncTest.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "SyncBusTest.java",
    "refactorings": [],
    "filePath": "src/test/java/net/engio/mbassy/SyncBusTest.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractPubSubSupportTest.java",
    "refactorings": [],
    "filePath": "src/test/java/net/engio/mbassy/bus/AbstractPubSubSupportTest.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "MessageBusTest.java",
    "refactorings": [{
      "description": "Extract Variable config : IBusConfiguration in method public SyncAsync(failOnError boolean) : IBusConfiguration from class net.engio.mbassy.common.MessageBusTest",
      "type": "Extract Variable"
    }],
    "filePath": "src/test/java/net/engio/mbassy/common/MessageBusTest.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "MessageManager.java",
    "refactorings": [],
    "filePath": "src/test/java/net/engio/mbassy/common/MessageManager.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "ExceptionThrowingListener.java",
    "refactorings": [{
      "description": "Change Parameter Type message : StandardMessage to message : Object in method public handle(message Object) : void from class net.engio.mbassy.listeners.ExceptionThrowingListener",
      "type": "Change Parameter Type"
    }],
    "filePath": "src/test/java/net/engio/mbassy/listeners/ExceptionThrowingListener.java",
    "commit": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "repository": "https://github.com/bennidi/mbassador.git",
    "fileType": "test"
  },
  {
    "fileName": "NdkLibraryDescription.java",
    "refactorings": [{
      "description": "Change Variable Type e : CxxPreprocessorInput.ConflictingHeadersException to e : CxxHeaders.ConflictingHeadersException in method private generateMakefile(params BuildRuleParams, resolver BuildRuleResolver) : Pair<BuildRule,Iterable<BuildRule>> from class com.facebook.buck.android.NdkLibraryDescription",
      "type": "Change Variable Type"
    }],
    "filePath": "src/com/facebook/buck/android/NdkLibraryDescription.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractCxxHeaders.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cxx/AbstractCxxHeaders.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractCxxPreprocessorInput.java",
    "refactorings": [{
      "description": "Change Thrown Exception Type ConflictingHeadersException to AbstractCxxHeaders.ConflictingHeadersException in method public concat(inputs Iterable<CxxPreprocessorInput>) : CxxPreprocessorInput from class com.facebook.buck.cxx.AbstractCxxPreprocessorInput",
      "type": "Change Thrown Exception Type"
    }],
    "filePath": "src/com/facebook/buck/cxx/AbstractCxxPreprocessorInput.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxDescriptionEnhancer.java",
    "refactorings": [
      {
        "description": "Rename Method public combineCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : CxxPreprocessorInput renamed to public collectCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : ImmutableList<CxxPreprocessorInput> in class com.facebook.buck.cxx.CxxDescriptionEnhancer",
        "type": "Rename Method"
      },
      {
        "description": "Change Variable Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method public createBuildRulesForCxxBinaryDescriptionArg(params BuildRuleParams, resolver BuildRuleResolver, cxxPlatform CxxPlatform, args CxxBinaryDescription.Arg, preprocessMode CxxPreprocessMode) : CxxLinkAndCompileRules from class com.facebook.buck.cxx.CxxDescriptionEnhancer",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type CxxPreprocessorInput to ImmutableList<CxxPreprocessorInput> in method public collectCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : ImmutableList<CxxPreprocessorInput> from class com.facebook.buck.cxx.CxxDescriptionEnhancer",
        "type": "Change Return Type"
      }
    ],
    "filePath": "src/com/facebook/buck/cxx/CxxDescriptionEnhancer.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxLibraryDescription.java",
    "refactorings": [{
      "description": "Change Variable Type cxxPreprocessorInputFromDependencies : CxxPreprocessorInput to cxxPreprocessorInputFromDependencies : ImmutableList<CxxPreprocessorInput> in method private requireObjects(params BuildRuleParams, ruleResolver BuildRuleResolver, pathResolver SourcePathResolver, cxxPlatform CxxPlatform, lexSources ImmutableMap<String,SourcePath>, yaccSources ImmutableMap<String,SourcePath>, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, exportedPreprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headers ImmutableMap<Path,SourcePath>, exportedHeaders ImmutableMap<Path,SourcePath>, compilerFlags ImmutableList<String>, sources ImmutableMap<String,CxxSource>, frameworkSearchPaths ImmutableList<Path>, preprocessMode CxxPreprocessMode, pic CxxSourceRuleFactory.PicType) : ImmutableMap<CxxPreprocessAndCompile,SourcePath> from class com.facebook.buck.cxx.CxxLibraryDescription",
      "type": "Change Variable Type"
    }],
    "filePath": "src/com/facebook/buck/cxx/CxxLibraryDescription.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxPreprocessAndCompile.java",
    "refactorings": [
      {
        "description": "Change Attribute Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in class com.facebook.buck.cxx.CxxPreprocessAndCompile",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Return Type CxxHeaders to ImmutableList<CxxHeaders> in method public getIncludes() : ImmutableList<CxxHeaders> from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
        "type": "Change Return Type"
      },
      {
        "description": "Change Parameter Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in method package CxxPreprocessAndCompile(params BuildRuleParams, resolver SourcePathResolver, operation CxxPreprocessAndCompileStep.Operation, preprocessor Optional<Tool>, preprocessorFlags Optional<ImmutableList<String>>, compiler Optional<Tool>, compilerFlags Optional<ImmutableList<String>>, output Path, input SourcePath, inputType CxxSource.Type, includeRoots ImmutableList<Path>, systemIncludeRoots ImmutableList<Path>, frameworkRoots ImmutableList<Path>, includes ImmutableList<CxxHeaders>, sanitizer DebugPathSanitizer) from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in method public preprocess(params BuildRuleParams, resolver SourcePathResolver, preprocessor Tool, flags ImmutableList<String>, output Path, input SourcePath, inputType CxxSource.Type, includeRoots ImmutableList<Path>, systemIncludeRoots ImmutableList<Path>, frameworkRoots ImmutableList<Path>, includes ImmutableList<CxxHeaders>, sanitizer DebugPathSanitizer) : CxxPreprocessAndCompile from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type includes : CxxHeaders to includes : ImmutableList<CxxHeaders> in method public preprocessAndCompile(params BuildRuleParams, resolver SourcePathResolver, preprocessor Tool, preprocessorFlags ImmutableList<String>, compiler Tool, compilerFlags ImmutableList<String>, output Path, input SourcePath, inputType CxxSource.Type, includeRoots ImmutableList<Path>, systemIncludeRoots ImmutableList<Path>, frameworkRoots ImmutableList<Path>, includes ImmutableList<CxxHeaders>, sanitizer DebugPathSanitizer, strategy CxxPreprocessMode) : CxxPreprocessAndCompile from class com.facebook.buck.cxx.CxxPreprocessAndCompile",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "src/com/facebook/buck/cxx/CxxPreprocessAndCompile.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxPreprocessables.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cxx/CxxPreprocessables.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxPythonExtensionDescription.java",
    "refactorings": [{
      "description": "Change Variable Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method private createExtensionBuildRule(params BuildRuleParams, ruleResolver BuildRuleResolver, cxxPlatform CxxPlatform, args A) : BuildRule from class com.facebook.buck.cxx.CxxPythonExtensionDescription",
      "type": "Change Variable Type"
    }],
    "filePath": "src/com/facebook/buck/cxx/CxxPythonExtensionDescription.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CxxSourceRuleFactory.java",
    "refactorings": [
      {
        "description": "Change Attribute Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "type": "Change Attribute Type"
      },
      {
        "description": "Change Parameter Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method public CxxSourceRuleFactory(params BuildRuleParams, resolver BuildRuleResolver, pathResolver SourcePathResolver, cxxPlatform CxxPlatform, cxxPreprocessorInput ImmutableList<CxxPreprocessorInput>, compilerFlags ImmutableList<String>) from class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "type": "Change Parameter Type"
      },
      {
        "description": "Change Parameter Type cxxPreprocessorInput : CxxPreprocessorInput to cxxPreprocessorInput : ImmutableList<CxxPreprocessorInput> in method public requirePreprocessAndCompileRules(params BuildRuleParams, resolver BuildRuleResolver, pathResolver SourcePathResolver, cxxPlatform CxxPlatform, cxxPreprocessorInput ImmutableList<CxxPreprocessorInput>, compilerFlags ImmutableList<String>, strategy CxxPreprocessMode, sources ImmutableMap<String,CxxSource>, pic PicType) : ImmutableMap<CxxPreprocessAndCompile,SourcePath> from class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "src/com/facebook/buck/cxx/CxxSourceRuleFactory.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "PrebuiltCxxLibrary.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/cxx/PrebuiltCxxLibrary.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "OCamlRuleBuilder.java",
    "refactorings": [
      {
        "description": "Change Variable Type e : CxxPreprocessorInput.ConflictingHeadersException to e : CxxHeaders.ConflictingHeadersException in method public createBulkBuildRule(ocamlBuckConfig OCamlBuckConfig, params BuildRuleParams, resolver BuildRuleResolver, srcs ImmutableList<OCamlSource>, isLibrary boolean, argFlags ImmutableList<String>, linkerFlags ImmutableList<String>) : AbstractBuildRule from class com.facebook.buck.ocaml.OCamlRuleBuilder",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Variable Type e : CxxPreprocessorInput.ConflictingHeadersException to e : CxxHeaders.ConflictingHeadersException in method public createFineGrainedBuildRule(ocamlBuckConfig OCamlBuckConfig, params BuildRuleParams, resolver BuildRuleResolver, srcs ImmutableList<OCamlSource>, isLibrary boolean, argFlags ImmutableList<String>, linkerFlags ImmutableList<String>) : AbstractBuildRule from class com.facebook.buck.ocaml.OCamlRuleBuilder",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "src/com/facebook/buck/ocaml/OCamlRuleBuilder.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "NdkCxxPlatformTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/android/NdkCxxPlatformTest.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxBinaryDescriptionTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cxx/CxxBinaryDescriptionTest.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxCompilationDatabaseTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cxx/CxxCompilationDatabaseTest.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxDescriptionEnhancerTest.java",
    "refactorings": [
      {
        "description": "Change Variable Type combinedInput : CxxPreprocessorInput to combinedInput : ImmutableList<CxxPreprocessorInput> in method public libraryTestIncludesPrivateHeadersOfLibraryUnderTest() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Add Thrown Exception Type Exception in method public libraryTestIncludesPrivateHeadersOfLibraryUnderTest() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
        "type": "Add Thrown Exception Type"
      },
      {
        "description": "Change Variable Type otherInput : CxxPreprocessorInput to otherInput : ImmutableList<CxxPreprocessorInput> in method public nonTestLibraryDepDoesNotIncludePrivateHeadersOfLibrary() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
        "type": "Change Variable Type"
      },
      {
        "description": "Add Thrown Exception Type Exception in method public nonTestLibraryDepDoesNotIncludePrivateHeadersOfLibrary() : void from class com.facebook.buck.cxx.CxxDescriptionEnhancerTest",
        "type": "Add Thrown Exception Type"
      }
    ],
    "filePath": "test/com/facebook/buck/cxx/CxxDescriptionEnhancerTest.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxPreprocessAndCompileTest.java",
    "refactorings": [{
      "description": "Change Attribute Type DEFAULT_INCLUDES : CxxHeaders to DEFAULT_INCLUDES : ImmutableList<CxxHeaders> in class com.facebook.buck.cxx.CxxPreprocessAndCompileTest",
      "type": "Change Attribute Type"
    }],
    "filePath": "test/com/facebook/buck/cxx/CxxPreprocessAndCompileTest.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxPreprocessablesTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cxx/CxxPreprocessablesTest.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxSourceRuleFactoryHelper.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cxx/CxxSourceRuleFactoryHelper.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "CxxSourceRuleFactoryTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/cxx/CxxSourceRuleFactoryTest.java",
    "commit": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "DriverConductorTest.java",
    "refactorings": [
      {
        "description": "Rename Method private processTimersUntil(condition BooleanSupplier) : long renamed to private doWorkUntil(condition BooleanSupplier) : long in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Rename Method"
      },
      {
        "description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldBeAbleToAddSinglePublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldTimeoutPublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldTimeoutPublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Inline Method"
      },
      {
        "description": "Extract Variable receiveChannelEndpoint : ReceiveChannelEndpoint in method public shouldTimeoutSubscription() : void from class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Extract Variable"
      },
      {
        "description": "Extract Variable receiveChannelEndpoint : ReceiveChannelEndpoint in method public shouldNotTimeoutSubscriptionOnKeepAlive() : void from class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "type": "Extract Variable"
      }
    ],
    "filePath": "aeron-driver/src/test/java/uk/co/real_logic/aeron/driver/DriverConductorTest.java",
    "commit": "https://github.com/real-logic/Aeron/commit/35893c115ba23bd62a7036a33390420f074ce660",
    "repository": "https://github.com/real-logic/Aeron.git",
    "fileType": "test"
  },
  {
    "fileName": "ObjectWriter.java",
    "refactorings": [
      {
        "description": "Change Attribute Access Modifier public to private in attribute private rootType : JavaType from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Change Attribute Access Modifier public to private in attribute private valueSerializer : JsonSerializer<Object> from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Encapsulate Attribute private valueSerializer : JsonSerializer<Object> from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Encapsulate Attribute"
      },
      {
        "description": "Change Attribute Access Modifier public to private in attribute private typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Change Attribute Access Modifier"
      },
      {
        "description": "Encapsulate Attribute private typeSerializer : TypeSerializer from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Encapsulate Attribute"
      },
      {
        "description": "Rename Parameter type : JavaType to rootT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Rename Parameter"
      },
      {
        "description": "Add Parameter baseT : JavaType in method private Prefetch(rootT JavaType, baseT JavaType, ser JsonSerializer<Object>, typeSer TypeSerializer) from class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Add Parameter"
      },
      {
        "description": "Inline Method private _writeCloseableValue(gen JsonGenerator, value Object, cfg SerializationConfig) : void inlined to public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter",
        "type": "Inline Method"
      },
      {
        "description": "Remove Parameter config : SerializationConfig in method protected _serializerProvider(config SerializationConfig) : DefaultSerializerProvider from class com.fasterxml.jackson.databind.ObjectWriter",
        "type": "Remove Parameter"
      },
      {
        "description": "Remove Parameter cfg : SerializationConfig in method private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void from class com.fasterxml.jackson.databind.ObjectWriter",
        "type": "Remove Parameter"
      },
      {
        "description": "Replace Variable With Attribute config : SerializationConfig to _config : SerializationConfig in method protected _serializerProvider() : DefaultSerializerProvider from class com.fasterxml.jackson.databind.ObjectWriter",
        "type": "Replace Variable With Attribute"
      },
      {
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Extract And Move Method"
      },
      {
        "description": "Inline Variable ser : JsonSerializer<Object> in method public writeValue(gen JsonGenerator, value Object) : void from class com.fasterxml.jackson.databind.ObjectWriter",
        "type": "Inline Variable"
      },
      {
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from protected _configAndWriteValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Extract And Move Method"
      },
      {
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "type": "Extract And Move Method"
      }
    ],
    "filePath": "src/main/java/com/fasterxml/jackson/databind/ObjectWriter.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "main"
  },
  {
    "fileName": "SequenceWriter.java",
    "refactorings": [],
    "filePath": "src/main/java/com/fasterxml/jackson/databind/SequenceWriter.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "main"
  },
  {
    "fileName": "MapperConfigBase.java",
    "refactorings": [{
      "description": "Add Method Annotation @Override in method public getActiveView() : Class<?> from class com.fasterxml.jackson.databind.cfg.MapperConfigBase",
      "type": "Add Method Annotation"
    }],
    "filePath": "src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultSerializerProvider.java",
    "refactorings": [{
      "description": "Parameterize Variable ser : JsonSerializer<Object> to valueSer : JsonSerializer<Object> in method public serializePolymorphic(gen JsonGenerator, value Object, rootType JavaType, valueSer JsonSerializer<Object>, typeSer TypeSerializer) : void from class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider",
      "type": "Parameterize Variable"
    }],
    "filePath": "src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "main"
  },
  {
    "fileName": "PolyMapWriter827Test.java",
    "refactorings": [{
      "description": "Add Method Annotation @Override in method public toString() : String from class com.fasterxml.jackson.databind.seq.PolyMapWriter827Test.CustomKey",
      "type": "Add Method Annotation"
    }],
    "filePath": "src/test/java/com/fasterxml/jackson/databind/seq/PolyMapWriter827Test.java",
    "commit": "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "fileType": "test"
  },
  {
    "fileName": "DiscoveryClient.java",
    "refactorings": [
      {
        "description": "Extract Method public DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs) extracted from public DiscoveryClient(myInfo InstanceInfo, config EurekaClientConfig, args DiscoveryClientOptionalArgs) in class com.netflix.discovery.DiscoveryClient",
        "type": "Extract Method"
      },
      {
        "description": "Add Method Annotation @Deprecated in method public DiscoveryClient(myInfo InstanceInfo, config EurekaClientConfig) from class com.netflix.discovery.DiscoveryClient",
        "type": "Add Method Annotation"
      },
      {
        "description": "Add Method Annotation @Deprecated in method public DiscoveryClient(myInfo InstanceInfo, config EurekaClientConfig, args DiscoveryClientOptionalArgs) from class com.netflix.discovery.DiscoveryClient",
        "type": "Add Method Annotation"
      },
      {
        "description": "Localize Parameter myInfo : InstanceInfo to myInfo : InstanceInfo in method package DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs, backupRegistryProvider Provider<BackupRegistry>) from class com.netflix.discovery.DiscoveryClient",
        "type": "Localize Parameter"
      },
      {
        "description": "Add Parameter applicationInfoManager : ApplicationInfoManager in method package DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs, backupRegistryProvider Provider<BackupRegistry>) from class com.netflix.discovery.DiscoveryClient",
        "type": "Add Parameter"
      }
    ],
    "filePath": "eureka-client/src/main/java/com/netflix/discovery/DiscoveryClient.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "main"
  },
  {
    "fileName": "StatusChangeEvent.java",
    "refactorings": [],
    "filePath": "eureka-client/src/main/java/com/netflix/discovery/StatusChangeEvent.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "main"
  },
  {
    "fileName": "ExampleEurekaGovernatedService.java",
    "refactorings": [],
    "filePath": "eureka-examples/src/main/java/com/netflix/eureka/ExampleEurekaGovernatedService.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractDiscoveryClientTester.java",
    "refactorings": [{
      "description": "Add Class Modifier abstract in class com.netflix.discovery.AbstractDiscoveryClientTester",
      "type": "Add Class Modifier"
    }],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/AbstractDiscoveryClientTester.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "BackUpRegistryTest.java",
    "refactorings": [{
      "description": "Extract Variable applicationInfoManager : ApplicationInfoManager in method public setUp(enableRemote boolean) : void from class com.netflix.discovery.BackUpRegistryTest",
      "type": "Extract Variable"
    }],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/BackUpRegistryTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "BaseDiscoveryClientTester.java",
    "refactorings": [],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/BaseDiscoveryClientTester.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "DiscoveryClientEventBusTest.java",
    "refactorings": [],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/DiscoveryClientEventBusTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "DiscoveryClientRegisterUpdateTest.java",
    "refactorings": [],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/DiscoveryClientRegisterUpdateTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "DiscoveryClientRule.java",
    "refactorings": [{
      "description": "Rename Method public setupDiscoveryClient(clientInstanceInfo InstanceInfo) : EurekaClient renamed to public setupInjector(clientInstanceInfo InstanceInfo) : EurekaClient in class com.netflix.discovery.DiscoveryClientRule",
      "type": "Rename Method"
    }],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/DiscoveryClientRule.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "MockRemoteEurekaServer.java",
    "refactorings": [],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/MockRemoteEurekaServer.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "EurekaModuleTest.java",
    "refactorings": [],
    "filePath": "eureka-client/src/test/java/com/netflix/discovery/guice/EurekaModuleTest.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractTester.java",
    "refactorings": [{
      "description": "Extract Variable applicationInfoManager : ApplicationInfoManager in method public setUp() : void from class com.netflix.eureka.AbstractTester",
      "type": "Extract Variable"
    }],
    "filePath": "eureka-core/src/test/java/com/netflix/eureka/AbstractTester.java",
    "commit": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "repository": "https://github.com/Netflix/eureka.git",
    "fileType": "test"
  },
  {
    "fileName": "CodeGenerator.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/jscomp/CodeGenerator.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "NodeUtil.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/jscomp/NodeUtil.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "IRFactory.java",
    "refactorings": [
      {
        "description": "Extract Variable type : TypeDeclarationNode in method package processFunctionType(tree FunctionTypeTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
        "type": "Extract Variable"
      },
      {
        "description": "Extract Variable restType : TypeDeclarationNode in method package processFunctionType(tree FunctionTypeTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
        "type": "Extract Variable"
      },
      {
        "description": "Extract Variable restName : String in method package processFunctionType(tree FunctionTypeTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
        "type": "Extract Variable"
      },
      {
        "description": "Rename Variable parameters : LinkedHashMap<String,TypeDeclarationNode> to requiredParams : LinkedHashMap<String,TypeDeclarationNode> in method package processFunctionType(tree FunctionTypeTree) : Node from class com.google.javascript.jscomp.parsing.IRFactory.TransformDispatcher",
        "type": "Rename Variable"
      }
    ],
    "filePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "TypeDeclarationsIRFactory.java",
    "refactorings": [{
      "description": "Split Variable parameters : LinkedHashMap<String,TypeDeclarationNode> to [optionalParams : LinkedHashMap<String,TypeDeclarationNode>, requiredParams : LinkedHashMap<String,TypeDeclarationNode>] in method public convertTypeNodeAST(n Node) : TypeDeclarationNode from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactory",
      "type": "Split Variable"
    }],
    "filePath": "src/com/google/javascript/jscomp/parsing/TypeDeclarationsIRFactory.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "Parser.java",
    "refactorings": [
      {
        "description": "Extract Method private peekParameter(inTypeExpression boolean) : boolean extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private parseParameter(inTypeExpression boolean) : ParseTree extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser",
        "type": "Extract Method"
      },
      {
        "description": "Extract Method private parseFormalParameterList(inTypeExpression boolean) : FormalParameterListTree extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser",
        "type": "Extract Method"
      },
      {
        "description": "Inline Variable typeStart : SourcePosition in method private parseFormalParameterList() : FormalParameterListTree from class com.google.javascript.jscomp.parsing.parser.Parser",
        "type": "Inline Variable"
      },
      {
        "description": "Add Parameter inTypeExpression : boolean in method private peekArrowFunctionWithParenthesizedParameterList(inTypeExpression boolean) : boolean from class com.google.javascript.jscomp.parsing.parser.Parser",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/com/google/javascript/jscomp/parsing/parser/Parser.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "OptionalParameterTree.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/jscomp/parsing/parser/trees/OptionalParameterTree.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "ParseTree.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/jscomp/parsing/parser/trees/ParseTree.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "ParseTreeType.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/jscomp/parsing/parser/trees/ParseTreeType.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "TypedParameterTree.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/jscomp/parsing/parser/trees/TypedParameterTree.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "Node.java",
    "refactorings": [],
    "filePath": "src/com/google/javascript/rhino/Node.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "TypeDeclarationsIR.java",
    "refactorings": [
      {
        "description": "Rename Method public restParams(type Node) : TypeDeclarationNode renamed to private maybeAddType(node Node, type TypeDeclarationNode) : Node in class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Rename Method"
      },
      {
        "description": "Rename Variable stringKey : Node to name : Node in method public functionType(returnType Node, requiredParams LinkedHashMap<String,TypeDeclarationNode>, optionalParams LinkedHashMap<String,TypeDeclarationNode>, restName String, restType TypeDeclarationNode) : TypeDeclarationNode from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable parameter : Map.Entry<String,TypeDeclarationNode> to param : Map.Entry<String,TypeDeclarationNode> in method public functionType(returnType Node, requiredParams LinkedHashMap<String,TypeDeclarationNode>, optionalParams LinkedHashMap<String,TypeDeclarationNode>, restName String, restType TypeDeclarationNode) : TypeDeclarationNode from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Parameter parameters : LinkedHashMap<String,TypeDeclarationNode> to requiredParams : LinkedHashMap<String,TypeDeclarationNode> in method public functionType(returnType Node, requiredParams LinkedHashMap<String,TypeDeclarationNode>, optionalParams LinkedHashMap<String,TypeDeclarationNode>, restName String, restType TypeDeclarationNode) : TypeDeclarationNode from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Rename Parameter"
      },
      {
        "description": "Add Parameter optionalParams : LinkedHashMap<String,TypeDeclarationNode> in method public functionType(returnType Node, requiredParams LinkedHashMap<String,TypeDeclarationNode>, optionalParams LinkedHashMap<String,TypeDeclarationNode>, restName String, restType TypeDeclarationNode) : TypeDeclarationNode from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Add Parameter"
      },
      {
        "description": "Change Parameter Type type : Node to type : TypeDeclarationNode in method private maybeAddType(node Node, type TypeDeclarationNode) : Node from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Change Parameter Type"
      },
      {
        "description": "Parameterize Variable node : TypeDeclarationNode to node : Node in method private maybeAddType(node Node, type TypeDeclarationNode) : Node from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Parameterize Variable"
      },
      {
        "description": "Change Variable Type node : TypeDeclarationNode to node : Node in method private maybeAddType(node Node, type TypeDeclarationNode) : Node from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Change Variable Type"
      },
      {
        "description": "Change Return Type TypeDeclarationNode to Node in method private maybeAddType(node Node, type TypeDeclarationNode) : Node from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Change Return Type"
      },
      {
        "description": "Change Method Access Modifier public to private in method private maybeAddType(node Node, type TypeDeclarationNode) : Node from class com.google.javascript.rhino.TypeDeclarationsIR",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "src/com/google/javascript/rhino/TypeDeclarationsIR.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "main"
  },
  {
    "fileName": "Es6InlineTypesNotYetParsedTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/Es6InlineTypesNotYetParsedTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "NewParserTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/parsing/NewParserTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeDeclarationsIRFactoryTest.java",
    "refactorings": [
      {
        "description": "Rename Variable stringKey : Node to p1 : Node in method public testConvertFunctionType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable stringKey1 : Node to p2 : Node in method public testConvertFunctionType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable stringKey1 : Node to p1 : Node in method public testConvertFunctionThisType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable stringKey1 : Node to p1 : Node in method public testConvertFunctionNewType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable stringKey1 : Node to p1 : Node in method public testConvertVariableParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable stringKey2 : Node to p2 : Node in method public testConvertVariableParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
        "type": "Rename Variable"
      },
      {
        "description": "Rename Variable parameters : LinkedHashMap<String,TypeDeclarationNode> to optionalParams : LinkedHashMap<String,TypeDeclarationNode> in method public testConvertOptionalFunctionParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest",
        "type": "Rename Variable"
      }
    ],
    "filePath": "test/com/google/javascript/jscomp/parsing/TypeDeclarationsIRFactoryTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeSyntaxTest.java",
    "refactorings": [],
    "filePath": "test/com/google/javascript/jscomp/parsing/TypeSyntaxTest.java",
    "commit": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "repository": "https://github.com/google/closure-compiler.git",
    "fileType": "test"
  }
]