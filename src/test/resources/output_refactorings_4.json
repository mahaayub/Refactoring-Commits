[
  {
    "fileName": "AllowedClientPropertyKeys.java",
    "refactorings": [],
    "filePath": "d2/src/main/java/com/linkedin/d2/balancer/properties/AllowedClientPropertyKeys.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyKeys.java",
    "refactorings": [],
    "filePath": "d2/src/main/java/com/linkedin/d2/balancer/properties/PropertyKeys.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CompressionOption.java",
    "refactorings": [],
    "filePath": "r2-core/src/main/java/com/linkedin/r2/filter/CompressionOption.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "R2Constants.java",
    "refactorings": [],
    "filePath": "r2-core/src/main/java/com/linkedin/r2/filter/R2Constants.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpConstants.java",
    "refactorings": [],
    "filePath": "r2-core/src/main/java/com/linkedin/r2/transport/http/common/HttpConstants.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CompressionConfig.java",
    "refactorings": [{
      "rightSideLineNumber": 82,
      "description": "Encapsulate Attribute private _compressionThreshold : int from class com.linkedin.r2.filter.CompressionConfig",
      "type": "Encapsulate Attribute"
    }],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/CompressionConfig.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ClientCompressionFilter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 293,
        "description": "Rename Method private shouldCompressResponse(operation String) : boolean renamed to private shouldCompressResponseForOperation(operation String) : boolean in class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 70,
        "description": "Change Attribute Access Modifier private to public in attribute public COMPRESS_ALL_RESPONSES_INDICATOR : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 233,
        "description": "Extract Method public addResponseCompressionHeaders(responseCompressionOverride CompressionOption, req RestRequest) : RestRequest extracted from public onRestRequest(req RestRequest, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void in class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 234,
        "description": "Extract Variable builder : RestRequestBuilder in method public addResponseCompressionHeaders(responseCompressionOverride CompressionOption, req RestRequest) : RestRequest from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 75,
        "description": "Add Parameter responseCompressionConfig : CompressionConfig in method public ClientCompressionFilter(requestContentEncoding EncodingType, requestCompressionConfig CompressionConfig, acceptedEncodings EncodingType[], responseCompressionConfig CompressionConfig, responseCompressionOperations List<String>) from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 132,
        "description": "Add Parameter responseCompressionConfig : CompressionConfig in method public ClientCompressionFilter(requestContentEncoding String, requestCompressionConfig CompressionConfig, acceptedEncodings String, responseCompressionConfig CompressionConfig, responseCompressionOperations List<String>) from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Add Parameter acceptedEncodings : EncodingType[] in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Change Method Access Modifier public to package in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 175,
        "description": "Add Method Modifier static in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 187,
        "description": "Parameterize Attribute _acceptedEncodings : EncodingType[] to acceptedEncodings : EncodingType[] in method package buildAcceptEncodingHeader(acceptedEncodings EncodingType[]) : String from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "type": "Parameterize Attribute"
      }
    ],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/compression/ClientCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "CompressionConstants.java",
    "refactorings": [],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/compression/CompressionConstants.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "ServerCompressionFilter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 71,
        "description": "Extract Method public ServerCompressionFilter(acceptedFilters String, responseCompressionConfig CompressionConfig) extracted from public ServerCompressionFilter(acceptedFilters String) in class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Extract Attribute private EMPTY : String in class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Extract Attribute"
      },
      {
        "rightSideLineNumber": 140,
        "description": "Rename Variable responseCompression : String to responseAcceptedEncodings : String in method public onRestRequest(req RestRequest, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void from class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 197,
        "description": "Rename Variable responseCompression : String to responseAcceptedEncodings : String in method public onRestResponse(res RestResponse, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void from class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 79,
        "description": "Add Parameter defaultResponseCompressionConfig : CompressionConfig in method public ServerCompressionFilter(supportedEncoding EncodingType[], defaultResponseCompressionConfig CompressionConfig) from class com.linkedin.r2.filter.compression.ServerCompressionFilter",
        "type": "Add Parameter"
      }
    ],
    "filePath": "r2-filter-compression/src/main/java/com/linkedin/r2/filter/compression/ServerCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpClientFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 371,
        "description": "Rename Method package getCompressionConfig(httpServiceName String, requestContentEncodingName String) : CompressionConfig renamed to package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 455,
        "description": "Rename Method private getRequestContentEncodingName(serverSupportedEncodings List<String>) : String renamed to private getRequestContentEncoding(serverSupportedEncodings List<String>) : EncodingType in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 328,
        "description": "Extract Method public HttpClientFactory(filters FilterChain, eventLoopGroup NioEventLoopGroup, shutdownFactory boolean, executor ScheduledExecutorService, shutdownExecutor boolean, callbackExecutorGroup ExecutorService, shutdownCallbackExecutor boolean, jmxManager AbstractJmxManager, requestCompressionThresholdDefault int, requestCompressionConfigs Map<String,CompressionConfig>, responseCompressionConfigs Map<String,CompressionConfig>, useClientCompression boolean) extracted from public HttpClientFactory(filters FilterChain, eventLoopGroup NioEventLoopGroup, shutdownFactory boolean, executor ScheduledExecutorService, shutdownExecutor boolean, callbackExecutorGroup ExecutorService, shutdownCallbackExecutor boolean, jmxManager AbstractJmxManager, requestCompressionThresholdDefault int, requestCompressionConfigs Map<String,CompressionConfig>, useClientCompression boolean) in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 428,
        "description": "Change Variable Type requestContentEncodingName : String to requestContentEncoding : EncodingType in method private getClient(properties Map<String,? extends Object>, sslContext SSLContext, sslParameters SSLParameters) : TransportClient from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 428,
        "description": "Rename Variable requestContentEncodingName : String to requestContentEncoding : EncodingType in method private getClient(properties Map<String,? extends Object>, sslContext SSLContext, sslParameters SSLParameters) : TransportClient from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Rename Parameter requestContentEncodingName : String to requestContentEncoding : EncodingType in method package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Change Parameter Type requestContentEncodingName : String to requestContentEncoding : EncodingType in method package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 455,
        "description": "Change Return Type String to EncodingType in method private getRequestContentEncoding(serverSupportedEncodings List<String>) : EncodingType from class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "type": "Change Return Type"
      }
    ],
    "filePath": "r2-netty/src/main/java/com/linkedin/r2/transport/http/client/HttpClientFactory.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestClient.java",
    "refactorings": [{
      "rightSideLineNumber": 633,
      "description": "Merge Parameter [contentType : ContentType, acceptTypes : List<AcceptType>, requestCompressionOverride : CompressionOption] to requestOptions : RestliRequestOptions in method private sendRequestImpl(requestContext RequestContext, uri URI, method ResourceMethod, dataMap DataMap, headers Map<String,String>, methodName String, protocolVersion ProtocolVersion, requestOptions RestliRequestOptions, callback Callback<RestResponse>) : void from class com.linkedin.restli.client.RestClient",
      "type": "Merge Parameter"
    }],
    "filePath": "restli-client/src/main/java/com/linkedin/restli/client/RestClient.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestliRequestOptions.java",
    "refactorings": [
      {
        "rightSideLineNumber": 123,
        "description": "Rename Variable other : RestliRequestOptions to that : RestliRequestOptions in method public equals(o Object) : boolean from class com.linkedin.restli.client.RestliRequestOptions",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Rename Parameter obj : Object to o : Object in method public equals(o Object) : boolean from class com.linkedin.restli.client.RestliRequestOptions",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Add Parameter responseCompressionOverride : CompressionOption in method package RestliRequestOptions(protocolVersionOption ProtocolVersionOption, requestCompressionOverride CompressionOption, responseCompressionOverride CompressionOption, contentType RestClient.ContentType, acceptTypes List<RestClient.AcceptType>) from class com.linkedin.restli.client.RestliRequestOptions",
        "type": "Add Parameter"
      }
    ],
    "filePath": "restli-client/src/main/java/com/linkedin/restli/client/RestliRequestOptions.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "RestliRequestOptionsBuilder.java",
    "refactorings": [],
    "filePath": "restli-client/src/main/java/com/linkedin/restli/client/RestliRequestOptionsBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "main"
  },
  {
    "fileName": "TestClientCompressionFilter.java",
    "refactorings": [
      {
        "rightSideLineNumber": 66,
        "description": "Change Parameter Type shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 66,
        "description": "Rename Parameter shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Change Parameter Type shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String, entityLength int) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 71,
        "description": "Rename Parameter shouldBePresent : boolean to expectedValue : String in method public HeaderCaptureFilter(headerName String, expectedValue String, entityLength int) from class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Rename Attribute _shouldBePresent : boolean to _expectedValue : String in class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 60,
        "description": "Change Attribute Type _shouldBePresent : boolean to _expectedValue : String in class com.linkedin.r2.filter.compression.TestClientCompressionFilter.HeaderCaptureFilter",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Rename Method public testCompressionOperations(compressionConfig String, operations String[], headerShouldBePresent boolean) : void renamed to public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void in class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Rename Method private provideRequestData() : Object[][] renamed to private provideRequestCompressionData() : Object[][] in class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Modify Method Annotation @Test(dataProvider = \"requestData\") to @Test(dataProvider = \"requestCompressionData\") in method public testRequestCompressionRules(requestCompressionConfig CompressionConfig, requestCompressionOverride CompressionOption, headerShouldBePresent boolean) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Modify Method Annotation"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Change Parameter Type headerShouldBePresent : boolean to expectedAcceptEncoding : String in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Rename Parameter headerShouldBePresent : boolean to expectedAcceptEncoding : String in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter responseCompressionConfig : CompressionConfig in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter responseCompressionOverride : CompressionOption in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Parameter expectedCompressionThreshold : String in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Remove Parameter compressionConfig : String in method public testCompressionOperations(compressionConfig String, operations String[], headerShouldBePresent boolean) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Remove Parameter operations : String[] in method public testCompressionOperations(compressionConfig String, operations String[], headerShouldBePresent boolean) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Modify Method Annotation @Test(dataProvider = \"operationsData\") to @Test(dataProvider = \"responseCompressionData\") in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Modify Method Annotation"
      },
      {
        "rightSideLineNumber": 167,
        "description": "Add Thrown Exception Type CompressionException in method public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Add Thrown Exception Type"
      },
      {
        "rightSideLineNumber": 99,
        "description": "Modify Method Annotation @DataProvider(name = \"requestData\") to @DataProvider(name = \"requestCompressionData\") in method private provideRequestCompressionData() : Object[][] from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "type": "Modify Method Annotation"
      }
    ],
    "filePath": "r2-filter-compression/src/test/java/com/linkedin/r2/filter/compression/TestClientCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestServerCompressionFilter.java",
    "refactorings": [],
    "filePath": "r2-filter-compression/src/test/java/com/linkedin/r2/filter/compression/TestServerCompressionFilter.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHttpClientFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 417,
      "description": "Rename Method public testGetCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void renamed to public testGetRequestCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void in class com.linkedin.r2.transport.http.client.TestHttpClientFactory",
      "type": "Rename Method"
    }],
    "filePath": "r2-netty/src/test/java/com/linkedin/r2/transport/http/client/TestHttpClientFactory.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "RestClientTest.java",
    "refactorings": [],
    "filePath": "restli-client/src/test/java/com/linkedin/restli/client/RestClientTest.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRequest.java",
    "refactorings": [],
    "filePath": "restli-client/src/test/java/com/linkedin/restli/client/TestRequest.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRestClientRequestBuilder.java",
    "refactorings": [],
    "filePath": "restli-client/src/test/java/com/linkedin/restli/client/TestRestClientRequestBuilder.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "RestLiIntTestServer.java",
    "refactorings": [{
      "rightSideLineNumber": 97,
      "description": "Inline Method public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int, requestFilters List<? extends RequestFilter>, responseFilters List<? extends ResponseFilter>) : HttpServer inlined to public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int) : HttpServer in class com.linkedin.restli.examples.RestLiIntTestServer",
      "type": "Inline Method"
    }],
    "filePath": "restli-int-test-server/src/main/java/com/linkedin/restli/examples/RestLiIntTestServer.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "RestLiIntegrationTest.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/RestLiIntegrationTest.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestCompressionServer.java",
    "refactorings": [
      {
        "rightSideLineNumber": 107,
        "description": "Move Class com.linkedin.restli.examples.TestCompressionServer.initClass.SaveContentEncodingHeaderFilter moved to com.linkedin.restli.examples.TestCompressionServer.SaveContentEncodingHeaderFilter",
        "type": "Move Class"
      },
      {
        "rightSideLineNumber": 104,
        "description": "Change Attribute Access Modifier private to public in attribute public CONTENT_ENCODING_SAVED : String from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompatibleDefault(acceptEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionBetter(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionWorse(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testAcceptEncoding(acceptedEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 298,
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public test406Error(acceptContent String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 297,
        "description": "Parameterize Variable get : HttpGet to getMessage : HttpGet in method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Change Class Access Modifier package to public in class com.linkedin.restli.examples.TestCompressionServer.SaveContentEncodingHeaderFilter",
        "type": "Change Class Access Modifier"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Add Class Modifier static in class com.linkedin.restli.examples.TestCompressionServer.SaveContentEncodingHeaderFilter",
        "type": "Add Class Modifier"
      }
    ],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestCompressionServer.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestRequestCompression.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestRequestCompression.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "TestResponseCompression.java",
    "refactorings": [],
    "filePath": "restli-int-test/src/test/java/com/linkedin/restli/examples/TestResponseCompression.java",
    "commit": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "repository": "https://github.com/linkedin/rest.li.git",
    "fileType": "test"
  },
  {
    "fileName": "CompactionsCQLTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 129,
        "description": "Rename Method public testTriggerMinorCompaction() : void renamed to public testTriggerMinorCompactionSTCSAlterTable() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 135,
        "description": "Extract Method private getCurrentColumnFamilyStore() : ColumnFamilyStore extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Extract Method public minorWasTriggered(keyspace String, cf String) : boolean extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "type": "Extract Method"
      }
    ],
    "filePath": "test/unit/org/apache/cassandra/db/compaction/CompactionsCQLTest.java",
    "commit": "https://github.com/apache/cassandra/commit/1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "Config.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/Config.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseDescriptor.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/config/DatabaseDescriptor.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "UDFunction.java",
    "refactorings": [
      {
        "rightSideLineNumber": 294,
        "description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public create(name FunctionName, argNames List<ColumnIdentifier>, argTypes List<AbstractType<?>>, returnType AbstractType<?>, calledOnNullInput boolean, language String, body String) : UDFunction in class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 294,
        "description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public execute(protocolVersion int, parameters List<ByteBuffer>) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction",
        "type": "Extract Method"
      }
    ],
    "filePath": "src/java/org/apache/cassandra/cql3/functions/UDFunction.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateFunctionStatement.java",
    "refactorings": [],
    "filePath": "src/java/org/apache/cassandra/cql3/statements/CreateFunctionStatement.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "main"
  },
  {
    "fileName": "UFPureScriptTest.java",
    "refactorings": [],
    "filePath": "test/unit/org/apache/cassandra/cql3/validation/entities/UFPureScriptTest.java",
    "commit": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "repository": "https://github.com/apache/cassandra.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 620,
      "description": "Extract Method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOwnerOnly boolean) : Supplier<Stream<CacheEntry>> extracted from protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>) : Supplier<Stream<CacheEntry>> in class org.infinispan.stream.impl.AbstractCacheStream",
      "type": "Extract Method"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/AbstractCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedCacheStream.java",
    "refactorings": [
      {
        "rightSideLineNumber": 459,
        "description": "Extract Method private ignoreRehashIteration(consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 575,
        "description": "Extract Method private segmentsToProcess(supplier IteratorSupplier<R>, results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, id UUID) : Set<Integer> extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 549,
        "description": "Extract Method private performLocalRehashAwareOperation(results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, ch ConsistentHash, segments Set<Integer>, op KeyTrackingTerminalOperation<Object,R,Object>, ownedSegmentsSupplier Supplier<Set<Integer>>, id UUID) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 538,
        "description": "Extract Method private rehashAwareIteration(complete AtomicBoolean, consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 573,
        "description": "Extract Variable strId : String in method private segmentsToProcess(supplier IteratorSupplier<R>, results KeyTrackingConsumer<Object,R>, segmentsToProcess Set<Integer>, id UUID) : Set<Integer> from class org.infinispan.stream.impl.DistributedCacheStream",
        "type": "Extract Variable"
      }
    ],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/DistributedCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 62,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedDoubleCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 35,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedDoubleCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedDoubleCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedIntCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 35,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedIntCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedIntCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "TxDistributedLongCacheStream.java",
    "refactorings": [{
      "rightSideLineNumber": 35,
      "description": "Add Parameter primaryOnly : boolean in method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOnly boolean) : Supplier<Stream<CacheEntry>> from class org.infinispan.stream.impl.tx.TxDistributedLongCacheStream",
      "type": "Add Parameter"
    }],
    "filePath": "core/src/main/java/org/infinispan/stream/impl/tx/TxDistributedLongCacheStream.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "main"
  },
  {
    "fileName": "DistributedStreamIteratorTest.java",
    "refactorings": [],
    "filePath": "core/src/test/java/org/infinispan/stream/DistributedStreamIteratorTest.java",
    "commit": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "repository": "https://github.com/infinispan/infinispan.git",
    "fileType": "test"
  },
  {
    "fileName": "FontAwesomeIcons.java",
    "refactorings": [],
    "filePath": "android-iconify-fontawesome/src/main/java/com/joanzapata/android/iconify/fonts/FontAwesomeIcons.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontAwesomeModule.java",
    "refactorings": [],
    "filePath": "android-iconify-fontawesome/src/main/java/com/joanzapata/android/iconify/fonts/FontAwesomeModule.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "AboutActivity.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/AboutActivity.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontAwesomeFragment.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/FontAwesomeFragment.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontHelloFragment.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/FontHelloFragment.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "FontHelloValue.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/FontHelloValue.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconDialogFragment.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/IconDialogFragment.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconListActivity.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/IconListActivity.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "MainActivity.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/iconify/sample/MainActivity.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "SampleApplication.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/iconify/sample/SampleApplication.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconUtils.java",
    "refactorings": [],
    "filePath": "android-iconify-sample/src/main/java/com/joanzapata/android/utils/IconUtils.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseIconValue.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/BaseIconValue.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "Icon.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/Icon.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconDrawable.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/IconDrawable.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconFontDescriptor.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/IconFontDescriptor.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "Iconify.java",
    "refactorings": [
      {
        "rightSideLineNumber": 11,
        "description": "Remove Class Modifier final in class com.joanzapata.android.iconify.Iconify",
        "type": "Remove Class Modifier"
      },
      {
        "rightSideLineNumber": 34,
        "description": "Inline Method public addIcons(icon T, textViews TextView...) : void inlined to public addIcons(textViews TextView...) : void in class com.joanzapata.android.iconify.Iconify",
        "type": "Inline Method"
      }
    ],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/Iconify.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "Utils.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/Utils.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomTypefaceSpan.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/internal/CustomTypefaceSpan.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconFontDescriptorWrapper.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/internal/IconFontDescriptorWrapper.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "ParsingUtil.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/internal/ParsingUtil.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconButton.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/views/IconButton.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconTextView.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/views/IconTextView.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "IconToggleButton.java",
    "refactorings": [],
    "filePath": "android-iconify/src/main/java/com/joanzapata/android/iconify/views/IconToggleButton.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "main"
  },
  {
    "fileName": "UtilsTest.java",
    "refactorings": [],
    "filePath": "android-iconify/src/test/java/com/joanzapata/android/iconify/UtilsTest.java",
    "commit": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "fileType": "test"
  },
  {
    "fileName": "DefaultClient.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/DefaultClient.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GitHubModule.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/GitHubModule.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "Intents.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/Intents.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestCodes.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestCodes.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestFuture.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestFuture.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestReader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestReader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RequestWriter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/RequestWriter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ResultCodes.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ResultCodes.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ServicesModule.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ServicesModule.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ThrowableLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ThrowableLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountAuthenticator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountAuthenticator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountAuthenticatorService.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountAuthenticatorService.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountClient.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountClient.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountConstants.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountConstants.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountScope.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountScope.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AccountUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AuthenticatedUserLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AuthenticatedUserLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AuthenticatedUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/AuthenticatedUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GitHubAccount.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/GitHubAccount.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LoginActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/LoginActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LoginWebViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/LoginWebViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ScopeBase.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/ScopeBase.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TwoFactorAuthActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/TwoFactorAuthActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TwoFactorAuthClient.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/TwoFactorAuthClient.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TwoFactorAuthException.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/accounts/TwoFactorAuthException.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GitHubClientV2.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/api/GitHubClientV2.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ItemStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/ItemStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OnLoadListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/OnLoadListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ResourcePager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/ResourcePager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UrlMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/UrlMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullTree.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/code/FullTree.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshBlobTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/code/RefreshBlobTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshTreeTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/code/RefreshTreeTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitCompareTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitCompareTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitMatch.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitMatch.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/CommitUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullCommit.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/FullCommit.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullCommitFile.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/FullCommitFile.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshCommitTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/commit/RefreshCommitTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullGist.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/FullGist.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/GistUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/RefreshGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/StarGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UnstarGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/gist/UnstarGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FullIssue.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/FullIssue.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueFilter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueFilter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuePager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssuePager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueStore.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueStore.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/IssueUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshIssueTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/issue/RefreshIssueTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/ref/RefUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/DeleteRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ForkRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/ForkRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RefreshRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RepositoryEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RepositoryUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/RepositoryUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/StarRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarredRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/StarredRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UnstarRepositoryTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/repo/UnstarRepositoryTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUser.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/search/SearchUser.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUserService.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/search/SearchUserService.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/FollowUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowingUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/FollowingUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefreshUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/RefreshUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UnfollowUserTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UnfollowUserTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserComparator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserComparator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserEventMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserEventMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserUriMatcher.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/core/user/UserUriMatcher.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "App.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/model/App.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "Authorization.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/model/Authorization.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AccountDataManager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/AccountDataManager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CacheHelper.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/CacheHelper.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DatabaseCache.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/DatabaseCache.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationRepositories.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/OrganizationRepositories.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "Organizations.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/Organizations.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PersistableResource.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/persistence/PersistableResource.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ContentProviderAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/ContentProviderAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SyncAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/SyncAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SyncAdapterService.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/SyncAdapterService.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SyncCampaign.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/sync/SyncCampaign.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/BaseActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckableRelativeLayout.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/CheckableRelativeLayout.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ConfirmDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ConfirmDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogFragmentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogFragmentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogFragmentHelper.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogFragmentHelper.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DialogResultListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/DialogResultListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/FragmentPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/FragmentProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FragmentStatePagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/FragmentStatePagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HeaderFooterListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/HeaderFooterListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ItemListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ItemListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LightAlertDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/LightAlertDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LightProgressDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/LightProgressDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MainActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/MainActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MarkdownLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/MarkdownLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NavigationDrawerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NavigationDrawerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NavigationDrawerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NavigationDrawerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NavigationDrawerObject.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NavigationDrawerObject.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/NewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagedItemFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PagedItemFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagerActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PagerActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PatchedScrollingViewBehavior.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/PatchedScrollingViewBehavior.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ProgressDialogTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ProgressDialogTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ResourceLoadingIndicator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ResourceLoadingIndicator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SelectableLinkMovementMethod.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/SelectableLinkMovementMethod.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SingleChoiceDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/SingleChoiceDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StyledText.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/StyledText.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TabPagerActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/TabPagerActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TabPagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/TabPagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TextWatcherAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/TextWatcherAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ViewPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ViewPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "WebView.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/WebView.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryCodeFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/code/RepositoryCodeFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/CommentListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentPreviewPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/CommentPreviewPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteCommentListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/DeleteCommentListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/EditCommentListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RawCommentFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/RawCommentFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RenderedCommentFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/comment/RenderedCommentFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitCompareListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitCompareListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitCompareViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitCompareViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitDiffListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitDiffListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitFileComparator.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitFileComparator.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitFileListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitFileListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitFileViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitFileViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CommitViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CommitViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/CreateCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DiffStyler.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/commit/DiffStyler.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateGistActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateGistActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/CreateGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/DeleteCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/DeleteGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/EditCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/EditCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFileFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFileFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFilesPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFilesPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFilesViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFilesViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistQueriesPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistQueriesPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsPagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsPagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GistsViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/GistsViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MyGistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/MyGistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PublicGistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/PublicGistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RandomGistTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/RandomGistTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "StarredGistsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/gist/StarredGistsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AssigneeDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/AssigneeDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AssigneeDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/AssigneeDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/CreateCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/CreateCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CreateIssueTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/CreateIssueTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DashboardIssueFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/DashboardIssueFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DashboardIssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/DashboardIssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DeleteCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/DeleteCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditAssigneeTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditAssigneeTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditCommentActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditCommentTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditCommentTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditIssueActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditIssueActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditIssueTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditIssueTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditIssuesFilterActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditIssuesFilterActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditLabelsTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditLabelsTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditMilestoneTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditMilestoneTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EditStateTask.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/EditStateTask.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FilterListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FilterListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FilterListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FilterListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FiltersViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FiltersViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FiltersViewFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/FiltersViewFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueBrowseActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueBrowseActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueDashboardPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueDashboardPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueDashboardPagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueDashboardPagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueSearchActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueSearchActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssueSearchSuggestionsProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssueSearchSuggestionsProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuesFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssuesFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuesPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssuesPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IssuesViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/IssuesViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelDrawableSpan.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/LabelDrawableSpan.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelsDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/LabelsDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "LabelsDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/LabelsDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MilestoneDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/MilestoneDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MilestoneDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/MilestoneDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryIssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/RepositoryIssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchIssueListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/SearchIssueListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchIssueListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/issue/SearchIssueListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "BranchFileViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/BranchFileViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "CodeTreeAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/CodeTreeAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefDialog.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/RefDialog.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RefDialogFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/ref/RefDialogFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ContributorListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/ContributorListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "DefaultRepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/DefaultRepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/OrganizationLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RecentRepositories.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RecentRepositories.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryContributorsActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryContributorsActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryContributorsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryContributorsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositoryViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/RepositoryViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserRepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/UserRepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserRepositoryListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/repo/UserRepositoryListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ActionBarAccountAuthenticatorActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/ActionBarAccountAuthenticatorActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RoboActionBarAccountAuthenticatorActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/RoboActionBarAccountAuthenticatorActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RoboActionBarActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/RoboActionBarActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RoboSupportFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/roboactivities/RoboSupportFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "RepositorySearchSuggestionsProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/RepositorySearchSuggestionsProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchRepositoryListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchRepositoryListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchRepositoryListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchRepositoryListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUserListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchUserListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SearchUserListFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/search/SearchUserListFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EventPager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/EventPager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "EventType.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/EventType.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/FollowersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "FollowingFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/FollowingFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HomePagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/HomePagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HomePagerFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/HomePagerFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "IconAndViewTextManager.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/IconAndViewTextManager.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MembersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/MembersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MyFollowersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/MyFollowersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MyFollowingFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/MyFollowingFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "NewsListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/NewsListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/OrganizationNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationSelectionListener.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/OrganizationSelectionListener.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "OrganizationSelectionProvider.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/OrganizationSelectionProvider.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PagedUserFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/PagedUserFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UriLauncherActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UriLauncherActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserCreatedNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserCreatedNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserFollowersFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserFollowersFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserFollowingFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserFollowingFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserListAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserListAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserPagerAdapter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserPagerAdapter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserReceivedNewsFragment.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserReceivedNewsFragment.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "UserViewActivity.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/ui/user/UserViewActivity.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "AvatarLoader.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/AvatarLoader.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "GravatarUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/GravatarUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HtmlUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/HtmlUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "HttpImageGetter.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/HttpImageGetter.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ImageUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ImageUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "MarkdownUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/MarkdownUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "PreferenceUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/PreferenceUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ServiceUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ServiceUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ShareUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ShareUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "SourceEditor.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/SourceEditor.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TimeUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/TimeUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ToastUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/ToastUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "TypefaceUtils.java",
    "refactorings": [],
    "filePath": "app/src/main/java/com/github/pockethub/util/TypefaceUtils.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "main"
  },
  {
    "fileName": "ActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/ActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "FiltersViewActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/FiltersViewActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "NewsEventTextTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/NewsEventTextTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CommitUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/CommitUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CommitUtilsTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/CommitUtilsTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateCommentActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/CreateCommentActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "DiffStylerTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/DiffStylerTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "FullCommitTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/commit/FullCommitTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateCommentActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/CreateCommentActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateGistActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/CreateGistActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "GistFilesViewActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/GistFilesViewActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "GistStoreTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/GistStoreTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "GistUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/gist/GistUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "CreateCommentActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/CreateCommentActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "EditIssueActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/EditIssueActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "EditIssuesFilterActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/EditIssuesFilterActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IssueFilterTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/IssueFilterTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IssueStoreTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/IssueStoreTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IssueUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/issue/IssueUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RefUtilsTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/ref/RefUtilsTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RecentRepositoriesTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/RecentRepositoriesTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RepositoryEventMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/RepositoryEventMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "RepositoryUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/RepositoryUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "SearchActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/repo/SearchActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "LoginActivityTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/user/LoginActivityTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "UserComparatorTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/user/UserComparatorTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "UserUriMatcherTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/user/UserUriMatcherTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "HtmlUtilsTest.java",
    "refactorings": [],
    "filePath": "app/src/androidTest/java/com/github/pockethub/tests/util/HtmlUtilsTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "IconAndViewTextManagerTest.java",
    "refactorings": [],
    "filePath": "app/src/test/java/com/github/pockethub/ui/user/IconAndViewTextManagerTest.java",
    "commit": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "repository": "https://github.com/github/android.git",
    "fileType": "test"
  },
  {
    "fileName": "MapBinder.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/main/java/org/hibernate/cfg/annotations/MapBinder.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "main"
  },
  {
    "fileName": "SimpleValueBinder.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/main/java/org/hibernate/cfg/annotations/SimpleValueBinder.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "main"
  },
  {
    "fileName": "EntityEnum.java",
    "refactorings": [
      {
        "rightSideLineNumber": 30,
        "description": "Modify Class Annotation @TypeDefs({@TypeDef(typeClass=LastNumberType.class,defaultForType=EntityEnum.LastNumber.class)}) to @TypeDefs({@TypeDef(typeClass=LastNumberType.class,defaultForType=LastNumber.class)}) in class org.hibernate.test.annotations.enumerated.EntityEnum",
        "type": "Modify Class Annotation"
      },
      {
        "rightSideLineNumber": 45,
        "description": "Modify Attribute Annotation @Type(type = \"org.hibernate.test.annotations.enumerated.FirstLetterType\") to @Type(type = \"org.hibernate.test.annotations.enumerated.custom_types.FirstLetterType\") in attribute private firstLetter : FirstLetter from class org.hibernate.test.annotations.enumerated.EntityEnum",
        "type": "Modify Attribute Annotation"
      }
    ],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/EntityEnum.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "EnumeratedTypeTest.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/EnumeratedTypeTest.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "EntityMapEnum.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_mapkey/EntityMapEnum.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "MapKeyCustomEnumTypeTest.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_mapkey/MapKeyCustomEnumTypeTest.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "FirstLetterType.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_types/FirstLetterType.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "LastNumberType.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/custom_types/LastNumberType.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "Common.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/Common.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "FirstLetter.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/FirstLetter.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "LastNumber.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/LastNumber.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "Trimmed.java",
    "refactorings": [],
    "filePath": "hibernate-core/src/test/java/org/hibernate/test/annotations/enumerated/enums/Trimmed.java",
    "commit": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "fileType": "test"
  },
  {
    "fileName": "DataTreeNode.java",
    "refactorings": [{
      "rightSideLineNumber": 102,
      "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(name String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.DataTreeNode",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/DataTreeNode.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentTree.java",
    "refactorings": [
      {
        "rightSideLineNumber": 284,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(parent ConcurrentTreeNode, child String, creator DataTreeNodeInitializer, path TreeDataParent) : ConcurrentTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTree",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 564,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(name String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTree",
        "type": "Add Parameter"
      }
    ],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/concurrent/ConcurrentTree.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentTreeNode.java",
    "refactorings": [
      {
        "rightSideLineNumber": 447,
        "description": "Extract Method public updateHits(state DataTreeNodeUpdater, path TreeDataParent) : boolean extracted from public updateChildData(state DataTreeNodeUpdater, path TreeDataParent) : void in class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 635,
        "description": "Remove Method Modifier synchronized in method public getCounter() : long from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 649,
        "description": "Remove Method Modifier synchronized in method public incrementCounter() : void from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 654,
        "description": "Remove Method Modifier synchronized in method public incrementCounter(val long) : long from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 659,
        "description": "Remove Method Modifier synchronized in method public setCounter(val long) : void from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Remove Method Modifier"
      },
      {
        "rightSideLineNumber": 97,
        "description": "Add Parameter path : TreeDataParent in method protected init(tree ConcurrentTree, key DBKey, name String, path TreeDataParent) : void from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 359,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateEditableNode(name String, creator DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 387,
        "description": "Add Parameter size : int in method protected createMap(size int) : HashMap<String,TreeNodeData> from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 630,
        "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(name String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "type": "Add Parameter"
      }
    ],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/concurrent/ConcurrentTreeNode.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "DataKeyTop.java",
    "refactorings": [],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/prop/DataKeyTop.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "DataLimitRecent.java",
    "refactorings": [],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/prop/DataLimitRecent.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "VirtualTreeNode.java",
    "refactorings": [{
      "rightSideLineNumber": 89,
      "description": "Add Parameter size : int in method public createMap(size int) : HashMap<String,TreeNodeData> from class com.addthis.hydra.data.tree.prop.VirtualTreeNode",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-data/src/main/java/com/addthis/hydra/data/tree/prop/VirtualTreeNode.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "PathAlias.java",
    "refactorings": [
      {
        "rightSideLineNumber": 125,
        "description": "Replace Anonymous With Lambda com.addthis.hydra.task.output.tree.PathAlias.getOrCreateNode.init.new DataTreeNodeInitializer with child -> {child.aliasTo(finalAlias); in method public getOrCreateNode(state TreeMapState, name String, parentPath TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.PathAlias",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 125,
        "description": "Add Parameter parentPath : TreeDataParent in method public getOrCreateNode(state TreeMapState, name String, parentPath TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.PathAlias",
        "type": "Add Parameter"
      }
    ],
    "filePath": "hydra-task/src/main/java/com/addthis/hydra/task/output/tree/PathAlias.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "PathValue.java",
    "refactorings": [{
      "rightSideLineNumber": 182,
      "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(state TreeMapState, name String, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.PathValue",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-task/src/main/java/com/addthis/hydra/task/output/tree/PathValue.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeMapState.java",
    "refactorings": [{
      "rightSideLineNumber": 127,
      "description": "Add Parameter path : TreeDataParent in method public getOrCreateNode(key String, init DataTreeNodeInitializer, path TreeDataParent) : DataTreeNode from class com.addthis.hydra.task.output.tree.TreeMapState",
      "type": "Add Parameter"
    }],
    "filePath": "hydra-task/src/main/java/com/addthis/hydra/task/output/tree/TreeMapState.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "main"
  },
  {
    "fileName": "ConcurrentTreeConverter.java",
    "refactorings": [],
    "filePath": "hydra-data/src/test/java/com/addthis/hydra/data/tree/concurrent/ConcurrentTreeConverter.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "TestConcurrentTree.java",
    "refactorings": [],
    "filePath": "hydra-data/src/test/java/com/addthis/hydra/data/tree/concurrent/TestConcurrentTree.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "TestTreeSerializationVersions.java",
    "refactorings": [],
    "filePath": "hydra-data/src/test/java/com/addthis/hydra/data/tree/concurrent/TestTreeSerializationVersions.java",
    "commit": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "repository": "https://github.com/addthis/hydra.git",
    "fileType": "test"
  },
  {
    "fileName": "ApplicationServiceClient.java",
    "refactorings": [],
    "filePath": "genie-client/src/main/java/com/netflix/genie/client/ApplicationServiceClient.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-client/src/main/java/com/netflix/genie/client/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-client/src/main/java/com/netflix/genie/client/sample/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/client/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/exceptions/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/model/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/main/java/com/netflix/genie/common/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/jobmanager/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/jobmanager/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/metrics/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/metrics/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/repository/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/resources/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/services/impl/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/services/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/services/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/main/java/com/netflix/genie/server/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "HealthCheck.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/health/HealthCheck.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/health/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "GenieApplication.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/startup/GenieApplication.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/main/java/com/netflix/genie/web/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "main"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/client/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/exceptions/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/model/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-common/src/test/java/com/netflix/genie/common/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/jobmanager/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/jobmanager/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/metrics/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/repository/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/resources/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/services/impl/jpa/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/services/impl/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGenieGuiceBootstrap.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/startup/TestGenieGuiceBootstrap.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-server/src/test/java/com/netflix/genie/server/util/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "TestHealthCheck.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/health/TestHealthCheck.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/health/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "TestGenieApplication.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/startup/TestGenieApplication.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "package-info.java",
    "refactorings": [],
    "filePath": "genie-web/src/test/java/com/netflix/genie/web/startup/package-info.java",
    "commit": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "repository": "https://github.com/Netflix/genie.git",
    "fileType": "test"
  },
  {
    "fileName": "SSLITest.java",
    "refactorings": [],
    "filePath": "examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/SSLITest.java",
    "commit": "https://github.com/jayway/rest-assured/commit/7cac88b9a28efc05bdc60e585e3291862ffc9da1",
    "repository": "https://github.com/jayway/rest-assured.git",
    "fileType": "test"
  },
  {
    "fileName": "SpecificationBuilderITest.java",
    "refactorings": [],
    "filePath": "examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/SpecificationBuilderITest.java",
    "commit": "https://github.com/jayway/rest-assured/commit/7cac88b9a28efc05bdc60e585e3291862ffc9da1",
    "repository": "https://github.com/jayway/rest-assured.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalConfigurator.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalConfigurator.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalCoverageResponseDelegate.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalCoverageResponseDelegate.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalWrapper.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalWrapperFactory.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/main/java/org/geoserver/wcs/response/GdalWrapperFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalBinaryPPIO.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalBinaryPPIO.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalCDataPPIO.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalCDataPPIO.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalPPIOFactory.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalPPIOFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalXMLPPIO.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/main/java/org/geoserver/wps/gdal/GdalXMLPPIO.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractToolConfigurator.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/AbstractToolConfigurator.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractToolWrapper.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/AbstractToolWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Format.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/Format.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "FormatConverter.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/FormatConverter.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OutputType.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/OutputType.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ToolConfiguration.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/ToolConfiguration.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ToolWrapper.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/ToolWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "ToolWrapperFactory.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-core/src/main/java/org/geoserver/ogr/core/ToolWrapperFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OGRWrapper.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OGRWrapper.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OGRWrapperFactory.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OGRWrapperFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Ogr2OgrConfigurator.java",
    "refactorings": [
      {
        "rightSideLineNumber": 37,
        "description": "Add Method Annotation @Override in method protected buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Change Method Access Modifier package to protected in method protected buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 37,
        "description": "Remove Method Modifier static in method package buildXStream() : XStream from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
        "type": "Remove Method Modifier"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/Ogr2OgrConfigurator.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Ogr2OgrOutputFormat.java",
    "refactorings": [
      {
        "rightSideLineNumber": 110,
        "description": "Rename Method public getOgrExecutable() : String renamed to public getExecutable() : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Rename Method public setOgrExecutable(ogrExecutable String) : void renamed to public setExecutable(ogrExecutable String) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Rename Method public getGdalData() : String renamed to public getEnvironment() : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Rename Method public setGdalData(gdalData String) : void renamed to public setEnvironment(environment Map<String,String>) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Change Attribute Type formats : Map<String,OgrFormat> to formats : Map<String,Format> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 165,
        "description": "Change Variable Type format : OgrFormat to format : Format in method public getMimeType(value Object, operation Operation) : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 202,
        "description": "Change Variable Type format : OgrFormat to format : Format in method public getAttachmentFileName(value Object, operation Operation) : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 230,
        "description": "Add Method Annotation @Override in method public clearFormats() : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 291,
        "description": "Change Variable Type format : OgrFormat to format : Format in method protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 284,
        "description": "Change Variable Type wrapper : OGRWrapper to wrapper : ToolWrapper in method protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 220,
        "description": "Change Return Type List<OgrFormat> to List<Format> in method public getFormats() : List<Format> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 220,
        "description": "Add Method Annotation @Override in method public getFormats() : List<Format> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 102,
        "description": "Add Parameter wrapperFactory : ToolWrapperFactory in method public Ogr2OgrOutputFormat(gs GeoServer, wrapperFactory ToolWrapperFactory) from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 110,
        "description": "Add Method Annotation @Override in method public getExecutable() : String from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 120,
        "description": "Add Method Annotation @Override in method public setExecutable(ogrExecutable String) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Change Return Type String to Map<String,String> in method public getEnvironment() : Map<String,String> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Method Annotation @Override in method public getEnvironment() : Map<String,String> from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 148,
        "description": "Rename Parameter gdalData : String to environment : Map<String,String> in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 148,
        "description": "Change Parameter Type gdalData : String to environment : Map<String,String> in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 141,
        "description": "Add Method Annotation @Override in method public setEnvironment(environment Map<String,String>) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 217,
        "description": "Change Parameter Type parameters : OgrFormat to parameters : Format in method public addFormat(parameters Format) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 210,
        "description": "Add Method Annotation @Override in method public addFormat(parameters Format) : void from class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Rename Attribute gdalData : String to environment : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Rename Attribute"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Change Attribute Type gdalData : String to environment : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "type": "Change Attribute Type"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/Ogr2OgrOutputFormat.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OgrConfiguration.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OgrConfiguration.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "OgrFormat.java",
    "refactorings": [
      {
        "rightSideLineNumber": 48,
        "description": "Change Attribute Access Modifier public to private in attribute private ogrFormat : String from class org.geoserver.wfs.response.OgrFormat",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 49,
        "description": "Change Attribute Access Modifier public to private in attribute private formatName : String from class org.geoserver.wfs.response.OgrFormat",
        "type": "Change Attribute Access Modifier"
      },
      {
        "rightSideLineNumber": 42,
        "description": "Rename Parameter ogrFormat : String to toolFormat : String in method public OgrFormat(toolFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, options String...) from class org.geoserver.wfs.response.OgrFormat",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 35,
        "description": "Change Parameter Type type : OgrType to type : OutputType in method public OgrFormat(ogrFormat String, formatName String, fileExtension String, singleFile boolean, mimeType String, type OutputType, options String...) from class org.geoserver.wfs.response.OgrFormat",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wfs/src/main/java/org/geoserver/wfs/response/OgrFormat.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "Ogr2OgrPPIOFactory.java",
    "refactorings": [{
      "rightSideLineNumber": 56,
      "description": "Change Variable Type of : OgrFormat to of : Format in method public getProcessParameterIO() : List<ProcessParameterIO> from class org.geoserver.wps.ogr.Ogr2OgrPPIOFactory",
      "type": "Change Variable Type"
    }],
    "filePath": "src/extension/ogr/ogr-wps/src/main/java/org/geoserver/wps/ogr/Ogr2OgrPPIOFactory.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "main"
  },
  {
    "fileName": "GdalFormatTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalFormatTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalTestUtil.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalTestUtil.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalWcsTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalWcsTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalWrapperTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wcs/src/test/java/org/geoserver/wcs/response/GdalWrapperTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "GdalWpsTest.java",
    "refactorings": [],
    "filePath": "src/community/gdal/gdal-wps/src/test/java/org/geoserver/wps/gdal/GdalWpsTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "OGRWrapperTest.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/test/java/org/geoserver/wfs/response/OGRWrapperTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "Ogr2OgrFormatTest.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/test/java/org/geoserver/wfs/response/Ogr2OgrFormatTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "Ogr2OgrTestUtil.java",
    "refactorings": [],
    "filePath": "src/extension/ogr/ogr-wfs/src/test/java/org/geoserver/wfs/response/Ogr2OgrTestUtil.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "WPSOgrTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 78,
        "description": "Change Variable Type f : OgrFormat to f : Format in method public testConfigurationLoad() : void from class org.geoserver.wps.ogr.WPSOgrTest",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 103,
        "description": "Change Variable Type f : OgrFormat to f : Format in method public testDescribeProcess() : void from class org.geoserver.wps.ogr.WPSOgrTest",
        "type": "Change Variable Type"
      }
    ],
    "filePath": "src/extension/ogr/ogr-wps/src/test/java/org/geoserver/wps/ogr/WPSOgrTest.java",
    "commit": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "repository": "https://github.com/geoserver/geoserver.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPIOException.java",
    "refactorings": [{
      "rightSideLineNumber": 38,
      "description": "Extract Method public NDPIOException(status Status, message String, cause Throwable) extracted from public NDPIOException(status Status, message String) in class org.neo4j.ndp.messaging.NDPIOException",
      "type": "Extract Method"
    }],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/NDPIOException.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "IdentityPack.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/IdentityPack.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "Neo4jPack.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/Neo4jPack.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackStreamMessageFormatV1.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Change Attribute Type packer : PackStream.Packer to packer : Neo4jPack.Packer in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 94,
        "description": "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public Writer(packer Neo4jPack.Packer, onMessageComplete MessageBoundaryHook) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 202,
        "description": "Change Attribute Type unpacker : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 264,
        "description": "Change Variable Type e : PackStream.PackstreamException to e : PackStream.PackStreamException in method public read(output MessageHandler<E>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 271,
        "description": "Change Variable Type e : PackStream.PackstreamException to e : PackStream.PackStreamException in method public read(output MessageHandler<E>) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Rename Parameter input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Change Parameter Type input : PackStream.Unpacker to unpacker : Neo4jPack.Unpacker in method public Reader(unpacker Neo4jPack.Unpacker) from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/PackStreamMessageFormatV1.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PathPack.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/PathPack.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "UnboundRelationship.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/UnboundRelationship.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueNode.java",
    "refactorings": [
      {
        "rightSideLineNumber": 94,
        "description": "Change Attribute Type labels : List<Label> to labels : Collection<Label> in class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 100,
        "description": "Change Parameter Type labels : List<Label> to labels : Collection<Label> in method public ValueNode(id long, labels Collection<Label>, props Map<String,Object>) from class org.neo4j.ndp.messaging.v1.infrastructure.ValueNode",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValueNode.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValuePath.java",
    "refactorings": [
      {
        "rightSideLineNumber": 127,
        "description": "Change Attribute Type entities : PropertyContainer[] to entities : List<PropertyContainer> in class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
        "type": "Change Attribute Type"
      },
      {
        "rightSideLineNumber": 127,
        "description": "Remove Attribute Modifier final in attribute private entities : PropertyContainer[] from class org.neo4j.ndp.messaging.v1.infrastructure.ValuePath",
        "type": "Remove Attribute Modifier"
      }
    ],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValuePath.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueRelationship.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValueRelationship.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "ValueUnboundRelationship.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/main/java/org/neo4j/ndp/messaging/v1/infrastructure/ValueUnboundRelationship.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackStream.java",
    "refactorings": [
      {
        "rightSideLineNumber": 872,
        "description": "Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException",
        "type": "Rename Class"
      },
      {
        "rightSideLineNumber": 711,
        "description": "Rename Method public unpackUtf8() : byte[] renamed to public unpackUTF8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 599,
        "description": "Rename Method public unpackString() : String renamed to public unpackText() : String in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 784,
        "description": "Rename Method private unpackBytes(size int) : byte[] renamed to private unpackRawBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 635,
        "description": "Extract Method private unpackBytesHeader() : int extracted from public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 681,
        "description": "Extract Method public unpackTextHeader() : int extracted from public unpackUtf8() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 800,
        "description": "Extract Method private unpackRawBytesInto(buffer byte[], offset int, size int) : void extracted from private unpackBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 621,
        "description": "Rename Variable size : long to longSize : long in method private unpackBytesHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 693,
        "description": "Rename Variable size : long to longSize : long in method public unpackTextHeader() : int from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 802,
        "description": "Parameterize Variable heapBuffer : byte[] to buffer : byte[] in method private unpackRawBytesInto(buffer byte[], offset int, size int) : void from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 641,
        "description": "Change Variable Type size : long to size : int in method public unpackBytes() : byte[] from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 714,
        "description": "Change Variable Type size : long to size : int in method public unpackUTF8() : byte[] from class org.neo4j.packstream.PackStream.Unpacker",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 156,
        "description": "Change Attribute Access Modifier private to public in attribute public UTF_8 : Charset from class org.neo4j.packstream.PackStream",
        "type": "Change Attribute Access Modifier"
      }
    ],
    "filePath": "community/ndp/packstream-v1/src/main/java/org/neo4j/packstream/PackStream.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackedInputArray.java",
    "refactorings": [],
    "filePath": "community/ndp/packstream-v1/src/main/java/org/neo4j/packstream/PackedInputArray.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PackedOutputArray.java",
    "refactorings": [],
    "filePath": "community/ndp/packstream-v1/src/main/java/org/neo4j/packstream/PackedOutputArray.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "SocketProtocolV1.java",
    "refactorings": [],
    "filePath": "community/ndp/transport-socket/src/main/java/org/neo4j/ndp/transport/socket/SocketProtocolV1.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "PrimitiveLongIntKeyValueArray.java",
    "refactorings": [],
    "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/primitive/PrimitiveLongIntKeyValueArray.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "main"
  },
  {
    "fileName": "MessageFormatTest.java",
    "refactorings": [{
      "rightSideLineNumber": 136,
      "description": "Rename Method public shouldSerializePath() : void renamed to public shouldSerializePaths() : void in class org.neo4j.ndp.messaging.v1.MessageFormatTest",
      "type": "Rename Method"
    }],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/MessageFormatTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Neo4jPackTest.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/Neo4jPackTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Nodes.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Nodes.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Paths.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Paths.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Relationships.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Relationships.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "Support.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/example/Support.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "ValuePathTest.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/infrastructure/ValuePathTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "MessageMatchers.java",
    "refactorings": [],
    "filePath": "community/ndp/messaging-v1/src/test/java/org/neo4j/ndp/messaging/v1/util/MessageMatchers.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PackStreamTest.java",
    "refactorings": [],
    "filePath": "community/ndp/packstream-v1/src/test/java/org/neo4j/packstream/PackStreamTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "FragmentedMessageDeliveryTest.java",
    "refactorings": [],
    "filePath": "community/ndp/transport-socket/src/test/java/org/neo4j/ndp/transport/socket/FragmentedMessageDeliveryTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "DocSerialization.java",
    "refactorings": [
      {
        "rightSideLineNumber": 71,
        "description": "Change Variable Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String) : byte[] from class org.neo4j.ndp.docs.v1.DocSerialization",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Change Parameter Type packer : PackStream.Packer to packer : Neo4jPack.Packer in method public pack(value String, packer Neo4jPack.Packer, writer PackStreamMessageFormatV1.Writer) : void from class org.neo4j.ndp.docs.v1.DocSerialization",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/DocSerialization.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "DocStruct.java",
    "refactorings": [
      {
        "rightSideLineNumber": 85,
        "description": "Encapsulate Attribute private name : String from class org.neo4j.ndp.docs.v1.DocStruct.Field",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 67,
        "description": "Add Parameter exampleValue : String in method public Field(typeSignature String, name String, exampleValue String) from class org.neo4j.ndp.docs.v1.DocStruct.Field",
        "type": "Add Parameter"
      }
    ],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/DocStruct.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPMessageStructsDocTest.java",
    "refactorings": [],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPMessageStructsDocTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPValueDocTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 89,
        "description": "Change Method Access Modifier private to public in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 89,
        "description": "Add Method Modifier static in method public isPackstreamType(packStreamType String) : Matcher<? super byte[]> from class org.neo4j.ndp.docs.v1.NDPValueDocTest",
        "type": "Add Method Modifier"
      }
    ],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPValueDocTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "NDPValueStructsDocTest.java",
    "refactorings": [],
    "filePath": "community/ndp/v1-docs/src/test/java/org/neo4j/ndp/docs/v1/NDPValueStructsDocTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "PrimitiveLongIntKeyValueArrayTest.java",
    "refactorings": [],
    "filePath": "community/primitive-collections/src/test/java/org/neo4j/collection/primitive/PrimitiveLongIntKeyValueArrayTest.java",
    "commit": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "repository": "https://github.com/neo4j/neo4j.git",
    "fileType": "test"
  },
  {
    "fileName": "BinaryJedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/BinaryJedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryJedisCluster.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/BinaryJedisCluster.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryShardedJedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/BinaryShardedJedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Client.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Client.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Connection.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Connection.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Jedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Jedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisCluster.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/JedisCluster.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyPipelineBase.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/MultiKeyPipelineBase.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "PipelineBase.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/PipelineBase.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Protocol.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/Protocol.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ShardedJedis.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/ShardedJedis.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "AdvancedBinaryJedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/AdvancedBinaryJedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "AdvancedJedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/AdvancedJedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BasicCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BasicCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BasicRedisPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BasicRedisPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryJedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryJedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryJedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryJedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryRedisPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryRedisPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "BinaryScriptingCommandsPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/BinaryScriptingCommandsPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ClusterPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ClusterPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "Commands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/Commands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisClusterBinaryScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisClusterBinaryScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisClusterScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisClusterScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "JedisCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/JedisCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyBinaryCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyBinaryCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyBinaryJedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyBinaryJedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyBinaryRedisPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyBinaryRedisPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyCommandsPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyCommandsPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "MultiKeyJedisClusterCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/MultiKeyJedisClusterCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ProtocolCommand.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ProtocolCommand.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ScriptingCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ScriptingCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ScriptingCommandsPipeline.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/ScriptingCommandsPipeline.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "SentinelCommands.java",
    "refactorings": [],
    "filePath": "src/main/java/redis/clients/jedis/commands/SentinelCommands.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "main"
  },
  {
    "fileName": "ConnectionTest.java",
    "refactorings": [],
    "filePath": "src/test/java/redis/clients/jedis/tests/ConnectionTest.java",
    "commit": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "repository": "https://github.com/xetorthio/jedis.git",
    "fileType": "test"
  },
  {
    "fileName": "AbstractApplePlatform.java",
    "refactorings": [{
      "rightSideLineNumber": 26,
      "description": "Change Class Access Modifier package to public in class com.facebook.buck.apple.AbstractApplePlatform.Name",
      "type": "Change Class Access Modifier"
    }],
    "filePath": "src/com/facebook/buck/apple/AbstractApplePlatform.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractCodeSignIdentity.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AbstractCodeSignIdentity.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractProvisioningProfileMetadata.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AbstractProvisioningProfileMetadata.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleBundle.java",
    "refactorings": [
      {
        "rightSideLineNumber": 258,
        "description": "Encapsulate Attribute private platformName : String from class com.facebook.buck.apple.AppleBundle",
        "type": "Encapsulate Attribute"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Parameter sdk : AppleSdk in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, sdk AppleSdk, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>, provisioningProfileSearchPath Optional<SourcePath>) from class com.facebook.buck.apple.AppleBundle",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Parameter allValidCodeSignIdentities : ImmutableSet<CodeSignIdentity> in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, sdk AppleSdk, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>, provisioningProfileSearchPath Optional<SourcePath>) from class com.facebook.buck.apple.AppleBundle",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Add Parameter provisioningProfileSearchPath : Optional<SourcePath> in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, sdk AppleSdk, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>, provisioningProfileSearchPath Optional<SourcePath>) from class com.facebook.buck.apple.AppleBundle",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Remove Parameter platformName : String in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, platformName String, sdkName String) from class com.facebook.buck.apple.AppleBundle",
        "type": "Remove Parameter"
      },
      {
        "rightSideLineNumber": 131,
        "description": "Remove Parameter sdkName : String in method package AppleBundle(params BuildRuleParams, resolver SourcePathResolver, extension Either<AppleBundleExtension,String>, infoPlist Optional<SourcePath>, infoPlistSubstitutions Map<String,String>, binary Optional<BuildRule>, destinations AppleBundleDestinations, resourceDirs Set<SourcePath>, resourceFiles Set<SourcePath>, dirsContainingResourceDirs Set<SourcePath>, resourceVariantFiles Optional<ImmutableSet<SourcePath>>, ibtool Tool, dsymutil Tool, strip Tool, bundledAssetCatalogs Set<AppleAssetCatalog>, mergedAssetCatalog Optional<AppleAssetCatalog>, tests Set<BuildTarget>, platformName String, sdkName String) from class com.facebook.buck.apple.AppleBundle",
        "type": "Remove Parameter"
      }
    ],
    "filePath": "src/com/facebook/buck/apple/AppleBundle.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleBundleDescription.java",
    "refactorings": [{
      "rightSideLineNumber": 68,
      "description": "Add Parameter allValidCodeSignIdentities : ImmutableSet<CodeSignIdentity> in method public AppleBundleDescription(appleBinaryDescription AppleBinaryDescription, appleLibraryDescription AppleLibraryDescription, cxxPlatformFlavorDomain FlavorDomain<CxxPlatform>, platformFlavorsToAppleCxxPlatforms Map<Flavor,AppleCxxPlatform>, defaultCxxPlatform CxxPlatform, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>) from class com.facebook.buck.apple.AppleBundleDescription",
      "type": "Add Parameter"
    }],
    "filePath": "src/com/facebook/buck/apple/AppleBundleDescription.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleConfig.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/AppleConfig.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "CodeSignStep.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/CodeSignStep.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "InfoPlistSubstitution.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/InfoPlistSubstitution.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "PlistProcessStep.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/PlistProcessStep.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "ProvisioningProfileCopyStep.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/apple/ProvisioningProfileCopyStep.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "InstallCommand.java",
    "refactorings": [{
      "rightSideLineNumber": 264,
      "description": "Extract Method private installAppleBundleForSimulator(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult extracted from private installAppleBundle(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult in class com.facebook.buck.cli.InstallCommand",
      "type": "Extract Method"
    }],
    "filePath": "src/com/facebook/buck/cli/InstallCommand.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "KnownBuildRuleTypes.java",
    "refactorings": [],
    "filePath": "src/com/facebook/buck/rules/KnownBuildRuleTypes.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "main"
  },
  {
    "fileName": "AppleTestDescription.java",
    "refactorings": [{
      "rightSideLineNumber": 92,
      "description": "Add Parameter allValidCodeSignIdentities : ImmutableSet<CodeSignIdentity> in method public AppleTestDescription(appleConfig AppleConfig, appleBundleDescription AppleBundleDescription, appleLibraryDescription AppleLibraryDescription, cxxPlatformFlavorDomain FlavorDomain<CxxPlatform>, platformFlavorsToAppleCxxPlatforms Map<Flavor,AppleCxxPlatform>, defaultCxxPlatform CxxPlatform, allValidCodeSignIdentities ImmutableSet<CodeSignIdentity>) from class com.facebook.buck.apple.AppleTestDescription",
      "type": "Add Parameter"
    }],
    "filePath": "src/com/facebook/buck/apple/AppleTestDescription.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "AppleBundleIntegrationTest.java",
    "refactorings": [{
      "rightSideLineNumber": 76,
      "description": "Add Thrown Exception Type InterruptedException in method public simpleApplicationBundle() : void from class com.facebook.buck.apple.AppleBundleIntegrationTest",
      "type": "Add Thrown Exception Type"
    }],
    "filePath": "test/com/facebook/buck/apple/AppleBundleIntegrationTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "FakeAppleRuleDescriptions.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/FakeAppleRuleDescriptions.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "InfoPlistSubstitutionTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/InfoPlistSubstitutionTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "ProvisioningProfileCopyStepTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/ProvisioningProfileCopyStepTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "ProvisioningProfileMetadataTest.java",
    "refactorings": [],
    "filePath": "test/com/facebook/buck/apple/ProvisioningProfileMetadataTest.java",
    "commit": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "repository": "https://github.com/facebook/buck.git",
    "fileType": "test"
  },
  {
    "fileName": "JobValidator.java",
    "refactorings": [],
    "filePath": "helios-client/src/main/java/com/spotify/helios/common/JobValidator.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "Job.java",
    "refactorings": [{
      "rightSideLineNumber": 138,
      "description": "Add Parameter hostname : String in method public Job(id JobId, image String, hostname String, command List<String>, env Map<String,String>, resources Resources, ports Map<String,PortMapping>, registration Map<ServiceEndpoint,ServicePorts>, gracePeriod Integer, volumes Map<String,String>, expires Date, registrationDomain String, creatingUser String, token String, healthCheck HealthCheck, securityOpt List<String>, networkMode String) from class com.spotify.helios.common.descriptors.Job",
      "type": "Add Parameter"
    }],
    "filePath": "helios-client/src/main/java/com/spotify/helios/common/descriptors/Job.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "TaskConfig.java",
    "refactorings": [],
    "filePath": "helios-services/src/main/java/com/spotify/helios/agent/TaskConfig.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "JobCreateCommand.java",
    "refactorings": [],
    "filePath": "helios-tools/src/main/java/com/spotify/helios/cli/command/JobCreateCommand.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "JobInspectCommand.java",
    "refactorings": [],
    "filePath": "helios-tools/src/main/java/com/spotify/helios/cli/command/JobInspectCommand.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "main"
  },
  {
    "fileName": "JobValidatorTest.java",
    "refactorings": [],
    "filePath": "helios-client/src/test/java/com/spotify/helios/common/JobValidatorTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "JobTest.java",
    "refactorings": [],
    "filePath": "helios-client/src/test/java/com/spotify/helios/common/descriptors/JobTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "ContainerHostNameTest.java",
    "refactorings": [],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/ContainerHostNameTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "IdMismatchJobCreateTest.java",
    "refactorings": [],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/IdMismatchJobCreateTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "JobCreateTest.java",
    "refactorings": [],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/JobCreateTest.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "SystemTestBase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 741,
        "description": "Extract Method protected createJobRawOutput(job Job) : String extracted from protected createJob(job Job) : JobId in class com.spotify.helios.system.SystemTestBase",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 714,
        "description": "Add Parameter hostname : String in method protected createJob(name String, version String, image String, hostname String, command List<String>, env Map<String,String>, ports Map<String,PortMapping>, registration Map<ServiceEndpoint,ServicePorts>, gracePeriod Integer, volumes Map<String,String>, expires Date) : JobId from class com.spotify.helios.system.SystemTestBase",
        "type": "Add Parameter"
      }
    ],
    "filePath": "helios-system-tests/src/main/java/com/spotify/helios/system/SystemTestBase.java",
    "commit": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "repository": "https://github.com/spotify/helios.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangBuilder.java",
    "refactorings": [
      {
        "rightSideLineNumber": 504,
        "description": "Change Parameter Type nodes : List<String> to nodes : Collection<String> in method private getNodesByName(nodes Collection<String>) : List<Node> from class org.intellij.erlang.jps.builder.ErlangBuilder.SortedModuleDependencyGraph",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 502,
        "description": "Add Parameter Annotation @NotNull in parameter nodes : Collection<String> in method private getNodesByName(nodes Collection<String>) : List<Node> from class org.intellij.erlang.jps.builder.ErlangBuilder.SortedModuleDependencyGraph",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 309,
        "description": "Rename Method private getErlangModuleDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> renamed to private getErlangFileDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> in class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 126,
        "description": "Extract Method private isSourceOrHeader(file File) : boolean extracted from private buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder<ErlangSourceRootDescriptor,ErlangTarget>, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void in class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 130,
        "description": "Rename Variable dirtyErlangModulePaths : List<String> to dirtyErlangFilePaths : List<String> in method private buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder<ErlangSourceRootDescriptor,ErlangTarget>, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 189,
        "description": "Add Method Annotation @NotNull in method private getAppConfigDestinationFileName(sourceFileName String) : String from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 263,
        "description": "Rename Variable moduleDescriptors : List<ErlangFileDescriptor> to fileDescriptors : List<ErlangFileDescriptor> in method private getErlangModulePaths(target ErlangTarget, context CompileContext, dirtyFilePaths List<String>, isTest boolean) : List<String> from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 268,
        "description": "Add Method Annotation @NotNull in method private getSortedErlangModulePathsToCompile(sortedModuleDescriptors List<ErlangFileDescriptor>, dirtyModules List<String>) : List<String> from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 419,
        "description": "Add Method Annotation @NotNull in method private getOutputErlangModuleFiles(erlangModulePathsToCompile List<String>, outputDirectory File) : List<File> from class org.intellij.erlang.jps.builder.ErlangBuilder",
        "type": "Add Method Annotation"
      }
    ],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangBuilder.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangFileDescriptor.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangFileDescriptor.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangModuleBuildOrderDescriptor.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangModuleBuildOrderDescriptor.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangSourceRootDescriptor.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangSourceRootDescriptor.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangTarget.java",
    "refactorings": [],
    "filePath": "jps-plugin/src/org/intellij/erlang/jps/builder/ErlangTarget.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangPrepareDependenciesCompileTask.java",
    "refactorings": [
      {
        "rightSideLineNumber": 148,
        "description": "Change Variable Type builder : DFSTBuilder<Node> to builder : DFSTBuilder<String> in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Change Variable Type"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Parameter module : Module in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Parameter onlyTestModules : boolean in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Method Annotation @NotNull in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Add Method Modifier static in method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Add Method Modifier"
      },
      {
        "rightSideLineNumber": 142,
        "description": "Move And Rename Method private getSortedModules() : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter to private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List<ErlangFileDescriptor> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "type": "Move And Rename Method"
      },
      {
        "rightSideLineNumber": 256,
        "description": "Rename Parameter pt : String to name : String in method public fun(name String) : String from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getPathsFromNames.mapNotNull.new Function<String,String>",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 254,
        "description": "Change Return Type Node to String in method public fun(name String) : String from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph.getPathsFromNames.mapNotNull.new Function<String,String>",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Add Parameter Annotation @NotNull in parameter erlangModuleNames : Collection<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 253,
        "description": "Rename Parameter nodesName : Collection<String> to erlangModuleNames : Collection<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Change Return Type List<Node> to List<String> in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Change Return Type"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Add Method Annotation @NotNull in method private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 251,
        "description": "Move And Rename Method private getModuleNodes(nodesName Collection<String>) : List<Node> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangModulesSorter.ErlangModulesDependencyGraph to private getPathsFromNames(erlangModuleNames Collection<String>) : List<String> from class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask.ErlangFilesDependencyGraph",
        "type": "Move And Rename Method"
      }
    ],
    "filePath": "src/org/intellij/erlang/compilation/ErlangPrepareDependenciesCompileTask.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangPsiImplUtil.java",
    "refactorings": [{
      "rightSideLineNumber": 1075,
      "description": "Change Method Access Modifier private to public in method public addDeclaredBehaviourModuleNames(file ErlangFile, behaviourNames Set<String>) : void from class org.intellij.erlang.psi.impl.ErlangPsiImplUtil",
      "type": "Change Method Access Modifier"
    }],
    "filePath": "src/org/intellij/erlang/psi/impl/ErlangPsiImplUtil.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangModulesUtil.java",
    "refactorings": [
      {
        "rightSideLineNumber": 116,
        "description": "Rename Method private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> renamed to private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 122,
        "description": "Extract Method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void extracted from private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 144,
        "description": "Add Parameter Annotation @NotNull in parameter filesCollector : Processor<VirtualFile> in method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 153,
        "description": "Parameterize Variable modulesCollector : Processor<VirtualFile> to filesCollector : Processor<VirtualFile> in method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Parameterize Variable"
      },
      {
        "rightSideLineNumber": 121,
        "description": "Rename Variable modulesCollector : Processor<VirtualFile> to filesCollector : Processor<VirtualFile> in method private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 116,
        "description": "Add Parameter type : ErlangFileType in method private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 176,
        "description": "Add Parameter type : ErlangFileType in method private getErlangModulesCollector(psiManager PsiManager, erlangFiles Collection<ErlangFile>, type ErlangFileType) : Processor<VirtualFile> from class org.intellij.erlang.utils.ErlangModulesUtil",
        "type": "Add Parameter"
      }
    ],
    "filePath": "src/org/intellij/erlang/utils/ErlangModulesUtil.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "main"
  },
  {
    "fileName": "ErlangCompilationTestBase.java",
    "refactorings": [
      {
        "rightSideLineNumber": 149,
        "description": "Extract Method private addFile(sourceDir VirtualFile, relativePath String, content String) : VirtualFile extracted from protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 241,
        "description": "Extract Method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile extracted from private addSourceRoot(module Module, sourceRootName String, isTestSourceRoot boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 232,
        "description": "Change Parameter Type isTestSourceRoot : boolean to rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Change Parameter Type"
      },
      {
        "rightSideLineNumber": 221,
        "description": "Add Parameter Annotation @NotNull in parameter rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 232,
        "description": "Rename Parameter isTestSourceRoot : boolean to rootType : JpsModuleSourceRootType<?> in method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Add Parameter Annotation @NotNull in parameter module : Module in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Add Parameter Annotation @NotNull in parameter relativePath : String in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 138,
        "description": "Add Parameter Annotation @NotNull in parameter content : String in method protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Parameter Annotation"
      },
      {
        "rightSideLineNumber": 188,
        "description": "Add Method Annotation @Nullable in method public fun(source String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase.assertSourcesCompiled.assertContains.mapNotNull.new Function<String,String>",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 211,
        "description": "Extract Variable expectedOutputFileName : String in method protected getOutputFile(module Module, sourceFile VirtualFile, isTest boolean) : File from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Add Method Annotation @Nullable in method protected getOutputFile(module Module, sourceFile VirtualFile, isTest boolean) : File from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 270,
        "description": "Extract Variable file : File in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 267,
        "description": "Add Method Annotation @Nullable in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Add Method Annotation"
      },
      {
        "rightSideLineNumber": 267,
        "description": "Remove Method Annotation @NotNull in method private getExpectedOutputFileName(relativePath String) : String from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Remove Method Annotation"
      },
      {
        "rightSideLineNumber": 199,
        "description": "Change Parameter Type fileNames : String... to fileNames : List<String> in method protected assertContains(parentPath VirtualFile, fileNames List<String>) : void from class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "type": "Change Parameter Type"
      }
    ],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangCompilationTestBase.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangDependenciesResolutionTest.java",
    "refactorings": [{
      "rightSideLineNumber": 123,
      "description": "Rename Method private assertSameErlangModules(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String...) : void renamed to private assertSameErlangFiles(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String...) : void in class org.intellij.erlang.compilation.ErlangDependenciesResolutionTest",
      "type": "Rename Method"
    }],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangDependenciesResolutionTest.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangModuleCompilationTest.java",
    "refactorings": [{
      "rightSideLineNumber": 200,
      "description": "Extract Variable outputFile : File in method private lastOutputModificationTime(module Module, sourceFile VirtualFile) : long from class org.intellij.erlang.compilation.ErlangModuleCompilationTest",
      "type": "Extract Variable"
    }],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangModuleCompilationTest.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "ErlangModuleTextGenerator.java",
    "refactorings": [],
    "filePath": "tests/org/intellij/erlang/compilation/ErlangModuleTextGenerator.java",
    "commit": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathExpectationsHelper.java",
    "refactorings": [
      {
        "rightSideLineNumber": 241,
        "description": "Extract Method private assertExistsAndReturn(content String) : Object extracted from public assertValueIsArray(responseContent String) : void in class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 244,
        "description": "Extract Method private assertExistsAndReturn(content String) : Object extracted from public exists(content String) : void in class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Extract Method"
      },
      {
        "rightSideLineNumber": 240,
        "description": "Extract Variable reason : String in method private assertExistsAndReturn(content String) : Object from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Extract Variable"
      },
      {
        "rightSideLineNumber": 240,
        "description": "Rename Variable actualValue : Object to value : Object in method private assertExistsAndReturn(content String) : Object from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 238,
        "description": "Rename Parameter responseContent : String to content : String in method private assertExistsAndReturn(content String) : Object from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 174,
        "description": "Rename Variable actualValue : Object to value : Object in method public assertValueIsArray(content String) : void from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 171,
        "description": "Rename Parameter responseContent : String to content : String in method public assertValueIsArray(content String) : void from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 111,
        "description": "Rename Parameter responseContent : String to content : String in method public assertValue(content String, expectedValue Object) : void from class org.springframework.test.util.JsonPathExpectationsHelper",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "spring-test/src/main/java/org/springframework/test/util/JsonPathExpectationsHelper.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathResultMatchers.java",
    "refactorings": [],
    "filePath": "spring-test/src/main/java/org/springframework/test/web/servlet/result/JsonPathResultMatchers.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "MockMvcResultMatchers.java",
    "refactorings": [],
    "filePath": "spring-test/src/main/java/org/springframework/test/web/servlet/result/MockMvcResultMatchers.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathExpectationsHelperTests.java",
    "refactorings": [],
    "filePath": "spring-test/src/test/java/org/springframework/test/util/JsonPathExpectationsHelperTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "JsonPathResultMatchersTests.java",
    "refactorings": [],
    "filePath": "spring-test/src/test/java/org/springframework/test/web/servlet/result/JsonPathResultMatchersTests.java",
    "commit": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "fileType": "test"
  },
  {
    "fileName": "Checker.java",
    "refactorings": [
      {
        "rightSideLineNumber": 176,
        "description": "Replace Loop With Pipeline for(final fsc: fileSetChecks) with fileSetChecks.forEach(FileSetCheck::finishProcessing); in method public process(files List<File>) : int from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 176,
        "description": "Replace Loop With Pipeline for(final fsc: fileSetChecks) with fileSetChecks.forEach(FileSetCheck::destroy); in method public process(files List<File>) : int from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 210,
        "description": "Replace Loop With Pipeline for(check: fileSetChecks) with fileSetChecks.stream().filter(check -> check instanceof ExternalResourceHolder).forEach(check -> { in method private getExternalResourceLocations() : Set<String> from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 210,
        "description": "Replace Loop With Pipeline for(filter: filters.getFilters()) with filters.getFilters().stream().filter(filter -> filter instanceof ExternalResourceHolder).forEach(filter -> { in method private getExternalResourceLocations() : Set<String> from class com.puppycrawl.tools.checkstyle.Checker",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Main.java",
    "refactorings": [{
      "rightSideLineNumber": 136,
      "description": "Replace Loop With Pipeline for(message: messages) with messages.forEach(System.out::println); in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.Main",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "PackageObjectFactory.java",
    "refactorings": [
      {
        "rightSideLineNumber": 124,
        "description": "Replace Loop With Pipeline for(packageName: packages) with names.addAll(packages.stream().map(packageName -> packageName + name).collect(Collectors.toList())); in method private getAllPossibleNames(name String) : Set<String> from class com.puppycrawl.tools.checkstyle.PackageObjectFactory",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 136,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.PackageObjectFactory.joinPackageNamesWithClassName.collect.filter.new Predicate<String> with name -> name != null in method private joinPackageNamesWithClassName(className String, packages Set<String>) : String from class com.puppycrawl.tools.checkstyle.PackageObjectFactory",
        "type": "Replace Anonymous With Lambda"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "PropertyCacheFile.java",
    "refactorings": [
      {
        "rightSideLineNumber": 297,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.PropertyCacheFile.areExternalResourcesChanged.isPresent.tryFind.new Predicate<ExternalResource> with resource -> {boolean changed=false; in method private areExternalResourcesChanged(resources Set<ExternalResource>) : boolean from class com.puppycrawl.tools.checkstyle.PropertyCacheFile",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 319,
        "description": "Replace Loop With Pipeline for(resource: externalResources) with externalResources.stream().filter(resource -> !isResourceLocationInCache(resource.location)).forEach(resource -> details.setProperty(resource.location,resource.contentHashSum)); in method private fillCacheWithExternalResources(externalResources Set<ExternalResource>) : void from class com.puppycrawl.tools.checkstyle.PropertyCacheFile",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeWalker.java",
    "refactorings": [
      {
        "rightSideLineNumber": 457,
        "description": "Replace Loop With Pipeline for(check: ordinaryChecks) with ordinaryChecks.forEach(AbstractCheck::destroy); in method public destroy() : void from class com.puppycrawl.tools.checkstyle.TreeWalker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 457,
        "description": "Replace Loop With Pipeline for(check: commentChecks) with commentChecks.forEach(AbstractCheck::destroy); in method public destroy() : void from class com.puppycrawl.tools.checkstyle.TreeWalker",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 475,
        "description": "Replace Loop With Pipeline for(check: checks) with checks.stream().filter(check -> check instanceof ExternalResourceHolder).forEach(check -> { in method private getExternalResourceLocations(checks Set<AbstractCheck>) : Set<String> from class com.puppycrawl.tools.checkstyle.TreeWalker",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "LocalizedMessage.java",
    "refactorings": [{
      "rightSideLineNumber": 57,
      "description": "Replace Generic With Diamond HashMap<String,ResourceBundle> with HashMap<> in attribute private BUNDLE_CACHE : Map<String,ResourceBundle> from class com.puppycrawl.tools.checkstyle.api.LocalizedMessage",
      "type": "Replace Generic With Diamond"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EqualsAvoidNullCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 251,
      "description": "Replace Loop With Pipeline for(methodCall: child.getMethodCalls()) with child.getMethodCalls().forEach(this::checkMethodCall); in method private traverseFieldFrameTree(frame FieldFrame) : void from class com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EqualsHashCodeCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 139,
      "description": "Replace Loop With Pipeline for(detailASTDetailASTEntry: objBlockWithEquals.entrySet()) with objBlockWithEquals.entrySet().stream().filter(detailASTDetailASTEntry -> objBlockWithHashCode.remove(detailASTDetailASTEntry.getKey()) == null).forEach(detailASTDetailASTEntry -> { in method public finishTree(rootAST DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "FinalLocalVariableCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 310,
      "description": "Replace Loop With Pipeline for(variable: scopeData.uninitializedVariables) with scopeData.uninitializedVariables.forEach(prevScopeUnitializedVariableData::push); in method private storePrevScopeUninitializedVariableData() : void from class com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalInstantiationCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 143,
      "description": "Replace Loop With Pipeline for(literalNewAST: instantiations) with instantiations.forEach(this::postProcessLiteralNew); in method public finishTree(rootAST DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ModifiedControlVariableCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 368,
      "description": "Replace Loop With Pipeline for(iteratingExpressionAST: findChildrenOfExpressionType(forUpdateListAST)) with findChildrenOfExpressionType(forUpdateListAST).stream().filter(iteratingExpressionAST -> MUTATION_OPERATIONS.contains(iteratingExpressionAST.getType())).forEach(iteratingExpressionAST -> { in method private getForIteratorVariables(ast DetailAST) : Set<String> from class com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "VisibilityModifierCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 723,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck.areImmutableTypeArguments.isPresent.tryFind.new Predicate<String> with typeName -> !immutableClassShortNames.contains(typeName) && !immutableClassCanonicalNames.contains(typeName) in method private areImmutableTypeArguments(typeArgsClassNames List<String>) : boolean from class com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RedundantImportCheck.java",
    "refactorings": [
      {
        "rightSideLineNumber": 107,
        "description": "Replace Loop With Pipeline for(full: imports) with imports.stream().filter(full -> imp.getText().equals(full.getText())).forEach(full -> log(ast.getLineNo(),ast.getColumnNo(),MSG_DUPLICATE,full.getLineNo(),imp.getText())); in method public visitToken(ast DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 107,
        "description": "Replace Loop With Pipeline for(full: staticImports) with staticImports.stream().filter(full -> imp.getText().equals(full.getText())).forEach(full -> log(ast.getLineNo(),ast.getColumnNo(),MSG_DUPLICATE,full.getLineNo(),imp.getText())); in method public visitToken(ast DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UnusedImportsCheck.java",
    "refactorings": [
      {
        "rightSideLineNumber": 101,
        "description": "Replace Loop With Pipeline for(final imp: imports) with imports.stream().filter(imp -> !referenced.contains(CommonUtils.baseClassName(imp.getText()))).forEach(imp -> log(imp.getLineNo(),imp.getColumnNo(),MSG_KEY,imp.getText())); in method public finishTree(rootAST DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 229,
        "description": "Replace Loop With Pipeline for(final tag: getValidTags(textBlock,JavadocUtils.JavadocTagType.INLINE)) with getValidTags(textBlock,JavadocUtils.JavadocTagType.INLINE).stream().filter(JavadocTag::canReferenceImports).forEach(tag -> references.addAll(processJavadocTag(tag))); in method private collectReferencesFromJavadoc(textBlock TextBlock) : Set<String> from class com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 229,
        "description": "Replace Loop With Pipeline for(final tag: getValidTags(textBlock,JavadocUtils.JavadocTagType.BLOCK)) with getValidTags(textBlock,JavadocUtils.JavadocTagType.BLOCK).stream().filter(JavadocTag::canReferenceImports).forEach(tag -> references.addAll(matchPattern(tag.getFirstArg(),FIRST_CLASS_NAME))); in method private collectReferencesFromJavadoc(textBlock TextBlock) : Set<String> from class com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocMethodCheck.java",
    "refactorings": [
      {
        "rightSideLineNumber": 474,
        "description": "Replace Loop With Pipeline for(javadocTag: tags) with tags.stream().filter(javadocTag -> !javadocTag.isSeeOrInheritDocTag()).forEach(javadocTag -> log(javadocTag.getLineNo(),MSG_UNUSED_TAG_GENERAL)); in method private checkComment(ast DetailAST, comment TextBlock) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 865,
        "description": "Replace Loop With Pipeline for(exceptionInfo: throwsList) with throwsList.stream().filter(exceptionInfo -> !exceptionInfo.isFound()).forEach(exceptionInfo -> { in method private checkThrowsTags(tags List<JavadocTag>, throwsList List<ExceptionInfo>, reportExpectedTags boolean) : void from class com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavaNCSSCheck.java",
    "refactorings": [{
      "rightSideLineNumber": 192,
      "description": "Replace Loop With Pipeline for(final counter: counters) with counters.forEach(Counter::increment); in method public visitToken(ast DetailAST) : void from class com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressWithNearbyCommentFilter.java",
    "refactorings": [{
      "rightSideLineNumber": 231,
      "description": "Replace Loop With Pipeline for(final element: cComments) with cComments.forEach(this::tagSuppressions); in method private tagSuppressions() : void from class com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressionCommentFilter.java",
    "refactorings": [{
      "rightSideLineNumber": 226,
      "description": "Replace Loop With Pipeline for(element: cComments) with cComments.forEach(this::tagSuppressions); in method private tagSuppressions() : void from class com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ListToTreeSelectionModelWrapper.java",
    "refactorings": [{
      "rightSideLineNumber": 41,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.gui.ListToTreeSelectionModelWrapper.ListToTreeSelectionModelWrapper.addListSelectionListener.new ListSelectionListener with event -> updateSelectedPathsFromSelectedRows() in method package ListToTreeSelectionModelWrapper(jTreeTable JTreeTable) from class com.puppycrawl.tools.checkstyle.gui.ListToTreeSelectionModelWrapper",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Main.java",
    "refactorings": [{
      "rightSideLineNumber": 39,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.gui.Main.main.invokeLater.new Runnable with () -> {final MainFrame mainFrame=new MainFrame(); in method public main(args String...) : void from class com.puppycrawl.tools.checkstyle.gui.Main",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/Main.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeTableModelAdapter.java",
    "refactorings": [{
      "rightSideLineNumber": 111,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter.delayedFireTableDataChanged.invokeLater.new Runnable with this::fireTableDataChanged in method private delayedFireTableDataChanged() : void from class com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "BaseCheckTestSupport.java",
    "refactorings": [{
      "rightSideLineNumber": 176,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.BaseCheckTestSupport.verify.realExpectedViolations.filterValues.new Predicate<List<String>> with input -> !input.isEmpty() in method protected verify(checker Checker, processedFiles File[], expectedViolations Map<String,List<String>>) : void from class com.puppycrawl.tools.checkstyle.BaseCheckTestSupport",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "CheckerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 272,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testSetters() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 320,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testFinishLocalSetupFullyInitialized() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 331,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testSetupChildExceptions() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 348,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testSetupChildListener() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 451,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testWithCacheWithNoViolation() : void from class com.puppycrawl.tools.checkstyle.CheckerTest",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "MainTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 143,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testVersionPrint.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Checkstyle version: null\" + System.lineSeparator(),systemOut.getLog()); in method public testVersionPrint() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 155,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testWrongArgument.checkAssertionAfterwards.new Assertion with () -> {final String usage=String.format(Locale.ROOT,\"Unrecognized option: -w%n\") + USAGE; in method public testWrongArgument() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 168,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNoConfigSpecified.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Must specify a config XML file.\" + System.lineSeparator(),systemOut.getLog()); in method public testNoConfigSpecified() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 180,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingTargetFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Files to process must be specified, found 0.\" + System.lineSeparator(),systemOut.getLog()); in method public testNonExistingTargetFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 192,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingConfigFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Could not find config XML file \" + \"'src/main/resources/non_existing_config.xml'.%n\"),systemOut.getLog()); in method public testNonExistingConfigFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 207,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingOutputFormat.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Invalid output format. \" + \"Found 'xmlp' but expected 'plain' or 'xml'.%n\"),systemOut.getLog()); in method public testNonExistingOutputFormat() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 219,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testNonExistingClass.checkAssertionAfterwards.new Assertion with () -> {final String expectedExceptionMessage=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testNonExistingClass() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 236,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Starting audit...%n\" + \"Audit done.%n\"),systemOut.getLog()); in method public testExistingTargetFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 248,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFileXmlOutput.checkAssertionAfterwards.new Assertion with () -> {final String expectedPath=getFilePath(\"InputMain.java\"); in method public testExistingTargetFileXmlOutput() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 270,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutput.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Starting audit...%n\" + \"Audit done.%n\"),systemOut.getLog()); in method public testExistingTargetFilePlainOutput() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 283,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFileWithViolations.checkAssertionAfterwards.new Assertion with () -> {final String expectedPath=getFilePath(\"InputMain.java\"); in method public testExistingTargetFileWithViolations() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 302,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFileWithError.checkAssertionAfterwards.new Assertion with () -> {final String expectedPath=getFilePath(\"InputMain.java\"); in method public testExistingTargetFileWithError() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 322,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputToNonExistingFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"\",systemOut.getLog()); in method public testExistingTargetFilePlainOutputToNonExistingFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 336,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputToFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"\",systemOut.getLog()); in method public testExistingTargetFilePlainOutputToFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 361,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputProperties.checkAssertionAfterwards.new Assertion with () -> {assertEquals(String.format(Locale.ROOT,\"Starting audit...%n\" + \"Audit done.%n\"),systemOut.getLog()); in method public testExistingTargetFilePlainOutputProperties() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 375,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingTargetFilePlainOutputNonexistingProperties.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Could not find file 'nonexisting.properties'.\" + System.lineSeparator(),systemOut.getLog()); in method public testExistingTargetFilePlainOutputNonexistingProperties() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 389,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingIncorrectConfigFile.checkAssertionAfterwards.new Assertion with () -> {final String output=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testExistingIncorrectConfigFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 405,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingIncorrectChildrenInConfigFile.checkAssertionAfterwards.new Assertion with () -> {final String output=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testExistingIncorrectChildrenInConfigFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 422,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExistingIncorrectChildrenInConfigFile2.checkAssertionAfterwards.new Assertion with () -> {final String output=String.format(Locale.ROOT,\"Checkstyle ends with 1 errors.%n\"); in method public testExistingIncorrectChildrenInConfigFile2() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 574,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testFileReferenceDuringException.checkAssertionAfterwards.new Assertion with () -> {final String expectedExceptionMessage=String.format(Locale.ROOT,\"Starting audit...%n\" + \"Checkstyle ends with 1 errors.%n\"); in method public testFileReferenceDuringException() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 596,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeOnMoreThanOneFile.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Printing AST is allowed for only one file.\" + System.lineSeparator(),systemOut.getLog()); in method public testPrintTreeOnMoreThanOneFile() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 609,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog()); in method public testPrintTreeOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 644,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeCommentsOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog()); in method public testPrintTreeCommentsOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 682,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintTreeJavadocOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog().replaceAll(\"\\\\\\\\r\\\\\\\\n\",\"\\\\\\\\n\")); in method public testPrintTreeJavadocOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 695,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testPrintFullTreeOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(expected,systemOut.getLog().replaceAll(\"\\\\\\\\r\\\\\\\\n\",\"\\\\\\\\n\")); in method public testPrintFullTreeOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 708,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsC.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsC() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 721,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsP.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsP() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 734,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsF.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsF() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 747,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testConflictingOptionsTvsO.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Option '-t' cannot be used with other options.\" + System.lineSeparator(),systemOut.getLog()); in method public testConflictingOptionsTvsO() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 761,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testDebugOption.checkAssertionAfterwards.new Assertion with () -> assertNotEquals(\"\",systemErr.getLog()) in method public testDebugOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 767,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExcludeOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Files to process must be specified, found 0.\" + System.lineSeparator(),systemOut.getLog()); in method public testExcludeOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      },
      {
        "rightSideLineNumber": 778,
        "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.MainTest.testExcludeRegexpOption.checkAssertionAfterwards.new Assertion with () -> {assertEquals(\"Files to process must be specified, found 0.\" + System.lineSeparator(),systemOut.getLog()); in method public testExcludeRegexpOption() : void from class com.puppycrawl.tools.checkstyle.MainTest",
        "type": "Replace Anonymous With Lambda"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "PackageObjectFactoryTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 41,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in attribute private factory : PackageObjectFactory from class com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 44,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testCtorException() : void from class com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TreeWalkerTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 154,
        "description": "Replace Generic With Diamond ArrayList<String> with ArrayList<> in method public testProcessNonJavaFiles() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 163,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testWithCacheWithNoViolation() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 177,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testProcessWithParserThrowable() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      },
      {
        "rightSideLineNumber": 198,
        "description": "Replace Generic With Diamond PackageObjectFactory with PackageObjectFactory in method public testProcessWithRecognitionException() : void from class com.puppycrawl.tools.checkstyle.TreeWalkerTest",
        "type": "Replace Generic With Diamond"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "DetailASTTest.java",
    "refactorings": [{
      "rightSideLineNumber": 124,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.api.DetailASTTest.checkDir.files.listFiles.new FileFilter with file -> (file.getName().endsWith(\".java\") || file.isDirectory()) && !file.getName().endsWith(\"InputGrammar.java\") in method private checkDir(dir File) : void from class com.puppycrawl.tools.checkstyle.api.DetailASTTest",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "GenericWhitespaceCheckTest.java",
    "refactorings": [{
      "rightSideLineNumber": 48,
      "description": "Replace Loop With Pipeline for(final entry: x.entrySet()) with x.entrySet().forEach(Map.Entry::getValue); in method public setUp() : void from class com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "AllChecksTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 149,
        "description": "Replace Loop With Pipeline for(check: checksNames) with checksNames.stream().filter(check -> !checksReferencedInConfig.contains(check)).forEach(check -> { in method public testAllChecksAreReferencedInConfigFile() : void from class com.puppycrawl.tools.checkstyle.internal.AllChecksTest",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 162,
        "description": "Replace Loop With Pipeline for(moduleName: checkstyleModulesNames) with checkstyleModulesNames.stream().filter(moduleName -> !modulesNamesWhichHaveXdocs.contains(moduleName)).forEach(moduleName -> { in method public testAllCheckstyleModulesHaveXdocDocumentation() : void from class com.puppycrawl.tools.checkstyle.internal.AllChecksTest",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 290,
        "description": "Replace Loop With Pipeline for(check: checks) with return checks.stream().map(check -> check.getSimpleName().replace(\"Check\",\"\")).collect(Collectors.toSet()); in method private getSimpleNames(checks Set<Class<?>>) : Set<String> from class com.puppycrawl.tools.checkstyle.internal.AllChecksTest",
        "type": "Replace Loop With Pipeline"
      }
    ],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "XDocsPagesTest.java",
    "refactorings": [{
      "rightSideLineNumber": 394,
      "description": "Replace Loop With Pipeline for(p: new HashSet<>(properties)) with new HashSet<>(properties).stream().filter(p -> UNDOCUMENTED_PROPERTIES.contains(clss.getSimpleName() + \".\" + p)).forEach(properties::remove); in method private validatePropertySection(fileName String, sectionName String, subSection Node, instance Object) : void from class com.puppycrawl.tools.checkstyle.internal.XDocsPagesTest",
      "type": "Replace Loop With Pipeline"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XDocsPagesTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "CommonUtilsTest.java",
    "refactorings": [{
      "rightSideLineNumber": 199,
      "description": "Replace Anonymous With Lambda com.puppycrawl.tools.checkstyle.utils.CommonUtilsTest.testCloseWithException.close.new Closeable with () -> {throw new IOException(\"Test IOException\"); in method public testCloseWithException() : void from class com.puppycrawl.tools.checkstyle.utils.CommonUtilsTest",
      "type": "Replace Anonymous With Lambda"
    }],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "JupiterEngineExecutionContext.java",
    "refactorings": [
      {
        "rightSideLineNumber": 90,
        "description": "Change Method Access Modifier public to package in method package State(executionListener EngineExecutionListener, configurationParameters ConfigurationParameters) from class org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.State",
        "type": "Change Method Access Modifier"
      },
      {
        "rightSideLineNumber": 76,
        "description": "Change Method Access Modifier public to private in method private builder(context JupiterEngineExecutionContext) : Builder from class org.junit.jupiter.engine.execution.JupiterEngineExecutionContext",
        "type": "Change Method Access Modifier"
      }
    ],
    "filePath": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/JupiterEngineExecutionContext.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassTestDescriptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 203,
        "description": "Replace Pipeline With Loop registry.stream(BeforeAllCallback.class).forEach(extension -> executeAndMaskThrowable(() -> extension.beforeAll(context))); with for(callback: registry.toList(BeforeAllCallback.class)) in method private invokeBeforeAllCallbacks(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Replace Pipeline With Loop"
      },
      {
        "rightSideLineNumber": 206,
        "description": "Rename Variable extension : null to callback : BeforeAllCallback in method private invokeBeforeAllCallbacks(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Rename Variable"
      },
      {
        "rightSideLineNumber": 203,
        "description": "Add Parameter throwableCollector : ThrowableCollector in method private invokeBeforeAllCallbacks(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Add Parameter"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Replace Pipeline With Loop this.beforeAllMethods.forEach(method -> executeAndMaskThrowable(() -> executableInvoker.invoke(method,context,registry))); with for(method: this.beforeAllMethods) in method private invokeBeforeAllMethods(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Replace Pipeline With Loop"
      },
      {
        "rightSideLineNumber": 214,
        "description": "Add Parameter throwableCollector : ThrowableCollector in method private invokeBeforeAllMethods(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.jupiter.engine.descriptor.ClassTestDescriptor",
        "type": "Add Parameter"
      }
    ],
    "filePath": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassTestDescriptor.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "BeforeAndAfterAllTests.java",
    "refactorings": [{
      "rightSideLineNumber": 128,
      "description": "Extract Method private assertBeforeAllAndAfterAllCallbacks(testClass Class<?>, testsStarted int, testsSuccessful int, expectedCalls String...) : void extracted from private assertBeforeAllAndAfterAllCallbacks(testClass Class<?>, expectedCalls String...) : void in class org.junit.jupiter.engine.extension.BeforeAndAfterAllTests",
      "type": "Extract Method"
    }],
    "filePath": "junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/extension/BeforeAndAfterAllTests.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "BeforeAndAfterEachTests.java",
    "refactorings": [],
    "filePath": "junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/extension/BeforeAndAfterEachTests.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "HierarchicalTestExecutor.java",
    "refactorings": [{
      "rightSideLineNumber": 80,
      "description": "Extract Variable context : C in method private execute(testDescriptor TestDescriptor, parentContext C) : void from class org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor",
      "type": "Extract Variable"
    }],
    "filePath": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/HierarchicalTestExecutor.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "HierarchicalTestExecutorTests.java",
    "refactorings": [],
    "filePath": "platform-tests/src/test/java/org/junit/platform/engine/support/hierarchical/HierarchicalTestExecutorTests.java",
    "commit": "https://github.com/junit-team/junit5/commit/62c433c14ce9d70fa5b82ef385a6e15c22cc0003",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "LifecycleMethodUtils.java",
    "refactorings": [],
    "filePath": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/LifecycleMethodUtils.java",
    "commit": "https://github.com/junit-team/junit5/commit/6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "main"
  },
  {
    "fileName": "ClassTestDescriptor.java",
    "refactorings": [
      {
        "rightSideLineNumber": 205,
        "description": "Rename Method private registerAnnotatedMethodsAsExtensions(extensionRegistry ExtensionRegistry, annotationType Class<? extends Annotation>, extensionType Class<E>, methodValidator BiConsumer<Class<E>,Method>, extensionSynthesizer BiFunction<ExtensionRegistry,Method,Extension>) : void renamed to private registerMethodsAsExtensions(methods List<Method>, registry ExtensionRegistry, extensionSynthesizer BiFunction<ExtensionRegistry,Method,Extension>) : void in class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Method"
      },
      {
        "rightSideLineNumber": 178,
        "description": "Replace Loop With Pipeline for(method: this.beforeAllMethods) with this.beforeAllMethods.forEach(method -> executeAndMaskThrowable(() -> new MethodInvoker(context,registry).invoke(methodInvocationContext(null,method)))); in method private invokeBeforeAllMethods(registry ExtensionRegistry, context ContainerExtensionContext) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 183,
        "description": "Replace Loop With Pipeline for(method: this.afterAllMethods) with this.afterAllMethods.forEach(method -> throwableCollector.execute(() -> new MethodInvoker(context,registry).invoke(methodInvocationContext(null,method)))); in method private invokeAfterAllMethods(registry ExtensionRegistry, context ContainerExtensionContext, throwableCollector ThrowableCollector) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Replace Loop With Pipeline"
      },
      {
        "rightSideLineNumber": 198,
        "description": "Rename Parameter extensionRegistry : ExtensionRegistry to registry : ExtensionRegistry in method private registerBeforeEachMethodAdapters(registry ExtensionRegistry) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 202,
        "description": "Rename Parameter extensionRegistry : ExtensionRegistry to registry : ExtensionRegistry in method private registerAfterEachMethodAdapters(registry ExtensionRegistry) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Parameter"
      },
      {
        "rightSideLineNumber": 208,
        "description": "Rename Parameter extensionRegistry : ExtensionRegistry to registry : ExtensionRegistry in method private registerMethodsAsExtensions(methods List<Method>, registry ExtensionRegistry, extensionSynthesizer BiFunction<ExtensionRegistry,Method,Extension>) : void from class org.junit.gen5.engine.junit5.descriptor.ClassTestDescriptor",
        "type": "Rename Parameter"
      }
    ],
    "filePath": "junit5-engine/src/main/java/org/junit/gen5/engine/junit5/descriptor/ClassTestDescriptor.java",
    "commit": "https://github.com/junit-team/junit5/commit/6b575f2ee5f02288a774ff0a85ce3a3e3cb6946f",
    "repository": "https://github.com/junit-team/junit5.git",
    "fileType": "test"
  },
  {
    "fileName": "Checker.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Main.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "PackageNamesLoader.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TreeWalker.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "XMLLogger.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractFileSetCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "Check.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "DetailAST.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "DescendantTokenCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TodoCommentCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TrailingCommentCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UncommentedMainCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UpperEllCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UpperEllCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingDeprecatedCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingOverrideCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyCatchBlockCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "LeftCurlyCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RightCurlyCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "HiddenFieldCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalInstantiationCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalTokenCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalTokenTextCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "IllegalTypeCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MagicNumberCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingCtorCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MissingSwitchDefaultCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MultipleStringLiteralsCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "VariableDeclarationUsageDistanceCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "VisibilityModifierCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "RegexpHeaderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CustomImportOrderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ImportOrderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "UnusedImportsCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractExpressionHandler.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CommentsIndentationCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "HandlerFactory.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AtclauseOrderCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocMethodCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocParagraphCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocTypeCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocVariableCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SummaryJavadocCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "WriteTagCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "LineLengthCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "AbstractParenPadCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "EmptyForInitializerPadCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "GenericWhitespaceCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "MethodParamPadCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "OperatorWrapCheck.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressElement.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressWithNearbyCommentFilter.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "SuppressionCommentFilter.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ParseTreeModel.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CheckUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "CommonUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "JavadocUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "TokenUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "main"
  },
  {
    "fileName": "ConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "IndentationConfigurationBuilder.java",
    "refactorings": [],
    "filePath": "src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TokenTypesTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/api/TokenTypesTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "IndentationCheckTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TypeNameCheckTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "CommonUtilsTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "TokenUtilsTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "UtilsTest.java",
    "refactorings": [],
    "filePath": "src/test/java/com/puppycrawl/tools/checkstyle/utils/UtilsTest.java",
    "commit": "https://github.com/checkstyle/checkstyle/commit/cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "fileType": "test"
  },
  {
    "fileName": "DateUtils.java",
    "refactorings": [],
    "filePath": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
    "commit": "https://github.com/apache/commons-lang/commit/d9a2c69a9d1db6072e1d7b7ea4fcbd5c15d20b5d",
    "repository": "https://github.com/apache/commons-lang.git",
    "fileType": "main"
  },
  {
    "fileName": "DateUtilsTest.java",
    "refactorings": [
      {
        "rightSideLineNumber": 704,
        "description": "Split Method public testToCalendarWithDate() : void to [public testToCalendarWithDateNotNull() : void, public testToCalendarWithDateNull() : void] in class org.apache.commons.lang3.time.DateUtilsTest",
        "type": "Split Method"
      },
      {
        "rightSideLineNumber": 721,
        "description": "Split Method public testToCalendarWithTimeZone() : void to [public testToCalendarWithTimeZoneNotNull() : void, public testToCalendarWithTimeZoneNull() : void] in class org.apache.commons.lang3.time.DateUtilsTest",
        "type": "Split Method"
      },
      {
        "rightSideLineNumber": 740,
        "description": "Split Method public testToCalendarWithDateAndTimeZone() : void to [public testToCalendarWithDateAndTimeZoneNotNull() : void, public testToCalendarWithDateAndTimeZoneNull() : void] in class org.apache.commons.lang3.time.DateUtilsTest",
        "type": "Split Method"
      }
    ],
    "filePath": "src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java",
    "commit": "https://github.com/apache/commons-lang/commit/d9a2c69a9d1db6072e1d7b7ea4fcbd5c15d20b5d",
    "repository": "https://github.com/apache/commons-lang.git",
    "fileType": "test"
  }
]